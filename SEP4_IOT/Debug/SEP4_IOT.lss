
SEP4_IOT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000560  00800200  00006e8c  00006f20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006e8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000c93  00800760  00800760  00007480  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00007480  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000074dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000c38  00000000  00000000  0000751c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000f3c5  00000000  00000000  00008154  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003c52  00000000  00000000  00017519  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00007689  00000000  00000000  0001b16b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00002b24  00000000  00000000  000227f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000046de  00000000  00000000  00025318  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000d3fb  00000000  00000000  000299f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000b38  00000000  00000000  00036df1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	e6 c0       	rjmp	.+460    	; 0x1ce <__ctors_end>
       2:	00 00       	nop
       4:	05 c1       	rjmp	.+522    	; 0x210 <__bad_interrupt>
       6:	00 00       	nop
       8:	03 c1       	rjmp	.+518    	; 0x210 <__bad_interrupt>
       a:	00 00       	nop
       c:	01 c1       	rjmp	.+514    	; 0x210 <__bad_interrupt>
       e:	00 00       	nop
      10:	ff c0       	rjmp	.+510    	; 0x210 <__bad_interrupt>
      12:	00 00       	nop
      14:	fd c0       	rjmp	.+506    	; 0x210 <__bad_interrupt>
      16:	00 00       	nop
      18:	fb c0       	rjmp	.+502    	; 0x210 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f9 c0       	rjmp	.+498    	; 0x210 <__bad_interrupt>
      1e:	00 00       	nop
      20:	f7 c0       	rjmp	.+494    	; 0x210 <__bad_interrupt>
      22:	00 00       	nop
      24:	f5 c0       	rjmp	.+490    	; 0x210 <__bad_interrupt>
      26:	00 00       	nop
      28:	f3 c0       	rjmp	.+486    	; 0x210 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	f1 c0       	rjmp	.+482    	; 0x210 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <__vector_12>
      34:	ed c0       	rjmp	.+474    	; 0x210 <__bad_interrupt>
      36:	00 00       	nop
      38:	eb c0       	rjmp	.+470    	; 0x210 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e9 c0       	rjmp	.+466    	; 0x210 <__bad_interrupt>
      3e:	00 00       	nop
      40:	e7 c0       	rjmp	.+462    	; 0x210 <__bad_interrupt>
      42:	00 00       	nop
      44:	e5 c0       	rjmp	.+458    	; 0x210 <__bad_interrupt>
      46:	00 00       	nop
      48:	e3 c0       	rjmp	.+454    	; 0x210 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	e1 c0       	rjmp	.+450    	; 0x210 <__bad_interrupt>
      4e:	00 00       	nop
      50:	df c0       	rjmp	.+446    	; 0x210 <__bad_interrupt>
      52:	00 00       	nop
      54:	dd c0       	rjmp	.+442    	; 0x210 <__bad_interrupt>
      56:	00 00       	nop
      58:	db c0       	rjmp	.+438    	; 0x210 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d9 c0       	rjmp	.+434    	; 0x210 <__bad_interrupt>
      5e:	00 00       	nop
      60:	d7 c0       	rjmp	.+430    	; 0x210 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 7c 2a 	jmp	0x54f8	; 0x54f8 <__vector_25>
      68:	0c 94 ce 2a 	jmp	0x559c	; 0x559c <__vector_26>
      6c:	d1 c0       	rjmp	.+418    	; 0x210 <__bad_interrupt>
      6e:	00 00       	nop
      70:	cf c0       	rjmp	.+414    	; 0x210 <__bad_interrupt>
      72:	00 00       	nop
      74:	cd c0       	rjmp	.+410    	; 0x210 <__bad_interrupt>
      76:	00 00       	nop
      78:	cb c0       	rjmp	.+406    	; 0x210 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c9 c0       	rjmp	.+402    	; 0x210 <__bad_interrupt>
      7e:	00 00       	nop
      80:	c7 c0       	rjmp	.+398    	; 0x210 <__bad_interrupt>
      82:	00 00       	nop
      84:	c5 c0       	rjmp	.+394    	; 0x210 <__bad_interrupt>
      86:	00 00       	nop
      88:	c3 c0       	rjmp	.+390    	; 0x210 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c1 c0       	rjmp	.+386    	; 0x210 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 12 2b 	jmp	0x5624	; 0x5624 <__vector_36>
      94:	0c 94 64 2b 	jmp	0x56c8	; 0x56c8 <__vector_37>
      98:	bb c0       	rjmp	.+374    	; 0x210 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 b0 2f 	jmp	0x5f60	; 0x5f60 <__vector_39>
      a0:	b7 c0       	rjmp	.+366    	; 0x210 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	b5 c0       	rjmp	.+362    	; 0x210 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	b3 c0       	rjmp	.+358    	; 0x210 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	b1 c0       	rjmp	.+354    	; 0x210 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	af c0       	rjmp	.+350    	; 0x210 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	ad c0       	rjmp	.+346    	; 0x210 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	ab c0       	rjmp	.+342    	; 0x210 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	a9 c0       	rjmp	.+338    	; 0x210 <__bad_interrupt>
      be:	00 00       	nop
      c0:	a7 c0       	rjmp	.+334    	; 0x210 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	a5 c0       	rjmp	.+330    	; 0x210 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	a3 c0       	rjmp	.+326    	; 0x210 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 a8 2b 	jmp	0x5750	; 0x5750 <__vector_51>
      d0:	0c 94 fa 2b 	jmp	0x57f4	; 0x57f4 <__vector_52>
      d4:	9d c0       	rjmp	.+314    	; 0x210 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 3e 2c 	jmp	0x587c	; 0x587c <__vector_54>
      dc:	0c 94 90 2c 	jmp	0x5920	; 0x5920 <__vector_55>
      e0:	97 c0       	rjmp	.+302    	; 0x210 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	bf 1f       	adc	r27, r31
      e6:	bf 1f       	adc	r27, r31
      e8:	bf 1f       	adc	r27, r31
      ea:	f6 1f       	adc	r31, r22
      ec:	fe 1f       	adc	r31, r30
      ee:	13 20       	and	r1, r3
      f0:	bf 1f       	adc	r27, r31
      f2:	bf 1f       	adc	r27, r31
      f4:	f6 1f       	adc	r31, r22
      f6:	fe 1f       	adc	r31, r30
      f8:	d2 2f       	mov	r29, r18
      fa:	42 30       	cpi	r20, 0x02	; 2
      fc:	42 30       	cpi	r20, 0x02	; 2
      fe:	42 30       	cpi	r20, 0x02	; 2
     100:	42 30       	cpi	r20, 0x02	; 2
     102:	42 30       	cpi	r20, 0x02	; 2
     104:	42 30       	cpi	r20, 0x02	; 2
     106:	42 30       	cpi	r20, 0x02	; 2
     108:	d2 2f       	mov	r29, r18
     10a:	42 30       	cpi	r20, 0x02	; 2
     10c:	42 30       	cpi	r20, 0x02	; 2
     10e:	42 30       	cpi	r20, 0x02	; 2
     110:	42 30       	cpi	r20, 0x02	; 2
     112:	42 30       	cpi	r20, 0x02	; 2
     114:	42 30       	cpi	r20, 0x02	; 2
     116:	42 30       	cpi	r20, 0x02	; 2
     118:	d4 2f       	mov	r29, r20
     11a:	42 30       	cpi	r20, 0x02	; 2
     11c:	42 30       	cpi	r20, 0x02	; 2
     11e:	42 30       	cpi	r20, 0x02	; 2
     120:	42 30       	cpi	r20, 0x02	; 2
     122:	42 30       	cpi	r20, 0x02	; 2
     124:	42 30       	cpi	r20, 0x02	; 2
     126:	42 30       	cpi	r20, 0x02	; 2
     128:	42 30       	cpi	r20, 0x02	; 2
     12a:	42 30       	cpi	r20, 0x02	; 2
     12c:	42 30       	cpi	r20, 0x02	; 2
     12e:	42 30       	cpi	r20, 0x02	; 2
     130:	42 30       	cpi	r20, 0x02	; 2
     132:	42 30       	cpi	r20, 0x02	; 2
     134:	42 30       	cpi	r20, 0x02	; 2
     136:	42 30       	cpi	r20, 0x02	; 2
     138:	d4 2f       	mov	r29, r20
     13a:	42 30       	cpi	r20, 0x02	; 2
     13c:	42 30       	cpi	r20, 0x02	; 2
     13e:	42 30       	cpi	r20, 0x02	; 2
     140:	42 30       	cpi	r20, 0x02	; 2
     142:	42 30       	cpi	r20, 0x02	; 2
     144:	42 30       	cpi	r20, 0x02	; 2
     146:	42 30       	cpi	r20, 0x02	; 2
     148:	42 30       	cpi	r20, 0x02	; 2
     14a:	42 30       	cpi	r20, 0x02	; 2
     14c:	42 30       	cpi	r20, 0x02	; 2
     14e:	42 30       	cpi	r20, 0x02	; 2
     150:	42 30       	cpi	r20, 0x02	; 2
     152:	42 30       	cpi	r20, 0x02	; 2
     154:	42 30       	cpi	r20, 0x02	; 2
     156:	42 30       	cpi	r20, 0x02	; 2
     158:	3e 30       	cpi	r19, 0x0E	; 14
     15a:	42 30       	cpi	r20, 0x02	; 2
     15c:	42 30       	cpi	r20, 0x02	; 2
     15e:	42 30       	cpi	r20, 0x02	; 2
     160:	42 30       	cpi	r20, 0x02	; 2
     162:	42 30       	cpi	r20, 0x02	; 2
     164:	42 30       	cpi	r20, 0x02	; 2
     166:	42 30       	cpi	r20, 0x02	; 2
     168:	09 30       	cpi	r16, 0x09	; 9
     16a:	42 30       	cpi	r20, 0x02	; 2
     16c:	42 30       	cpi	r20, 0x02	; 2
     16e:	42 30       	cpi	r20, 0x02	; 2
     170:	42 30       	cpi	r20, 0x02	; 2
     172:	42 30       	cpi	r20, 0x02	; 2
     174:	42 30       	cpi	r20, 0x02	; 2
     176:	42 30       	cpi	r20, 0x02	; 2
     178:	42 30       	cpi	r20, 0x02	; 2
     17a:	42 30       	cpi	r20, 0x02	; 2
     17c:	42 30       	cpi	r20, 0x02	; 2
     17e:	42 30       	cpi	r20, 0x02	; 2
     180:	42 30       	cpi	r20, 0x02	; 2
     182:	42 30       	cpi	r20, 0x02	; 2
     184:	42 30       	cpi	r20, 0x02	; 2
     186:	42 30       	cpi	r20, 0x02	; 2
     188:	fd 2f       	mov	r31, r29
     18a:	42 30       	cpi	r20, 0x02	; 2
     18c:	42 30       	cpi	r20, 0x02	; 2
     18e:	42 30       	cpi	r20, 0x02	; 2
     190:	42 30       	cpi	r20, 0x02	; 2
     192:	42 30       	cpi	r20, 0x02	; 2
     194:	42 30       	cpi	r20, 0x02	; 2
     196:	42 30       	cpi	r20, 0x02	; 2
     198:	21 30       	cpi	r18, 0x01	; 1

0000019a <prvIdleTask>:
     19a:	0e 94 00 12 	call	0x2400	; 0x2400 <prvCheckTasksWaitingTermination>
     19e:	80 91 e6 11 	lds	r24, 0x11E6	; 0x8011e6 <pxReadyTasksLists>
     1a2:	82 30       	cpi	r24, 0x02	; 2
     1a4:	10 f0       	brcs	.+4      	; 0x1aa <prvIdleTask+0x10>
     1a6:	0e 94 1f 09 	call	0x123e	; 0x123e <vPortYield>
     1aa:	0e 94 3c 20 	call	0x4078	; 0x4078 <vApplicationIdleHook>
     1ae:	f5 cf       	rjmp	.-22     	; 0x19a <prvIdleTask>

000001b0 <prvTimerTask>:
     1b0:	cf 93       	push	r28
     1b2:	df 93       	push	r29
     1b4:	1f 92       	push	r1
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
     1ba:	ce 01       	movw	r24, r28
     1bc:	01 96       	adiw	r24, 0x01	; 1
     1be:	0e 94 3c 1d 	call	0x3a78	; 0x3a78 <prvGetNextExpireTime>
     1c2:	49 81       	ldd	r20, Y+1	; 0x01
     1c4:	0e 94 31 1f 	call	0x3e62	; 0x3e62 <prvProcessTimerOrBlockTask>
     1c8:	0e 94 88 1f 	call	0x3f10	; 0x3f10 <prvProcessReceivedCommands>
     1cc:	f6 cf       	rjmp	.-20     	; 0x1ba <prvTimerTask+0xa>

000001ce <__ctors_end>:
     1ce:	11 24       	eor	r1, r1
     1d0:	1f be       	out	0x3f, r1	; 63
     1d2:	cf ef       	ldi	r28, 0xFF	; 255
     1d4:	d1 e2       	ldi	r29, 0x21	; 33
     1d6:	de bf       	out	0x3e, r29	; 62
     1d8:	cd bf       	out	0x3d, r28	; 61
     1da:	00 e0       	ldi	r16, 0x00	; 0
     1dc:	0c bf       	out	0x3c, r16	; 60

000001de <__do_copy_data>:
     1de:	17 e0       	ldi	r17, 0x07	; 7
     1e0:	a0 e0       	ldi	r26, 0x00	; 0
     1e2:	b2 e0       	ldi	r27, 0x02	; 2
     1e4:	ec e8       	ldi	r30, 0x8C	; 140
     1e6:	fe e6       	ldi	r31, 0x6E	; 110
     1e8:	00 e0       	ldi	r16, 0x00	; 0
     1ea:	0b bf       	out	0x3b, r16	; 59
     1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <__do_copy_data+0x14>
     1ee:	07 90       	elpm	r0, Z+
     1f0:	0d 92       	st	X+, r0
     1f2:	a0 36       	cpi	r26, 0x60	; 96
     1f4:	b1 07       	cpc	r27, r17
     1f6:	d9 f7       	brne	.-10     	; 0x1ee <__do_copy_data+0x10>

000001f8 <__do_clear_bss>:
     1f8:	23 e1       	ldi	r18, 0x13	; 19
     1fa:	a0 e6       	ldi	r26, 0x60	; 96
     1fc:	b7 e0       	ldi	r27, 0x07	; 7
     1fe:	01 c0       	rjmp	.+2      	; 0x202 <.do_clear_bss_start>

00000200 <.do_clear_bss_loop>:
     200:	1d 92       	st	X+, r1

00000202 <.do_clear_bss_start>:
     202:	a3 3f       	cpi	r26, 0xF3	; 243
     204:	b2 07       	cpc	r27, r18
     206:	e1 f7       	brne	.-8      	; 0x200 <.do_clear_bss_loop>
     208:	0e 94 1e 23 	call	0x463c	; 0x463c <main>
     20c:	0c 94 44 37 	jmp	0x6e88	; 0x6e88 <_exit>

00000210 <__bad_interrupt>:
     210:	f7 ce       	rjmp	.-530    	; 0x0 <__vectors>

00000212 <co2Reader_create>:
{
	if(self == NULL)
		return;
	vTaskDelete(self->co2_task_handle);
	vPortFree(self);	
}
     212:	2f 92       	push	r2
     214:	3f 92       	push	r3
     216:	4f 92       	push	r4
     218:	5f 92       	push	r5
     21a:	6f 92       	push	r6
     21c:	7f 92       	push	r7
     21e:	8f 92       	push	r8
     220:	9f 92       	push	r9
     222:	af 92       	push	r10
     224:	bf 92       	push	r11
     226:	cf 92       	push	r12
     228:	df 92       	push	r13
     22a:	ef 92       	push	r14
     22c:	ff 92       	push	r15
     22e:	0f 93       	push	r16
     230:	1f 93       	push	r17
     232:	cf 93       	push	r28
     234:	df 93       	push	r29
     236:	88 2e       	mov	r8, r24
     238:	96 2e       	mov	r9, r22
     23a:	1a 01       	movw	r2, r20
     23c:	28 01       	movw	r4, r16
     23e:	39 01       	movw	r6, r18
     240:	87 01       	movw	r16, r14
     242:	84 e0       	ldi	r24, 0x04	; 4
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
     24a:	ec 01       	movw	r28, r24
     24c:	00 97       	sbiw	r24, 0x00	; 0
     24e:	71 f1       	breq	.+92     	; 0x2ac <co2Reader_create+0x9a>
     250:	fc 01       	movw	r30, r24
     252:	11 92       	st	Z+, r1
     254:	11 92       	st	Z+, r1
     256:	7f 01       	movw	r14, r30
     258:	30 92 6b 07 	sts	0x076B, r3	; 0x80076b <_event_group_start_measure+0x1>
     25c:	20 92 6a 07 	sts	0x076A, r2	; 0x80076a <_event_group_start_measure>
     260:	40 92 66 07 	sts	0x0766, r4	; 0x800766 <_bit_start_measure>
     264:	50 92 67 07 	sts	0x0767, r5	; 0x800767 <_bit_start_measure+0x1>
     268:	60 92 68 07 	sts	0x0768, r6	; 0x800768 <_bit_start_measure+0x2>
     26c:	70 92 69 07 	sts	0x0769, r7	; 0x800769 <_bit_start_measure+0x3>
     270:	10 93 65 07 	sts	0x0765, r17	; 0x800765 <_event_group_ready+0x1>
     274:	00 93 64 07 	sts	0x0764, r16	; 0x800764 <_event_group_ready>
     278:	a0 92 60 07 	sts	0x0760, r10	; 0x800760 <__data_end>
     27c:	b0 92 61 07 	sts	0x0761, r11	; 0x800761 <__data_end+0x1>
     280:	c0 92 62 07 	sts	0x0762, r12	; 0x800762 <__data_end+0x2>
     284:	d0 92 63 07 	sts	0x0763, r13	; 0x800763 <__data_end+0x3>
     288:	83 e0       	ldi	r24, 0x03	; 3
     28a:	0e 94 a1 28 	call	0x5142	; 0x5142 <mh_z19_initialise>
     28e:	49 2d       	mov	r20, r9
     290:	50 e0       	ldi	r21, 0x00	; 0
     292:	48 53       	subi	r20, 0x38	; 56
     294:	5f 4f       	sbci	r21, 0xFF	; 255
     296:	08 2d       	mov	r16, r8
     298:	9e 01       	movw	r18, r28
     29a:	6f e6       	ldi	r22, 0x6F	; 111
     29c:	72 e0       	ldi	r23, 0x02	; 2
     29e:	8e eb       	ldi	r24, 0xBE	; 190
     2a0:	91 e0       	ldi	r25, 0x01	; 1
     2a2:	0e 94 c7 12 	call	0x258e	; 0x258e <xTaskCreate>
     2a6:	8c 2f       	mov	r24, r28
     2a8:	9d 2f       	mov	r25, r29
     2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <co2Reader_create+0x9e>
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	df 91       	pop	r29
     2b2:	cf 91       	pop	r28
     2b4:	1f 91       	pop	r17
     2b6:	0f 91       	pop	r16
     2b8:	ff 90       	pop	r15
     2ba:	ef 90       	pop	r14
     2bc:	df 90       	pop	r13
     2be:	cf 90       	pop	r12
     2c0:	bf 90       	pop	r11
     2c2:	af 90       	pop	r10
     2c4:	9f 90       	pop	r9
     2c6:	8f 90       	pop	r8
     2c8:	7f 90       	pop	r7
     2ca:	6f 90       	pop	r6
     2cc:	5f 90       	pop	r5
     2ce:	4f 90       	pop	r4
     2d0:	3f 90       	pop	r3
     2d2:	2f 90       	pop	r2
     2d4:	08 95       	ret

000002d6 <co2Reader_measure>:

void co2Reader_measure(co2Reader_t self)
{
     2d6:	cf 92       	push	r12
     2d8:	df 92       	push	r13
     2da:	ef 92       	push	r14
     2dc:	ff 92       	push	r15
     2de:	0f 93       	push	r16
     2e0:	1f 93       	push	r17
     2e2:	cf 93       	push	r28
     2e4:	df 93       	push	r29
     2e6:	ec 01       	movw	r28, r24
	EventBits_t uxBits = xEventGroupWaitBits(_event_group_start_measure, _bit_start_measure, pdTRUE, pdTRUE, portMAX_DELAY);
     2e8:	40 91 66 07 	lds	r20, 0x0766	; 0x800766 <_bit_start_measure>
     2ec:	50 91 67 07 	lds	r21, 0x0767	; 0x800767 <_bit_start_measure+0x1>
     2f0:	60 91 68 07 	lds	r22, 0x0768	; 0x800768 <_bit_start_measure+0x2>
     2f4:	70 91 69 07 	lds	r23, 0x0769	; 0x800769 <_bit_start_measure+0x3>
     2f8:	cc 24       	eor	r12, r12
     2fa:	ca 94       	dec	r12
     2fc:	dc 2c       	mov	r13, r12
     2fe:	76 01       	movw	r14, r12
     300:	01 e0       	ldi	r16, 0x01	; 1
     302:	21 e0       	ldi	r18, 0x01	; 1
     304:	80 91 6a 07 	lds	r24, 0x076A	; 0x80076a <_event_group_start_measure>
     308:	90 91 6b 07 	lds	r25, 0x076B	; 0x80076b <_event_group_start_measure+0x1>
     30c:	43 d4       	rcall	.+2182   	; 0xb94 <xEventGroupWaitBits>
	
	if((uxBits & (_bit_start_measure)) == (_bit_start_measure))
     30e:	00 91 66 07 	lds	r16, 0x0766	; 0x800766 <_bit_start_measure>
     312:	10 91 67 07 	lds	r17, 0x0767	; 0x800767 <_bit_start_measure+0x1>
     316:	20 91 68 07 	lds	r18, 0x0768	; 0x800768 <_bit_start_measure+0x2>
     31a:	30 91 69 07 	lds	r19, 0x0769	; 0x800769 <_bit_start_measure+0x3>
     31e:	dc 01       	movw	r26, r24
     320:	cb 01       	movw	r24, r22
     322:	80 23       	and	r24, r16
     324:	91 23       	and	r25, r17
     326:	a2 23       	and	r26, r18
     328:	b3 23       	and	r27, r19
     32a:	08 17       	cp	r16, r24
     32c:	19 07       	cpc	r17, r25
     32e:	2a 07       	cpc	r18, r26
     330:	3b 07       	cpc	r19, r27
     332:	d9 f4       	brne	.+54     	; 0x36a <co2Reader_measure+0x94>
	{
		mh_z19_returnCode_t co2_measurement_return_code = mh_z19_takeMeassuring();
     334:	0e 94 c6 28 	call	0x518c	; 0x518c <mh_z19_takeMeassuring>
     338:	18 2f       	mov	r17, r24
		vTaskDelay(350);
     33a:	6e e5       	ldi	r22, 0x5E	; 94
     33c:	71 e0       	ldi	r23, 0x01	; 1
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
		if(co2_measurement_return_code == MHZ19_OK)
     346:	11 11       	cpse	r17, r1
     348:	03 c0       	rjmp	.+6      	; 0x350 <co2Reader_measure+0x7a>
			mh_z19_getCo2Ppm(&self->co2_value);
     34a:	ce 01       	movw	r24, r28
     34c:	0e 94 f5 28 	call	0x51ea	; 0x51ea <mh_z19_getCo2Ppm>
		xEventGroupSetBits(_event_group_ready, _bit_ready);
     350:	40 91 60 07 	lds	r20, 0x0760	; 0x800760 <__data_end>
     354:	50 91 61 07 	lds	r21, 0x0761	; 0x800761 <__data_end+0x1>
     358:	60 91 62 07 	lds	r22, 0x0762	; 0x800762 <__data_end+0x2>
     35c:	70 91 63 07 	lds	r23, 0x0763	; 0x800763 <__data_end+0x3>
     360:	80 91 64 07 	lds	r24, 0x0764	; 0x800764 <_event_group_ready>
     364:	90 91 65 07 	lds	r25, 0x0765	; 0x800765 <_event_group_ready+0x1>
     368:	b5 d4       	rcall	.+2410   	; 0xcd4 <xEventGroupSetBits>
	}
}
     36a:	df 91       	pop	r29
     36c:	cf 91       	pop	r28
     36e:	1f 91       	pop	r17
     370:	0f 91       	pop	r16
     372:	ff 90       	pop	r15
     374:	ef 90       	pop	r14
     376:	df 90       	pop	r13
     378:	cf 90       	pop	r12
     37a:	08 95       	ret

0000037c <co2Reader_execute_task>:
static EventBits_t _bit_start_measure;
static EventGroupHandle_t _event_group_ready;
static EventBits_t _bit_ready;

void co2Reader_execute_task(void* self)
{
     37c:	ec 01       	movw	r28, r24
	
	for(;;)
		co2Reader_measure((co2Reader_t)self);
     37e:	ce 01       	movw	r24, r28
     380:	aa df       	rcall	.-172    	; 0x2d6 <co2Reader_measure>
     382:	fd cf       	rjmp	.-6      	; 0x37e <co2Reader_execute_task+0x2>

00000384 <co2reader_getCO2>:
}

uint16_t co2reader_getCO2(co2Reader_t self)
{
	return self->co2_value;
}
     384:	fc 01       	movw	r30, r24
     386:	80 81       	ld	r24, Z
     388:	91 81       	ldd	r25, Z+1	; 0x01
     38a:	08 95       	ret

0000038c <conditions_initialisation>:
}

uint16_t conditions_get_humidity(conditions_t self)
{
	return self->humidity;
}
     38c:	82 e0       	ldi	r24, 0x02	; 2
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
     394:	fc 01       	movw	r30, r24
     396:	00 97       	sbiw	r24, 0x00	; 0
     398:	41 f0       	breq	.+16     	; 0x3aa <conditions_initialisation+0x1e>
     39a:	13 82       	std	Z+3, r1	; 0x03
     39c:	12 82       	std	Z+2, r1	; 0x02
     39e:	15 82       	std	Z+5, r1	; 0x05
     3a0:	14 82       	std	Z+4, r1	; 0x04
     3a2:	11 82       	std	Z+1, r1	; 0x01
     3a4:	10 82       	st	Z, r1
     3a6:	9f 2f       	mov	r25, r31
     3a8:	08 95       	ret
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	08 95       	ret

000003b0 <conditions_set_co2>:
     3b0:	00 97       	sbiw	r24, 0x00	; 0
     3b2:	49 f0       	breq	.+18     	; 0x3c6 <conditions_set_co2+0x16>
     3b4:	9b 01       	movw	r18, r22
     3b6:	28 5c       	subi	r18, 0xC8	; 200
     3b8:	31 09       	sbc	r19, r1
     3ba:	29 34       	cpi	r18, 0x49	; 73
     3bc:	36 42       	sbci	r19, 0x26	; 38
     3be:	18 f4       	brcc	.+6      	; 0x3c6 <conditions_set_co2+0x16>
     3c0:	fc 01       	movw	r30, r24
     3c2:	73 83       	std	Z+3, r23	; 0x03
     3c4:	62 83       	std	Z+2, r22	; 0x02
     3c6:	08 95       	ret

000003c8 <conditions_set_humidity>:
     3c8:	00 97       	sbiw	r24, 0x00	; 0
     3ca:	39 f0       	breq	.+14     	; 0x3da <conditions_set_humidity+0x12>
     3cc:	69 3e       	cpi	r22, 0xE9	; 233
     3ce:	23 e0       	ldi	r18, 0x03	; 3
     3d0:	72 07       	cpc	r23, r18
     3d2:	18 f4       	brcc	.+6      	; 0x3da <conditions_set_humidity+0x12>
     3d4:	fc 01       	movw	r30, r24
     3d6:	71 83       	std	Z+1, r23	; 0x01
     3d8:	60 83       	st	Z, r22
     3da:	08 95       	ret

000003dc <conditions_set_temperature>:
     3dc:	00 97       	sbiw	r24, 0x00	; 0
     3de:	49 f0       	breq	.+18     	; 0x3f2 <conditions_set_temperature+0x16>
     3e0:	9b 01       	movw	r18, r22
     3e2:	20 57       	subi	r18, 0x70	; 112
     3e4:	3e 4f       	sbci	r19, 0xFE	; 254
     3e6:	27 3b       	cpi	r18, 0xB7	; 183
     3e8:	33 40       	sbci	r19, 0x03	; 3
     3ea:	18 f4       	brcc	.+6      	; 0x3f2 <conditions_set_temperature+0x16>
     3ec:	fc 01       	movw	r30, r24
     3ee:	75 83       	std	Z+5, r23	; 0x05
     3f0:	64 83       	std	Z+4, r22	; 0x04
     3f2:	08 95       	ret

000003f4 <conditions_get_co2>:
     3f4:	fc 01       	movw	r30, r24
     3f6:	82 81       	ldd	r24, Z+2	; 0x02
     3f8:	93 81       	ldd	r25, Z+3	; 0x03
     3fa:	08 95       	ret

000003fc <get_conditions_payload>:

lora_driver_payload_t get_conditions_payload(conditions_t self)
{
     3fc:	fc 01       	movw	r30, r24
     3fe:	db 01       	movw	r26, r22
	lora_driver_payload_t payload;
	payload.portNo = 1;
     400:	81 e0       	ldi	r24, 0x01	; 1
     402:	80 83       	st	Z, r24
	payload.len = 6;
     404:	86 e0       	ldi	r24, 0x06	; 6
     406:	81 83       	std	Z+1, r24	; 0x01
	
	int16_t tempData = self->temperature;
     408:	14 96       	adiw	r26, 0x04	; 4
     40a:	8c 91       	ld	r24, X
     40c:	14 97       	sbiw	r26, 0x04	; 4
     40e:	15 96       	adiw	r26, 0x05	; 5
     410:	9c 91       	ld	r25, X
     412:	15 97       	sbiw	r26, 0x05	; 5
	
	payload.bytes[0] = tempData >> 8;
     414:	92 83       	std	Z+2, r25	; 0x02
	payload.bytes[1] = tempData & 0xFF;
     416:	83 83       	std	Z+3, r24	; 0x03

	payload.bytes[2] = self->humidity >> 8;
     418:	8c 91       	ld	r24, X
     41a:	11 96       	adiw	r26, 0x01	; 1
     41c:	9c 91       	ld	r25, X
     41e:	11 97       	sbiw	r26, 0x01	; 1
     420:	94 83       	std	Z+4, r25	; 0x04
	payload.bytes[3] = self->humidity & 0xFF;
     422:	85 83       	std	Z+5, r24	; 0x05
	
	payload.bytes[4] = self->co2 >> 8;
     424:	12 96       	adiw	r26, 0x02	; 2
     426:	8c 91       	ld	r24, X
     428:	12 97       	sbiw	r26, 0x02	; 2
     42a:	13 96       	adiw	r26, 0x03	; 3
     42c:	9c 91       	ld	r25, X
     42e:	96 83       	std	Z+6, r25	; 0x06
	payload.bytes[5] = self->co2 & 0xFF;
     430:	87 83       	std	Z+7, r24	; 0x07
	
	return payload;	
}
     432:	cf 01       	movw	r24, r30
     434:	08 95       	ret

00000436 <get_conditions_simple_payload>:

lora_driver_payload_t get_conditions_simple_payload(conditions_t self)
{
	lora_driver_payload_t payload;
	payload.portNo = 1;
     436:	21 e0       	ldi	r18, 0x01	; 1
     438:	fc 01       	movw	r30, r24
     43a:	20 83       	st	Z, r18
	payload.len = 2;
     43c:	22 e0       	ldi	r18, 0x02	; 2
     43e:	21 83       	std	Z+1, r18	; 0x01
	
	uint16_t one = 0;
	payload.bytes[0] = one >> 6;
     440:	12 82       	std	Z+2, r1	; 0x02
	payload.bytes[1] = one & 0xFF;	
     442:	13 82       	std	Z+3, r1	; 0x03
	return payload;
     444:	08 95       	ret

00000446 <controller_initialise>:
		xSemaphoreTake(_semaphore, portMAX_DELAY);
		_working = value;
		xSemaphoreGive(_semaphore);
	}
	else _working = value;
}
     446:	81 e0       	ldi	r24, 0x01	; 1
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
     44e:	21 e0       	ldi	r18, 0x01	; 1
     450:	89 2b       	or	r24, r25
     452:	09 f4       	brne	.+2      	; 0x456 <controller_initialise+0x10>
     454:	20 e0       	ldi	r18, 0x00	; 0
     456:	20 93 6f 07 	sts	0x076F, r18	; 0x80076f <_working>
     45a:	81 e0       	ldi	r24, 0x01	; 1
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
     462:	81 e0       	ldi	r24, 0x01	; 1
     464:	80 93 6f 07 	sts	0x076F, r24	; 0x80076f <_working>
     468:	10 92 6e 07 	sts	0x076E, r1	; 0x80076e <_ventilation>
     46c:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <xQueueCreateMutex>
     470:	90 93 6d 07 	sts	0x076D, r25	; 0x80076d <_semaphore+0x1>
     474:	80 93 6c 07 	sts	0x076C, r24	; 0x80076c <_semaphore>
     478:	08 95       	ret

0000047a <controller_getWorking>:

void controller_getWorking(bool* working) {
     47a:	0f 93       	push	r16
     47c:	cf 93       	push	r28
     47e:	df 93       	push	r29
	if (_semaphore != NULL) {
     480:	20 91 6c 07 	lds	r18, 0x076C	; 0x80076c <_semaphore>
     484:	30 91 6d 07 	lds	r19, 0x076D	; 0x80076d <_semaphore+0x1>
     488:	21 15       	cp	r18, r1
     48a:	31 05       	cpc	r19, r1
     48c:	b9 f0       	breq	.+46     	; 0x4bc <controller_getWorking+0x42>
     48e:	ec 01       	movw	r28, r24
		xSemaphoreTake(_semaphore, portMAX_DELAY);
     490:	4f ef       	ldi	r20, 0xFF	; 255
     492:	5f ef       	ldi	r21, 0xFF	; 255
     494:	ba 01       	movw	r22, r20
     496:	c9 01       	movw	r24, r18
     498:	0e 94 b1 0c 	call	0x1962	; 0x1962 <xQueueSemaphoreTake>
		*working = _working;
     49c:	80 91 6f 07 	lds	r24, 0x076F	; 0x80076f <_working>
     4a0:	88 83       	st	Y, r24
		xSemaphoreGive(_semaphore);
     4a2:	00 e0       	ldi	r16, 0x00	; 0
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	a9 01       	movw	r20, r18
     4aa:	60 e0       	ldi	r22, 0x00	; 0
     4ac:	70 e0       	ldi	r23, 0x00	; 0
     4ae:	80 91 6c 07 	lds	r24, 0x076C	; 0x80076c <_semaphore>
     4b2:	90 91 6d 07 	lds	r25, 0x076D	; 0x80076d <_semaphore+0x1>
     4b6:	0e 94 37 0b 	call	0x166e	; 0x166e <xQueueGenericSend>
     4ba:	04 c0       	rjmp	.+8      	; 0x4c4 <controller_getWorking+0x4a>
	}
	else *working = _working;
     4bc:	20 91 6f 07 	lds	r18, 0x076F	; 0x80076f <_working>
     4c0:	fc 01       	movw	r30, r24
     4c2:	20 83       	st	Z, r18
}
     4c4:	df 91       	pop	r29
     4c6:	cf 91       	pop	r28
     4c8:	0f 91       	pop	r16
     4ca:	08 95       	ret

000004cc <controller_getVentilation>:

void controller_getVentilation(bool* ventilation) {
     4cc:	0f 93       	push	r16
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
	if (_semaphore != NULL) {
     4d2:	20 91 6c 07 	lds	r18, 0x076C	; 0x80076c <_semaphore>
     4d6:	30 91 6d 07 	lds	r19, 0x076D	; 0x80076d <_semaphore+0x1>
     4da:	21 15       	cp	r18, r1
     4dc:	31 05       	cpc	r19, r1
     4de:	b9 f0       	breq	.+46     	; 0x50e <controller_getVentilation+0x42>
     4e0:	ec 01       	movw	r28, r24
		xSemaphoreTake(_semaphore, portMAX_DELAY);
     4e2:	4f ef       	ldi	r20, 0xFF	; 255
     4e4:	5f ef       	ldi	r21, 0xFF	; 255
     4e6:	ba 01       	movw	r22, r20
     4e8:	c9 01       	movw	r24, r18
     4ea:	0e 94 b1 0c 	call	0x1962	; 0x1962 <xQueueSemaphoreTake>
		*ventilation = _ventilation;
     4ee:	80 91 6e 07 	lds	r24, 0x076E	; 0x80076e <_ventilation>
     4f2:	88 83       	st	Y, r24
		xSemaphoreGive(_semaphore);
     4f4:	00 e0       	ldi	r16, 0x00	; 0
     4f6:	20 e0       	ldi	r18, 0x00	; 0
     4f8:	30 e0       	ldi	r19, 0x00	; 0
     4fa:	a9 01       	movw	r20, r18
     4fc:	60 e0       	ldi	r22, 0x00	; 0
     4fe:	70 e0       	ldi	r23, 0x00	; 0
     500:	80 91 6c 07 	lds	r24, 0x076C	; 0x80076c <_semaphore>
     504:	90 91 6d 07 	lds	r25, 0x076D	; 0x80076d <_semaphore+0x1>
     508:	0e 94 37 0b 	call	0x166e	; 0x166e <xQueueGenericSend>
     50c:	04 c0       	rjmp	.+8      	; 0x516 <controller_getVentilation+0x4a>
	}
	else *ventilation = _ventilation;
     50e:	20 91 6e 07 	lds	r18, 0x076E	; 0x80076e <_ventilation>
     512:	fc 01       	movw	r30, r24
     514:	20 83       	st	Z, r18
}
     516:	df 91       	pop	r29
     518:	cf 91       	pop	r28
     51a:	0f 91       	pop	r16
     51c:	08 95       	ret

0000051e <device_create>:
						EventBits_t bit_start_measure,
						EventGroupHandle_t event_group_ready, 
						EventBits_t bit_ready, 
						co2Reader_t co2Reader, 
						humTempReader_t humAndTempReader, 
						MessageBufferHandle_t uplinkMessageBuffer){
     51e:	2f 92       	push	r2
     520:	3f 92       	push	r3
     522:	4f 92       	push	r4
     524:	5f 92       	push	r5
     526:	6f 92       	push	r6
     528:	7f 92       	push	r7
     52a:	8f 92       	push	r8
     52c:	9f 92       	push	r9
     52e:	af 92       	push	r10
     530:	bf 92       	push	r11
     532:	cf 92       	push	r12
     534:	df 92       	push	r13
     536:	ef 92       	push	r14
     538:	ff 92       	push	r15
     53a:	0f 93       	push	r16
     53c:	1f 93       	push	r17
     53e:	cf 93       	push	r28
     540:	df 93       	push	r29
     542:	00 d0       	rcall	.+0      	; 0x544 <device_create+0x26>
     544:	1f 92       	push	r1
     546:	cd b7       	in	r28, 0x3d	; 61
     548:	de b7       	in	r29, 0x3e	; 62
     54a:	38 2e       	mov	r3, r24
     54c:	26 2e       	mov	r2, r22
     54e:	5c 83       	std	Y+4, r21	; 0x04
     550:	4b 83       	std	Y+3, r20	; 0x03
     552:	28 01       	movw	r4, r16
     554:	39 01       	movw	r6, r18

	device_t _new_device = malloc(sizeof(device));
     556:	88 e0       	ldi	r24, 0x08	; 8
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
     55e:	9a 83       	std	Y+2, r25	; 0x02
     560:	89 83       	std	Y+1, r24	; 0x01
	if (_new_device == NULL)
     562:	00 97       	sbiw	r24, 0x00	; 0
     564:	09 f4       	brne	.+2      	; 0x568 <device_create+0x4a>
     566:	3f c0       	rjmp	.+126    	; 0x5e6 <device_create+0xc8>
	return NULL;

	_new_device->co2_reader = co2Reader;
     568:	fc 01       	movw	r30, r24
     56a:	91 82       	std	Z+1, r9	; 0x01
     56c:	80 82       	st	Z, r8
	_new_device->hum_temper_reader = humAndTempReader;
     56e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     570:	9b 8d       	ldd	r25, Y+27	; 0x1b
     572:	93 83       	std	Z+3, r25	; 0x03
     574:	82 83       	std	Z+2, r24	; 0x02
	conditions_t currentCond = conditions_initialisation();
     576:	0a df       	rcall	.-492    	; 0x38c <conditions_initialisation>
	_new_device->conditions = currentCond;
     578:	e9 81       	ldd	r30, Y+1	; 0x01
     57a:	fa 81       	ldd	r31, Y+2	; 0x02
     57c:	95 83       	std	Z+5, r25	; 0x05
     57e:	84 83       	std	Z+4, r24	; 0x04

	_event_group_start_measure = event_group_start_measure;
     580:	8b 81       	ldd	r24, Y+3	; 0x03
     582:	9c 81       	ldd	r25, Y+4	; 0x04
     584:	90 93 93 07 	sts	0x0793, r25	; 0x800793 <_event_group_start_measure+0x1>
     588:	80 93 92 07 	sts	0x0792, r24	; 0x800792 <_event_group_start_measure>
	_bit_start_measure = bit_start_measure;
     58c:	40 92 8e 07 	sts	0x078E, r4	; 0x80078e <_bit_start_measure>
     590:	50 92 8f 07 	sts	0x078F, r5	; 0x80078f <_bit_start_measure+0x1>
     594:	60 92 90 07 	sts	0x0790, r6	; 0x800790 <_bit_start_measure+0x2>
     598:	70 92 91 07 	sts	0x0791, r7	; 0x800791 <_bit_start_measure+0x3>

	_event_group_ready = event_group_ready;
     59c:	f0 92 8d 07 	sts	0x078D, r15	; 0x80078d <_event_group_ready+0x1>
     5a0:	e0 92 8c 07 	sts	0x078C, r14	; 0x80078c <_event_group_ready>
	_bit_ready = bit_ready;
     5a4:	a0 92 88 07 	sts	0x0788, r10	; 0x800788 <_bit_ready>
     5a8:	b0 92 89 07 	sts	0x0789, r11	; 0x800789 <_bit_ready+0x1>
     5ac:	c0 92 8a 07 	sts	0x078A, r12	; 0x80078a <_bit_ready+0x2>
     5b0:	d0 92 8b 07 	sts	0x078B, r13	; 0x80078b <_bit_ready+0x3>
	
	_uplinkmessageBuffer=uplinkMessageBuffer;
     5b4:	8c 8d       	ldd	r24, Y+28	; 0x1c
     5b6:	9d 8d       	ldd	r25, Y+29	; 0x1d
     5b8:	90 93 87 07 	sts	0x0787, r25	; 0x800787 <_uplinkmessageBuffer+0x1>
     5bc:	80 93 86 07 	sts	0x0786, r24	; 0x800786 <_uplinkmessageBuffer>

	xTaskCreate(
	device_executeTask,
	"Device",
	stack + 200,
     5c0:	42 2d       	mov	r20, r2
     5c2:	50 e0       	ldi	r21, 0x00	; 0
     5c4:	48 53       	subi	r20, 0x38	; 56
     5c6:	5f 4f       	sbci	r21, 0xFF	; 255
	_event_group_ready = event_group_ready;
	_bit_ready = bit_ready;
	
	_uplinkmessageBuffer=uplinkMessageBuffer;

	xTaskCreate(
     5c8:	7f 01       	movw	r14, r30
     5ca:	96 e0       	ldi	r25, 0x06	; 6
     5cc:	e9 0e       	add	r14, r25
     5ce:	f1 1c       	adc	r15, r1
     5d0:	03 2d       	mov	r16, r3
     5d2:	9f 01       	movw	r18, r30
     5d4:	69 e7       	ldi	r22, 0x79	; 121
     5d6:	72 e0       	ldi	r23, 0x02	; 2
     5d8:	83 e1       	ldi	r24, 0x13	; 19
     5da:	94 e0       	ldi	r25, 0x04	; 4
     5dc:	0e 94 c7 12 	call	0x258e	; 0x258e <xTaskCreate>
	_new_device,
	priority,
	&_new_device->handleTask
	);

	return _new_device;
     5e0:	89 81       	ldd	r24, Y+1	; 0x01
     5e2:	9a 81       	ldd	r25, Y+2	; 0x02
     5e4:	02 c0       	rjmp	.+4      	; 0x5ea <device_create+0xcc>
						humTempReader_t humAndTempReader, 
						MessageBufferHandle_t uplinkMessageBuffer){

	device_t _new_device = malloc(sizeof(device));
	if (_new_device == NULL)
	return NULL;
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	90 e0       	ldi	r25, 0x00	; 0
	priority,
	&_new_device->handleTask
	);

	return _new_device;
}
     5ea:	0f 90       	pop	r0
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	df 91       	pop	r29
     5f4:	cf 91       	pop	r28
     5f6:	1f 91       	pop	r17
     5f8:	0f 91       	pop	r16
     5fa:	ff 90       	pop	r15
     5fc:	ef 90       	pop	r14
     5fe:	df 90       	pop	r13
     600:	cf 90       	pop	r12
     602:	bf 90       	pop	r11
     604:	af 90       	pop	r10
     606:	9f 90       	pop	r9
     608:	8f 90       	pop	r8
     60a:	7f 90       	pop	r7
     60c:	6f 90       	pop	r6
     60e:	5f 90       	pop	r5
     610:	4f 90       	pop	r4
     612:	3f 90       	pop	r3
     614:	2f 90       	pop	r2
     616:	08 95       	ret

00000618 <device_startMeasuring>:

void device_startMeasuring(device_t self) {
     618:	af 92       	push	r10
     61a:	bf 92       	push	r11
     61c:	cf 92       	push	r12
     61e:	df 92       	push	r13
     620:	ef 92       	push	r14
     622:	ff 92       	push	r15
     624:	0f 93       	push	r16
     626:	1f 93       	push	r17
     628:	cf 93       	push	r28
     62a:	df 93       	push	r29
     62c:	cd b7       	in	r28, 0x3d	; 61
     62e:	de b7       	in	r29, 0x3e	; 62
     630:	66 97       	sbiw	r28, 0x16	; 22
     632:	0f b6       	in	r0, 0x3f	; 63
     634:	f8 94       	cli
     636:	de bf       	out	0x3e, r29	; 62
     638:	0f be       	out	0x3f, r0	; 63
     63a:	cd bf       	out	0x3d, r28	; 61
     63c:	5c 01       	movw	r10, r24
	bool* works = pvPortMalloc(sizeof(bool));
     63e:	81 e0       	ldi	r24, 0x01	; 1
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	49 d4       	rcall	.+2194   	; 0xed6 <pvPortMalloc>
     644:	8c 01       	movw	r16, r24
	controller_getWorking(works);
     646:	19 df       	rcall	.-462    	; 0x47a <controller_getWorking>
     648:	f8 01       	movw	r30, r16
	if (*works == true)
     64a:	80 81       	ld	r24, Z
     64c:	88 23       	and	r24, r24
     64e:	09 f4       	brne	.+2      	; 0x652 <device_startMeasuring+0x3a>
     650:	b7 c0       	rjmp	.+366    	; 0x7c0 <device_startMeasuring+0x1a8>
     652:	81 e0       	ldi	r24, 0x01	; 1
	{
		bool* ventilate = pvPortMalloc(sizeof(bool));
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	3f d4       	rcall	.+2174   	; 0xed6 <pvPortMalloc>
     658:	8c 01       	movw	r16, r24
		controller_getVentilation(ventilate);
     65a:	38 df       	rcall	.-400    	; 0x4cc <controller_getVentilation>
     65c:	f8 01       	movw	r30, r16
		if(*ventilate == true)
     65e:	80 81       	ld	r24, Z
     660:	88 23       	and	r24, r24
		{
			servo_open_window();
     662:	11 f0       	breq	.+4      	; 0x668 <device_startMeasuring+0x50>
     664:	21 d1       	rcall	.+578    	; 0x8a8 <servo_open_window>
     666:	01 c0       	rjmp	.+2      	; 0x66a <device_startMeasuring+0x52>
		}
		else
		{
			servo_close_window();
     668:	24 d1       	rcall	.+584    	; 0x8b2 <servo_close_window>
     66a:	40 91 8e 07 	lds	r20, 0x078E	; 0x80078e <_bit_start_measure>
		}

		// start measuring
		xEventGroupSetBits(_event_group_start_measure, _bit_start_measure);
     66e:	50 91 8f 07 	lds	r21, 0x078F	; 0x80078f <_bit_start_measure+0x1>
     672:	60 91 90 07 	lds	r22, 0x0790	; 0x800790 <_bit_start_measure+0x2>
     676:	70 91 91 07 	lds	r23, 0x0791	; 0x800791 <_bit_start_measure+0x3>
     67a:	80 91 92 07 	lds	r24, 0x0792	; 0x800792 <_event_group_start_measure>
     67e:	90 91 93 07 	lds	r25, 0x0793	; 0x800793 <_event_group_start_measure+0x1>
     682:	28 d3       	rcall	.+1616   	; 0xcd4 <xEventGroupSetBits>
     684:	40 91 88 07 	lds	r20, 0x0788	; 0x800788 <_bit_ready>

		//wait for sensors to read data
		EventBits_t uxBits = xEventGroupWaitBits(_event_group_ready,
     688:	50 91 89 07 	lds	r21, 0x0789	; 0x800789 <_bit_ready+0x1>
     68c:	60 91 8a 07 	lds	r22, 0x078A	; 0x80078a <_bit_ready+0x2>
     690:	70 91 8b 07 	lds	r23, 0x078B	; 0x80078b <_bit_ready+0x3>
     694:	cc 24       	eor	r12, r12
     696:	ca 94       	dec	r12
     698:	dc 2c       	mov	r13, r12
     69a:	76 01       	movw	r14, r12
     69c:	01 e0       	ldi	r16, 0x01	; 1
     69e:	21 e0       	ldi	r18, 0x01	; 1
     6a0:	80 91 8c 07 	lds	r24, 0x078C	; 0x80078c <_event_group_ready>
     6a4:	90 91 8d 07 	lds	r25, 0x078D	; 0x80078d <_event_group_ready+0x1>
     6a8:	75 d2       	rcall	.+1258   	; 0xb94 <xEventGroupWaitBits>
     6aa:	00 91 88 07 	lds	r16, 0x0788	; 0x800788 <_bit_ready>
		_bit_ready,
		pdTRUE,
		pdTRUE,
		portMAX_DELAY);
		
		if ((uxBits & (_bit_ready)) == (_bit_ready)) {
     6ae:	10 91 89 07 	lds	r17, 0x0789	; 0x800789 <_bit_ready+0x1>
     6b2:	20 91 8a 07 	lds	r18, 0x078A	; 0x80078a <_bit_ready+0x2>
     6b6:	30 91 8b 07 	lds	r19, 0x078B	; 0x80078b <_bit_ready+0x3>
     6ba:	dc 01       	movw	r26, r24
     6bc:	cb 01       	movw	r24, r22
     6be:	80 23       	and	r24, r16
     6c0:	91 23       	and	r25, r17
     6c2:	a2 23       	and	r26, r18
     6c4:	b3 23       	and	r27, r19
     6c6:	08 17       	cp	r16, r24
     6c8:	19 07       	cpc	r17, r25
     6ca:	2a 07       	cpc	r18, r26
     6cc:	3b 07       	cpc	r19, r27
     6ce:	09 f0       	breq	.+2      	; 0x6d2 <device_startMeasuring+0xba>
     6d0:	99 c0       	rjmp	.+306    	; 0x804 <device_startMeasuring+0x1ec>
			conditions_set_co2(self->conditions,co2reader_getCO2(self->co2_reader));
     6d2:	f5 01       	movw	r30, r10
     6d4:	80 81       	ld	r24, Z
     6d6:	91 81       	ldd	r25, Z+1	; 0x01
     6d8:	55 de       	rcall	.-854    	; 0x384 <co2reader_getCO2>
     6da:	bc 01       	movw	r22, r24
     6dc:	f5 01       	movw	r30, r10
     6de:	84 81       	ldd	r24, Z+4	; 0x04
     6e0:	95 81       	ldd	r25, Z+5	; 0x05
     6e2:	66 de       	rcall	.-820    	; 0x3b0 <conditions_set_co2>
			printf("%u", conditions_get_co2(self->co2_reader));
     6e4:	f5 01       	movw	r30, r10
     6e6:	80 81       	ld	r24, Z
     6e8:	91 81       	ldd	r25, Z+1	; 0x01
     6ea:	84 de       	rcall	.-760    	; 0x3f4 <conditions_get_co2>
     6ec:	9f 93       	push	r25
     6ee:	8f 93       	push	r24
     6f0:	80 e8       	ldi	r24, 0x80	; 128
     6f2:	92 e0       	ldi	r25, 0x02	; 2
     6f4:	9f 93       	push	r25
     6f6:	8f 93       	push	r24
     6f8:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
			
			conditions_set_temperature(self->conditions,humTempReader_getTemperature(self->hum_temper_reader));
     6fc:	f5 01       	movw	r30, r10
     6fe:	82 81       	ldd	r24, Z+2	; 0x02
     700:	93 81       	ldd	r25, Z+3	; 0x03
     702:	0e 94 40 21 	call	0x4280	; 0x4280 <humTempReader_getTemperature>
     706:	bc 01       	movw	r22, r24
     708:	f5 01       	movw	r30, r10
     70a:	84 81       	ldd	r24, Z+4	; 0x04
     70c:	95 81       	ldd	r25, Z+5	; 0x05
     70e:	66 de       	rcall	.-820    	; 0x3dc <conditions_set_temperature>
			
			int16_t humidity = humTempReader_getHumidity(self->hum_temper_reader);
     710:	f5 01       	movw	r30, r10
     712:	82 81       	ldd	r24, Z+2	; 0x02
     714:	93 81       	ldd	r25, Z+3	; 0x03
     716:	0e 94 3c 21 	call	0x4278	; 0x4278 <humTempReader_getHumidity>
			conditions_set_humidity(self->conditions, humidity);
     71a:	bc 01       	movw	r22, r24
     71c:	f5 01       	movw	r30, r10
     71e:	84 81       	ldd	r24, Z+4	; 0x04
     720:	95 81       	ldd	r25, Z+5	; 0x05
     722:	52 de       	rcall	.-860    	; 0x3c8 <conditions_set_humidity>
			
			
			printf("CO2 is: %u\n", co2reader_getCO2(self->co2_reader));
     724:	f5 01       	movw	r30, r10
     726:	80 81       	ld	r24, Z
     728:	91 81       	ldd	r25, Z+1	; 0x01
     72a:	2c de       	rcall	.-936    	; 0x384 <co2reader_getCO2>
     72c:	9f 93       	push	r25
     72e:	8f 93       	push	r24
     730:	83 e8       	ldi	r24, 0x83	; 131
     732:	92 e0       	ldi	r25, 0x02	; 2
     734:	9f 93       	push	r25
     736:	8f 93       	push	r24
     738:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
     73c:	f5 01       	movw	r30, r10
			printf("Temperature is: %d\n", humTempReader_getTemperature(self->hum_temper_reader));
     73e:	82 81       	ldd	r24, Z+2	; 0x02
     740:	93 81       	ldd	r25, Z+3	; 0x03
     742:	0e 94 40 21 	call	0x4280	; 0x4280 <humTempReader_getTemperature>
     746:	9f 93       	push	r25
     748:	8f 93       	push	r24
     74a:	8f e8       	ldi	r24, 0x8F	; 143
     74c:	92 e0       	ldi	r25, 0x02	; 2
     74e:	9f 93       	push	r25
     750:	8f 93       	push	r24
     752:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
     756:	f5 01       	movw	r30, r10
			printf("Humidity is: %u\n", humTempReader_getHumidity(self->hum_temper_reader));
     758:	82 81       	ldd	r24, Z+2	; 0x02
     75a:	93 81       	ldd	r25, Z+3	; 0x03
     75c:	0e 94 3c 21 	call	0x4278	; 0x4278 <humTempReader_getHumidity>
     760:	9f 93       	push	r25
     762:	8f 93       	push	r24
     764:	83 ea       	ldi	r24, 0xA3	; 163
     766:	92 e0       	ldi	r25, 0x02	; 2
     768:	9f 93       	push	r25
     76a:	8f 93       	push	r24
     76c:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
			
			/*Perhaps loraPayload is not a good idea to be here*/
			_uplink_payload = get_conditions_payload(self->conditions);
     770:	f5 01       	movw	r30, r10
     772:	64 81       	ldd	r22, Z+4	; 0x04
     774:	75 81       	ldd	r23, Z+5	; 0x05
     776:	ce 01       	movw	r24, r28
     778:	01 96       	adiw	r24, 0x01	; 1
     77a:	40 de       	rcall	.-896    	; 0x3fc <get_conditions_payload>
     77c:	86 e1       	ldi	r24, 0x16	; 22
     77e:	fe 01       	movw	r30, r28
     780:	31 96       	adiw	r30, 0x01	; 1
     782:	a0 e7       	ldi	r26, 0x70	; 112
     784:	b7 e0       	ldi	r27, 0x07	; 7
     786:	01 90       	ld	r0, Z+
     788:	0d 92       	st	X+, r0
     78a:	8a 95       	dec	r24
     78c:	e1 f7       	brne	.-8      	; 0x786 <device_startMeasuring+0x16e>
     78e:	0f ef       	ldi	r16, 0xFF	; 255
			
			xMessageBufferSend(_uplinkmessageBuffer,(void*) &_uplink_payload,sizeof(_uplink_payload),portMAX_DELAY);
     790:	1f ef       	ldi	r17, 0xFF	; 255
     792:	98 01       	movw	r18, r16
     794:	46 e1       	ldi	r20, 0x16	; 22
     796:	50 e0       	ldi	r21, 0x00	; 0
     798:	60 e7       	ldi	r22, 0x70	; 112
     79a:	77 e0       	ldi	r23, 0x07	; 7
     79c:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <_uplinkmessageBuffer>
     7a0:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <_uplinkmessageBuffer+0x1>
     7a4:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <xStreamBufferSend>
     7a8:	60 e3       	ldi	r22, 0x30	; 48
			vTaskDelay(30000);
     7aa:	75 e7       	ldi	r23, 0x75	; 117
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
     7b4:	0f b6       	in	r0, 0x3f	; 63
     7b6:	f8 94       	cli
     7b8:	de bf       	out	0x3e, r29	; 62
     7ba:	0f be       	out	0x3f, r0	; 63
     7bc:	cd bf       	out	0x3d, r28	; 61
     7be:	22 c0       	rjmp	.+68     	; 0x804 <device_startMeasuring+0x1ec>
		}
		//if the device is not on, wait a bit and check if anything is changed
	}
	else
	{
		_uplink_payload = get_conditions_simple_payload(self->conditions);
     7c0:	f5 01       	movw	r30, r10
     7c2:	64 81       	ldd	r22, Z+4	; 0x04
     7c4:	75 81       	ldd	r23, Z+5	; 0x05
     7c6:	ce 01       	movw	r24, r28
     7c8:	01 96       	adiw	r24, 0x01	; 1
     7ca:	35 de       	rcall	.-918    	; 0x436 <get_conditions_simple_payload>
     7cc:	86 e1       	ldi	r24, 0x16	; 22
     7ce:	fe 01       	movw	r30, r28
     7d0:	31 96       	adiw	r30, 0x01	; 1
     7d2:	a0 e7       	ldi	r26, 0x70	; 112
     7d4:	b7 e0       	ldi	r27, 0x07	; 7
     7d6:	01 90       	ld	r0, Z+
     7d8:	0d 92       	st	X+, r0
     7da:	8a 95       	dec	r24
     7dc:	e1 f7       	brne	.-8      	; 0x7d6 <device_startMeasuring+0x1be>
     7de:	0f ef       	ldi	r16, 0xFF	; 255
		xMessageBufferSend(_uplinkmessageBuffer,(void*) &_uplink_payload,sizeof(_uplink_payload),portMAX_DELAY);
     7e0:	1f ef       	ldi	r17, 0xFF	; 255
     7e2:	98 01       	movw	r18, r16
     7e4:	46 e1       	ldi	r20, 0x16	; 22
     7e6:	50 e0       	ldi	r21, 0x00	; 0
     7e8:	60 e7       	ldi	r22, 0x70	; 112
     7ea:	77 e0       	ldi	r23, 0x07	; 7
     7ec:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <_uplinkmessageBuffer>
     7f0:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <_uplinkmessageBuffer+0x1>
     7f4:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <xStreamBufferSend>
     7f8:	60 e3       	ldi	r22, 0x30	; 48
		vTaskDelay(30000);
     7fa:	75 e7       	ldi	r23, 0x75	; 117
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
     804:	66 96       	adiw	r28, 0x16	; 22
	}
}
     806:	0f b6       	in	r0, 0x3f	; 63
     808:	f8 94       	cli
     80a:	de bf       	out	0x3e, r29	; 62
     80c:	0f be       	out	0x3f, r0	; 63
     80e:	cd bf       	out	0x3d, r28	; 61
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	1f 91       	pop	r17
     816:	0f 91       	pop	r16
     818:	ff 90       	pop	r15
     81a:	ef 90       	pop	r14
     81c:	df 90       	pop	r13
     81e:	cf 90       	pop	r12
     820:	bf 90       	pop	r11
     822:	af 90       	pop	r10
     824:	08 95       	ret

00000826 <device_executeTask>:
     826:	ec 01       	movw	r28, r24
}device;

void device_executeTask(void* self) {
	for (;;)
	{
		device_startMeasuring((device_t)self);
     828:	ce 01       	movw	r24, r28
     82a:	f6 de       	rcall	.-532    	; 0x618 <device_startMeasuring>
     82c:	fd cf       	rjmp	.-6      	; 0x828 <device_executeTask+0x2>

0000082e <lora_downLinkHandler_task>:
static lora_driver_payload_t _downlink_payload;

void lora_downLinkHandler_initiateTask(void* messageBuffer){
for(;;)
{
	lora_downLinkHandler_task((MessageBufferHandle_t)messageBuffer);
     82e:	0f 93       	push	r16
     830:	1f 93       	push	r17
     832:	0f ef       	ldi	r16, 0xFF	; 255
     834:	1f ef       	ldi	r17, 0xFF	; 255
     836:	98 01       	movw	r18, r16
     838:	46 e1       	ldi	r20, 0x16	; 22
     83a:	50 e0       	ldi	r21, 0x00	; 0
     83c:	64 e9       	ldi	r22, 0x94	; 148
     83e:	77 e0       	ldi	r23, 0x07	; 7
     840:	0e 94 2c 10 	call	0x2058	; 0x2058 <xStreamBufferReceive>
     844:	e4 e9       	ldi	r30, 0x94	; 148
     846:	f7 e0       	ldi	r31, 0x07	; 7
     848:	21 81       	ldd	r18, Z+1	; 0x01
     84a:	93 81       	ldd	r25, Z+3	; 0x03
     84c:	82 81       	ldd	r24, Z+2	; 0x02
     84e:	1f 92       	push	r1
     850:	2f 93       	push	r18
     852:	1f 92       	push	r1
     854:	9f 93       	push	r25
     856:	1f 92       	push	r1
     858:	8f 93       	push	r24
     85a:	84 eb       	ldi	r24, 0xB4	; 180
     85c:	92 e0       	ldi	r25, 0x02	; 2
     85e:	9f 93       	push	r25
     860:	8f 93       	push	r24
     862:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
     866:	8d b7       	in	r24, 0x3d	; 61
     868:	9e b7       	in	r25, 0x3e	; 62
     86a:	08 96       	adiw	r24, 0x08	; 8
     86c:	0f b6       	in	r0, 0x3f	; 63
     86e:	f8 94       	cli
     870:	9e bf       	out	0x3e, r25	; 62
     872:	0f be       	out	0x3f, r0	; 63
     874:	8d bf       	out	0x3d, r24	; 61
     876:	1f 91       	pop	r17
     878:	0f 91       	pop	r16
     87a:	08 95       	ret

0000087c <lora_downLinkHandler_initialize>:
}
}

void lora_downLinkHandler_initialize(UBaseType_t lora_downLinkHandler_task_priority, 
UBaseType_t stack, MessageBufferHandle_t messageBuffer)
{
     87c:	ef 92       	push	r14
     87e:	ff 92       	push	r15
     880:	0f 93       	push	r16
     882:	9a 01       	movw	r18, r20
	xTaskCreate(
     884:	e1 2c       	mov	r14, r1
     886:	f1 2c       	mov	r15, r1
     888:	08 2f       	mov	r16, r24
     88a:	48 e8       	ldi	r20, 0x88	; 136
     88c:	51 e0       	ldi	r21, 0x01	; 1
     88e:	65 ee       	ldi	r22, 0xE5	; 229
     890:	72 e0       	ldi	r23, 0x02	; 2
     892:	87 e1       	ldi	r24, 0x17	; 23
     894:	94 e0       	ldi	r25, 0x04	; 4
     896:	0e 94 c7 12 	call	0x258e	; 0x258e <xTaskCreate>
	,  "LRULHand"  // A name just for humans
	,  configMINIMAL_STACK_SIZE+200  // This stack size can be checked & adjusted by reading the Stack Highwater
	,  (void*) messageBuffer
	,  lora_downLinkHandler_task_priority  // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );
}
     89a:	0f 91       	pop	r16
     89c:	ff 90       	pop	r15
     89e:	ef 90       	pop	r14
     8a0:	08 95       	ret

000008a2 <servo_initialise>:
// TODO initialize by using the servoNr

// It is possible to use only 0 - J14 or 1 - J13 as servoNr
void servo_initialise()
{
	rc_servo_initialise();
     8a2:	0c 94 1e 29 	jmp	0x523c	; 0x523c <rc_servo_initialise>
     8a6:	08 95       	ret

000008a8 <servo_open_window>:
}

void servo_open_window()
{
	rc_servo_setPosition(1, 100);
     8a8:	64 e6       	ldi	r22, 0x64	; 100
     8aa:	81 e0       	ldi	r24, 0x01	; 1
     8ac:	0c 94 06 29 	jmp	0x520c	; 0x520c <rc_servo_setPosition>
     8b0:	08 95       	ret

000008b2 <servo_close_window>:
}
void servo_close_window()
{
	rc_servo_setPosition(1, -100);
     8b2:	6c e9       	ldi	r22, 0x9C	; 156
     8b4:	81 e0       	ldi	r24, 0x01	; 1
     8b6:	0c 94 06 29 	jmp	0x520c	; 0x520c <rc_servo_setPosition>
     8ba:	08 95       	ret

000008bc <_lora_setup>:
	,  lora_upLinkhandler_task_priority  // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );
}

static void _lora_setup(void)
{
     8bc:	0f 93       	push	r16
     8be:	1f 93       	push	r17
     8c0:	cf 93       	push	r28
     8c2:	df 93       	push	r29
     8c4:	cd b7       	in	r28, 0x3d	; 61
     8c6:	de b7       	in	r29, 0x3e	; 62
     8c8:	64 97       	sbiw	r28, 0x14	; 20
     8ca:	0f b6       	in	r0, 0x3f	; 63
     8cc:	f8 94       	cli
     8ce:	de bf       	out	0x3e, r29	; 62
     8d0:	0f be       	out	0x3f, r0	; 63
     8d2:	cd bf       	out	0x3d, r28	; 61
	
	char _out_buf[20];
	lora_driver_returnCode_t rc;
	status_leds_slowBlink(led_ST2); // OPTIONAL: Led the green led blink slowly while we are setting up LoRa
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <status_leds_slowBlink>

	// Factory reset the transceiver
	printf("FactoryReset >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_rn2483FactoryReset()));
     8da:	0e 94 48 25 	call	0x4a90	; 0x4a90 <lora_driver_rn2483FactoryReset>
     8de:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <lora_driver_mapReturnCodeToText>
     8e2:	9f 93       	push	r25
     8e4:	8f 93       	push	r24
     8e6:	8e ee       	ldi	r24, 0xEE	; 238
     8e8:	92 e0       	ldi	r25, 0x02	; 2
     8ea:	9f 93       	push	r25
     8ec:	8f 93       	push	r24
     8ee:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
	
	// Configure to EU868 LoRaWAN standards
	printf("Configure to EU868 >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_configureToEu868()));
     8f2:	0e 94 c6 26 	call	0x4d8c	; 0x4d8c <lora_driver_configureToEu868>
     8f6:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <lora_driver_mapReturnCodeToText>
     8fa:	9f 93       	push	r25
     8fc:	8f 93       	push	r24
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	93 e0       	ldi	r25, 0x03	; 3
     902:	9f 93       	push	r25
     904:	8f 93       	push	r24
     906:	0e 94 26 34 	call	0x684c	; 0x684c <printf>

	// Get the transceivers HW EUI
	rc = lora_driver_getRn2483Hweui(_out_buf);
     90a:	8e 01       	movw	r16, r28
     90c:	0f 5f       	subi	r16, 0xFF	; 255
     90e:	1f 4f       	sbci	r17, 0xFF	; 255
     910:	c8 01       	movw	r24, r16
     912:	0e 94 5a 25 	call	0x4ab4	; 0x4ab4 <lora_driver_getRn2483Hweui>
	printf("Get HWEUI >%s<: %s\n",lora_driver_mapReturnCodeToText(rc), _out_buf);
     916:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <lora_driver_mapReturnCodeToText>
     91a:	1f 93       	push	r17
     91c:	0f 93       	push	r16
     91e:	9f 93       	push	r25
     920:	8f 93       	push	r24
     922:	8a e1       	ldi	r24, 0x1A	; 26
     924:	93 e0       	ldi	r25, 0x03	; 3
     926:	9f 93       	push	r25
     928:	8f 93       	push	r24
     92a:	0e 94 26 34 	call	0x684c	; 0x684c <printf>

	// Set the HWEUI as DevEUI in the LoRaWAN software stack in the transceiver
	printf("Set DevEUI: %s >%s<\n", _out_buf, lora_driver_mapReturnCodeToText(lora_driver_setDeviceIdentifier(_out_buf)));
     92e:	c8 01       	movw	r24, r16
     930:	0e 94 76 25 	call	0x4aec	; 0x4aec <lora_driver_setDeviceIdentifier>
     934:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <lora_driver_mapReturnCodeToText>
     938:	9f 93       	push	r25
     93a:	8f 93       	push	r24
     93c:	1f 93       	push	r17
     93e:	0f 93       	push	r16
     940:	8e e2       	ldi	r24, 0x2E	; 46
     942:	93 e0       	ldi	r25, 0x03	; 3
     944:	9f 93       	push	r25
     946:	8f 93       	push	r24
     948:	0e 94 26 34 	call	0x684c	; 0x684c <printf>

	// Set Over The Air Activation parameters to be ready to join the LoRaWAN
	printf("Set OTAA Identity appEUI:%s appKEY:%s devEUI:%s >%s<\n", LORA_appEUI, LORA_appKEY, _out_buf, lora_driver_mapReturnCodeToText(lora_driver_setOtaaIdentity(LORA_appEUI,LORA_appKEY,_out_buf)));
     94c:	a8 01       	movw	r20, r16
     94e:	63 e4       	ldi	r22, 0x43	; 67
     950:	73 e0       	ldi	r23, 0x03	; 3
     952:	84 e6       	ldi	r24, 0x64	; 100
     954:	93 e0       	ldi	r25, 0x03	; 3
     956:	0e 94 a4 27 	call	0x4f48	; 0x4f48 <lora_driver_setOtaaIdentity>
     95a:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <lora_driver_mapReturnCodeToText>
     95e:	9f 93       	push	r25
     960:	8f 93       	push	r24
     962:	1f 93       	push	r17
     964:	0f 93       	push	r16
     966:	83 e4       	ldi	r24, 0x43	; 67
     968:	93 e0       	ldi	r25, 0x03	; 3
     96a:	9f 93       	push	r25
     96c:	8f 93       	push	r24
     96e:	84 e6       	ldi	r24, 0x64	; 100
     970:	93 e0       	ldi	r25, 0x03	; 3
     972:	9f 93       	push	r25
     974:	8f 93       	push	r24
     976:	85 e7       	ldi	r24, 0x75	; 117
     978:	93 e0       	ldi	r25, 0x03	; 3
     97a:	9f 93       	push	r25
     97c:	8f 93       	push	r24
     97e:	0e 94 26 34 	call	0x684c	; 0x684c <printf>

	// Save all the MAC settings in the transceiver
	printf("Save mac >%s<\n",lora_driver_mapReturnCodeToText(lora_driver_saveMac()));
     982:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <lora_driver_saveMac>
     986:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <lora_driver_mapReturnCodeToText>
     98a:	9f 93       	push	r25
     98c:	8f 93       	push	r24
     98e:	8b ea       	ldi	r24, 0xAB	; 171
     990:	93 e0       	ldi	r25, 0x03	; 3
     992:	9f 93       	push	r25
     994:	8f 93       	push	r24
     996:	0e 94 26 34 	call	0x684c	; 0x684c <printf>

	// Enable Adaptive Data Rate
	printf("Set Adaptive Data Rate: ON >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_setAdaptiveDataRate(LORA_ON)));
     99a:	0f b6       	in	r0, 0x3f	; 63
     99c:	f8 94       	cli
     99e:	de bf       	out	0x3e, r29	; 62
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	cd bf       	out	0x3d, r28	; 61
     9a4:	81 e0       	ldi	r24, 0x01	; 1
     9a6:	0e 94 a3 26 	call	0x4d46	; 0x4d46 <lora_driver_setAdaptiveDataRate>
     9aa:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <lora_driver_mapReturnCodeToText>
     9ae:	9f 93       	push	r25
     9b0:	8f 93       	push	r24
     9b2:	8a eb       	ldi	r24, 0xBA	; 186
     9b4:	93 e0       	ldi	r25, 0x03	; 3
     9b6:	9f 93       	push	r25
     9b8:	8f 93       	push	r24
     9ba:	0e 94 26 34 	call	0x684c	; 0x684c <printf>

	// Set receiver window1 delay to 500 ms - this is needed if down-link messages will be used
	printf("Set Receiver Delay: %d ms >%s<\n", 500, lora_driver_mapReturnCodeToText(lora_driver_setReceiveDelay(500)));
     9be:	84 ef       	ldi	r24, 0xF4	; 244
     9c0:	91 e0       	ldi	r25, 0x01	; 1
     9c2:	0e 94 ae 26 	call	0x4d5c	; 0x4d5c <lora_driver_setReceiveDelay>
     9c6:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <lora_driver_mapReturnCodeToText>
     9ca:	9f 93       	push	r25
     9cc:	8f 93       	push	r24
     9ce:	81 e0       	ldi	r24, 0x01	; 1
     9d0:	8f 93       	push	r24
     9d2:	84 ef       	ldi	r24, 0xF4	; 244
     9d4:	8f 93       	push	r24
     9d6:	8b ed       	ldi	r24, 0xDB	; 219
     9d8:	93 e0       	ldi	r25, 0x03	; 3
     9da:	9f 93       	push	r25
     9dc:	8f 93       	push	r24
     9de:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
     9e2:	0f b6       	in	r0, 0x3f	; 63
     9e4:	f8 94       	cli
     9e6:	de bf       	out	0x3e, r29	; 62
     9e8:	0f be       	out	0x3f, r0	; 63
     9ea:	cd bf       	out	0x3d, r28	; 61

	// Join the LoRaWAN
	uint8_t maxJoinTriesLeft = 10;
     9ec:	1a e0       	ldi	r17, 0x0A	; 10
	
	do {
		rc = lora_driver_join(LORA_OTAA);
     9ee:	80 e0       	ldi	r24, 0x00	; 0
     9f0:	0e 94 af 25 	call	0x4b5e	; 0x4b5e <lora_driver_join>
     9f4:	08 2f       	mov	r16, r24
		printf("Join Network TriesLeft:%d >%s<\n", maxJoinTriesLeft, lora_driver_mapReturnCodeToText(rc));
     9f6:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <lora_driver_mapReturnCodeToText>
     9fa:	9f 93       	push	r25
     9fc:	8f 93       	push	r24
     9fe:	1f 92       	push	r1
     a00:	1f 93       	push	r17
     a02:	8b ef       	ldi	r24, 0xFB	; 251
     a04:	93 e0       	ldi	r25, 0x03	; 3
     a06:	9f 93       	push	r25
     a08:	8f 93       	push	r24
     a0a:	0e 94 26 34 	call	0x684c	; 0x684c <printf>

		if ( rc != LORA_ACCEPTED)
     a0e:	0f 90       	pop	r0
     a10:	0f 90       	pop	r0
     a12:	0f 90       	pop	r0
     a14:	0f 90       	pop	r0
     a16:	0f 90       	pop	r0
     a18:	0f 90       	pop	r0
     a1a:	08 30       	cpi	r16, 0x08	; 8
     a1c:	59 f0       	breq	.+22     	; 0xa34 <_lora_setup+0x178>
		{
			// Make the red led pulse to tell something went wrong
			status_leds_longPuls(led_ST1); // OPTIONAL
     a1e:	80 e0       	ldi	r24, 0x00	; 0
     a20:	0e 94 ab 2e 	call	0x5d56	; 0x5d56 <status_leds_longPuls>
			// Wait 5 sec and lets try again
			vTaskDelay(pdMS_TO_TICKS(5000UL));
     a24:	66 e3       	ldi	r22, 0x36	; 54
     a26:	71 e0       	ldi	r23, 0x01	; 1
     a28:	80 e0       	ldi	r24, 0x00	; 0
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
		}
		else
		{
			break;
		}
	} while (--maxJoinTriesLeft);
     a30:	11 50       	subi	r17, 0x01	; 1
     a32:	e9 f6       	brne	.-70     	; 0x9ee <_lora_setup+0x132>

	if (rc == LORA_ACCEPTED)
     a34:	08 30       	cpi	r16, 0x08	; 8
     a36:	21 f4       	brne	.+8      	; 0xa40 <_lora_setup+0x184>
	{
		// Connected to LoRaWAN :-)
		// Make the green led steady
		status_leds_ledOn(led_ST2); // OPTIONAL
     a38:	81 e0       	ldi	r24, 0x01	; 1
     a3a:	0e 94 8d 2e 	call	0x5d1a	; 0x5d1a <status_leds_ledOn>
		while (1)
		{
			taskYIELD();
		}
	}
}
     a3e:	08 c0       	rjmp	.+16     	; 0xa50 <_lora_setup+0x194>
	}
	else
	{
		// Something went wrong
		// Turn off the green led
		status_leds_ledOff(led_ST2); // OPTIONAL
     a40:	81 e0       	ldi	r24, 0x01	; 1
     a42:	0e 94 9c 2e 	call	0x5d38	; 0x5d38 <status_leds_ledOff>
		// Make the red led blink fast to tell something went wrong
		status_leds_fastBlink(led_ST1); // OPTIONAL
     a46:	80 e0       	ldi	r24, 0x00	; 0
     a48:	0e 94 6a 2e 	call	0x5cd4	; 0x5cd4 <status_leds_fastBlink>

		// Lets stay here
		while (1)
		{
			taskYIELD();
     a4c:	f8 d3       	rcall	.+2032   	; 0x123e <vPortYield>
     a4e:	fe cf       	rjmp	.-4      	; 0xa4c <_lora_setup+0x190>
		}
	}
}
     a50:	64 96       	adiw	r28, 0x14	; 20
     a52:	0f b6       	in	r0, 0x3f	; 63
     a54:	f8 94       	cli
     a56:	de bf       	out	0x3e, r29	; 62
     a58:	0f be       	out	0x3f, r0	; 63
     a5a:	cd bf       	out	0x3d, r28	; 61
     a5c:	df 91       	pop	r29
     a5e:	cf 91       	pop	r28
     a60:	1f 91       	pop	r17
     a62:	0f 91       	pop	r16
     a64:	08 95       	ret

00000a66 <lora_upLinkHandler_task>:

/*-----------------------------------------------------------*/
void lora_upLinkHandler_task(MessageBufferHandle_t messageBuffer)
{
     a66:	0f 93       	push	r16
     a68:	1f 93       	push	r17
     a6a:	cf 93       	push	r28
     a6c:	df 93       	push	r29
     a6e:	ec 01       	movw	r28, r24
	size_t bytesToSend;
	if (!isSetup)
     a70:	80 91 aa 07 	lds	r24, 0x07AA	; 0x8007aa <isSetup>
     a74:	81 11       	cpse	r24, r1
     a76:	18 c0       	rjmp	.+48     	; 0xaa8 <lora_upLinkHandler_task+0x42>
	{
	// Hardware reset of LoRaWAN transceiver
	lora_driver_resetRn2483(1);
     a78:	81 e0       	ldi	r24, 0x01	; 1
     a7a:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <lora_driver_resetRn2483>
	vTaskDelay(2);
     a7e:	62 e0       	ldi	r22, 0x02	; 2
     a80:	70 e0       	ldi	r23, 0x00	; 0
     a82:	80 e0       	ldi	r24, 0x00	; 0
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
	lora_driver_resetRn2483(0);
     a8a:	80 e0       	ldi	r24, 0x00	; 0
     a8c:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <lora_driver_resetRn2483>
	// Give it a chance to wakeup
	vTaskDelay(150);
     a90:	66 e9       	ldi	r22, 0x96	; 150
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	80 e0       	ldi	r24, 0x00	; 0
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>

	lora_driver_flushBuffers(); // get rid of first version string from module after reset!
     a9c:	0e 94 f3 24 	call	0x49e6	; 0x49e6 <lora_driver_flushBuffers>

	_lora_setup();
     aa0:	0d df       	rcall	.-486    	; 0x8bc <_lora_setup>
	isSetup = true;
     aa2:	81 e0       	ldi	r24, 0x01	; 1
     aa4:	80 93 aa 07 	sts	0x07AA, r24	; 0x8007aa <isSetup>
	}
	_uplink_payload.len = 6;
     aa8:	eb ea       	ldi	r30, 0xAB	; 171
     aaa:	f7 e0       	ldi	r31, 0x07	; 7
     aac:	86 e0       	ldi	r24, 0x06	; 6
     aae:	81 83       	std	Z+1, r24	; 0x01
	_uplink_payload.portNo = 2;
     ab0:	82 e0       	ldi	r24, 0x02	; 2
     ab2:	80 83       	st	Z, r24
	bytesToSend = xMessageBufferReceive(messageBuffer,(void*)&_uplink_payload,sizeof(50),0);
     ab4:	00 e0       	ldi	r16, 0x00	; 0
     ab6:	10 e0       	ldi	r17, 0x00	; 0
     ab8:	98 01       	movw	r18, r16
     aba:	42 e0       	ldi	r20, 0x02	; 2
     abc:	50 e0       	ldi	r21, 0x00	; 0
     abe:	bf 01       	movw	r22, r30
     ac0:	ce 01       	movw	r24, r28
     ac2:	0e 94 2c 10 	call	0x2058	; 0x2058 <xStreamBufferReceive>
     ac6:	ec 01       	movw	r28, r24
	TickType_t xLastWakeTime;
	const TickType_t xFrequency = pdMS_TO_TICKS(300000UL); // Upload message every 5 minutes (300000 ms)
	xLastWakeTime = xTaskGetTickCount();
     ac8:	0e 94 51 13 	call	0x26a2	; 0x26a2 <xTaskGetTickCount>
	
	if (bytesToSend>=sizeof(uint8_t)*2)
     acc:	22 97       	sbiw	r28, 0x02	; 2
     ace:	b0 f0       	brcs	.+44     	; 0xafc <lora_upLinkHandler_task+0x96>
	{
		status_leds_shortPuls(led_ST4);
     ad0:	83 e0       	ldi	r24, 0x03	; 3
     ad2:	0e 94 bd 2e 	call	0x5d7a	; 0x5d7a <status_leds_shortPuls>
		printf("Upload Message >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_sendUploadMessage(false, &_uplink_payload)));
     ad6:	6b ea       	ldi	r22, 0xAB	; 171
     ad8:	77 e0       	ldi	r23, 0x07	; 7
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	0e 94 d8 25 	call	0x4bb0	; 0x4bb0 <lora_driver_sendUploadMessage>
     ae0:	0e 94 c5 27 	call	0x4f8a	; 0x4f8a <lora_driver_mapReturnCodeToText>
     ae4:	9f 93       	push	r25
     ae6:	8f 93       	push	r24
     ae8:	8b e1       	ldi	r24, 0x1B	; 27
     aea:	94 e0       	ldi	r25, 0x04	; 4
     aec:	9f 93       	push	r25
     aee:	8f 93       	push	r24
     af0:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
     af4:	0f 90       	pop	r0
     af6:	0f 90       	pop	r0
     af8:	0f 90       	pop	r0
     afa:	0f 90       	pop	r0
	}
     afc:	df 91       	pop	r29
     afe:	cf 91       	pop	r28
     b00:	1f 91       	pop	r17
     b02:	0f 91       	pop	r16
     b04:	08 95       	ret

00000b06 <lora_upLinkHandler_initialize>:
static lora_driver_payload_t _uplink_payload;
static MessageBufferHandle_t _messageBuffer;
static bool isSetup = false;

void lora_upLinkHandler_initialize(UBaseType_t lora_upLinkhandler_task_priority,UBaseType_t stack,MessageBufferHandle_t messageBuffer)
{
     b06:	ef 92       	push	r14
     b08:	ff 92       	push	r15
     b0a:	0f 93       	push	r16
     b0c:	9a 01       	movw	r18, r20
	_messageBuffer = messageBuffer;
	xTaskCreate(
     b0e:	e1 2c       	mov	r14, r1
     b10:	f1 2c       	mov	r15, r1
     b12:	08 2f       	mov	r16, r24
     b14:	48 e8       	ldi	r20, 0x88	; 136
     b16:	51 e0       	ldi	r21, 0x01	; 1
     b18:	65 ee       	ldi	r22, 0xE5	; 229
     b1a:	72 e0       	ldi	r23, 0x02	; 2
     b1c:	83 e3       	ldi	r24, 0x33	; 51
     b1e:	95 e0       	ldi	r25, 0x05	; 5
     b20:	0e 94 c7 12 	call	0x258e	; 0x258e <xTaskCreate>
	,  "LRULHand"  // A name just for humans
	,  configMINIMAL_STACK_SIZE+200  // This stack size can be checked & adjusted by reading the Stack Highwater
	,  (void*) messageBuffer
	,  lora_upLinkhandler_task_priority  // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );
}
     b24:	0f 91       	pop	r16
     b26:	ff 90       	pop	r15
     b28:	ef 90       	pop	r14
     b2a:	08 95       	ret

00000b2c <prvTestWaitCondition>:
     b2c:	0f 93       	push	r16
     b2e:	01 11       	cpse	r16, r1
     b30:	0c c0       	rjmp	.+24     	; 0xb4a <prvTestWaitCondition+0x1e>
     b32:	dc 01       	movw	r26, r24
     b34:	cb 01       	movw	r24, r22
     b36:	82 23       	and	r24, r18
     b38:	93 23       	and	r25, r19
     b3a:	a4 23       	and	r26, r20
     b3c:	b5 23       	and	r27, r21
     b3e:	89 2b       	or	r24, r25
     b40:	8a 2b       	or	r24, r26
     b42:	8b 2b       	or	r24, r27
     b44:	79 f4       	brne	.+30     	; 0xb64 <prvTestWaitCondition+0x38>
     b46:	80 e0       	ldi	r24, 0x00	; 0
     b48:	10 c0       	rjmp	.+32     	; 0xb6a <prvTestWaitCondition+0x3e>
     b4a:	dc 01       	movw	r26, r24
     b4c:	cb 01       	movw	r24, r22
     b4e:	82 23       	and	r24, r18
     b50:	93 23       	and	r25, r19
     b52:	a4 23       	and	r26, r20
     b54:	b5 23       	and	r27, r21
     b56:	28 17       	cp	r18, r24
     b58:	39 07       	cpc	r19, r25
     b5a:	4a 07       	cpc	r20, r26
     b5c:	5b 07       	cpc	r21, r27
     b5e:	21 f0       	breq	.+8      	; 0xb68 <prvTestWaitCondition+0x3c>
     b60:	80 e0       	ldi	r24, 0x00	; 0
     b62:	03 c0       	rjmp	.+6      	; 0xb6a <prvTestWaitCondition+0x3e>
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	01 c0       	rjmp	.+2      	; 0xb6a <prvTestWaitCondition+0x3e>
     b68:	81 e0       	ldi	r24, 0x01	; 1
     b6a:	0f 91       	pop	r16
     b6c:	08 95       	ret

00000b6e <xEventGroupCreate>:
     b6e:	cf 93       	push	r28
     b70:	df 93       	push	r29
     b72:	8f e0       	ldi	r24, 0x0F	; 15
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	af d1       	rcall	.+862    	; 0xed6 <pvPortMalloc>
     b78:	ec 01       	movw	r28, r24
     b7a:	00 97       	sbiw	r24, 0x00	; 0
     b7c:	39 f0       	breq	.+14     	; 0xb8c <xEventGroupCreate+0x1e>
     b7e:	fc 01       	movw	r30, r24
     b80:	11 92       	st	Z+, r1
     b82:	11 92       	st	Z+, r1
     b84:	11 92       	st	Z+, r1
     b86:	11 92       	st	Z+, r1
     b88:	cf 01       	movw	r24, r30
     b8a:	8b d2       	rcall	.+1302   	; 0x10a2 <vListInitialise>
     b8c:	ce 01       	movw	r24, r28
     b8e:	df 91       	pop	r29
     b90:	cf 91       	pop	r28
     b92:	08 95       	ret

00000b94 <xEventGroupWaitBits>:
     b94:	2f 92       	push	r2
     b96:	3f 92       	push	r3
     b98:	4f 92       	push	r4
     b9a:	5f 92       	push	r5
     b9c:	6f 92       	push	r6
     b9e:	7f 92       	push	r7
     ba0:	8f 92       	push	r8
     ba2:	9f 92       	push	r9
     ba4:	af 92       	push	r10
     ba6:	bf 92       	push	r11
     ba8:	cf 92       	push	r12
     baa:	df 92       	push	r13
     bac:	ef 92       	push	r14
     bae:	ff 92       	push	r15
     bb0:	0f 93       	push	r16
     bb2:	1f 93       	push	r17
     bb4:	cf 93       	push	r28
     bb6:	df 93       	push	r29
     bb8:	ec 01       	movw	r28, r24
     bba:	4a 01       	movw	r8, r20
     bbc:	5b 01       	movw	r10, r22
     bbe:	62 2e       	mov	r6, r18
     bc0:	70 2e       	mov	r7, r16
     bc2:	0e 94 4b 13 	call	0x2696	; 0x2696 <vTaskSuspendAll>
     bc6:	28 80       	ld	r2, Y
     bc8:	39 80       	ldd	r3, Y+1	; 0x01
     bca:	4a 80       	ldd	r4, Y+2	; 0x02
     bcc:	5b 80       	ldd	r5, Y+3	; 0x03
     bce:	a5 01       	movw	r20, r10
     bd0:	94 01       	movw	r18, r8
     bd2:	c2 01       	movw	r24, r4
     bd4:	b1 01       	movw	r22, r2
     bd6:	aa df       	rcall	.-172    	; 0xb2c <prvTestWaitCondition>
     bd8:	88 23       	and	r24, r24
     bda:	a1 f0       	breq	.+40     	; 0xc04 <xEventGroupWaitBits+0x70>
     bdc:	66 20       	and	r6, r6
     bde:	89 f1       	breq	.+98     	; 0xc42 <xEventGroupWaitBits+0xae>
     be0:	d5 01       	movw	r26, r10
     be2:	c4 01       	movw	r24, r8
     be4:	80 95       	com	r24
     be6:	90 95       	com	r25
     be8:	a0 95       	com	r26
     bea:	b0 95       	com	r27
     bec:	82 21       	and	r24, r2
     bee:	93 21       	and	r25, r3
     bf0:	a4 21       	and	r26, r4
     bf2:	b5 21       	and	r27, r5
     bf4:	88 83       	st	Y, r24
     bf6:	99 83       	std	Y+1, r25	; 0x01
     bf8:	aa 83       	std	Y+2, r26	; 0x02
     bfa:	bb 83       	std	Y+3, r27	; 0x03
     bfc:	c1 2c       	mov	r12, r1
     bfe:	d1 2c       	mov	r13, r1
     c00:	76 01       	movw	r14, r12
     c02:	22 c0       	rjmp	.+68     	; 0xc48 <xEventGroupWaitBits+0xb4>
     c04:	c1 14       	cp	r12, r1
     c06:	d1 04       	cpc	r13, r1
     c08:	e1 04       	cpc	r14, r1
     c0a:	f1 04       	cpc	r15, r1
     c0c:	e9 f0       	breq	.+58     	; 0xc48 <xEventGroupWaitBits+0xb4>
     c0e:	61 10       	cpse	r6, r1
     c10:	04 c0       	rjmp	.+8      	; 0xc1a <xEventGroupWaitBits+0x86>
     c12:	40 e0       	ldi	r20, 0x00	; 0
     c14:	50 e0       	ldi	r21, 0x00	; 0
     c16:	ba 01       	movw	r22, r20
     c18:	04 c0       	rjmp	.+8      	; 0xc22 <xEventGroupWaitBits+0x8e>
     c1a:	40 e0       	ldi	r20, 0x00	; 0
     c1c:	50 e0       	ldi	r21, 0x00	; 0
     c1e:	60 e0       	ldi	r22, 0x00	; 0
     c20:	71 e0       	ldi	r23, 0x01	; 1
     c22:	71 10       	cpse	r7, r1
     c24:	74 60       	ori	r23, 0x04	; 4
     c26:	48 29       	or	r20, r8
     c28:	59 29       	or	r21, r9
     c2a:	6a 29       	or	r22, r10
     c2c:	7b 29       	or	r23, r11
     c2e:	97 01       	movw	r18, r14
     c30:	86 01       	movw	r16, r12
     c32:	ce 01       	movw	r24, r28
     c34:	04 96       	adiw	r24, 0x04	; 4
     c36:	0e 94 63 16 	call	0x2cc6	; 0x2cc6 <vTaskPlaceOnUnorderedEventList>
     c3a:	21 2c       	mov	r2, r1
     c3c:	31 2c       	mov	r3, r1
     c3e:	21 01       	movw	r4, r2
     c40:	03 c0       	rjmp	.+6      	; 0xc48 <xEventGroupWaitBits+0xb4>
     c42:	c1 2c       	mov	r12, r1
     c44:	d1 2c       	mov	r13, r1
     c46:	76 01       	movw	r14, r12
     c48:	0e 94 8b 14 	call	0x2916	; 0x2916 <xTaskResumeAll>
     c4c:	cd 28       	or	r12, r13
     c4e:	ce 28       	or	r12, r14
     c50:	cf 28       	or	r12, r15
     c52:	59 f1       	breq	.+86     	; 0xcaa <xEventGroupWaitBits+0x116>
     c54:	81 11       	cpse	r24, r1
     c56:	01 c0       	rjmp	.+2      	; 0xc5a <xEventGroupWaitBits+0xc6>
     c58:	f2 d2       	rcall	.+1508   	; 0x123e <vPortYield>
     c5a:	0e 94 25 1a 	call	0x344a	; 0x344a <uxTaskResetEventItemValue>
     c5e:	6b 01       	movw	r12, r22
     c60:	7c 01       	movw	r14, r24
     c62:	91 fd       	sbrc	r25, 1
     c64:	1f c0       	rjmp	.+62     	; 0xca4 <xEventGroupWaitBits+0x110>
     c66:	0f b6       	in	r0, 0x3f	; 63
     c68:	f8 94       	cli
     c6a:	0f 92       	push	r0
     c6c:	c8 80       	ld	r12, Y
     c6e:	d9 80       	ldd	r13, Y+1	; 0x01
     c70:	ea 80       	ldd	r14, Y+2	; 0x02
     c72:	fb 80       	ldd	r15, Y+3	; 0x03
     c74:	07 2d       	mov	r16, r7
     c76:	a5 01       	movw	r20, r10
     c78:	94 01       	movw	r18, r8
     c7a:	c7 01       	movw	r24, r14
     c7c:	b6 01       	movw	r22, r12
     c7e:	56 df       	rcall	.-340    	; 0xb2c <prvTestWaitCondition>
     c80:	88 23       	and	r24, r24
     c82:	71 f0       	breq	.+28     	; 0xca0 <xEventGroupWaitBits+0x10c>
     c84:	66 20       	and	r6, r6
     c86:	61 f0       	breq	.+24     	; 0xca0 <xEventGroupWaitBits+0x10c>
     c88:	80 94       	com	r8
     c8a:	90 94       	com	r9
     c8c:	a0 94       	com	r10
     c8e:	b0 94       	com	r11
     c90:	8c 20       	and	r8, r12
     c92:	9d 20       	and	r9, r13
     c94:	ae 20       	and	r10, r14
     c96:	bf 20       	and	r11, r15
     c98:	88 82       	st	Y, r8
     c9a:	99 82       	std	Y+1, r9	; 0x01
     c9c:	aa 82       	std	Y+2, r10	; 0x02
     c9e:	bb 82       	std	Y+3, r11	; 0x03
     ca0:	0f 90       	pop	r0
     ca2:	0f be       	out	0x3f, r0	; 63
     ca4:	16 01       	movw	r2, r12
     ca6:	27 01       	movw	r4, r14
     ca8:	55 24       	eor	r5, r5
     caa:	c2 01       	movw	r24, r4
     cac:	b1 01       	movw	r22, r2
     cae:	df 91       	pop	r29
     cb0:	cf 91       	pop	r28
     cb2:	1f 91       	pop	r17
     cb4:	0f 91       	pop	r16
     cb6:	ff 90       	pop	r15
     cb8:	ef 90       	pop	r14
     cba:	df 90       	pop	r13
     cbc:	cf 90       	pop	r12
     cbe:	bf 90       	pop	r11
     cc0:	af 90       	pop	r10
     cc2:	9f 90       	pop	r9
     cc4:	8f 90       	pop	r8
     cc6:	7f 90       	pop	r7
     cc8:	6f 90       	pop	r6
     cca:	5f 90       	pop	r5
     ccc:	4f 90       	pop	r4
     cce:	3f 90       	pop	r3
     cd0:	2f 90       	pop	r2
     cd2:	08 95       	ret

00000cd4 <xEventGroupSetBits>:
     cd4:	4f 92       	push	r4
     cd6:	5f 92       	push	r5
     cd8:	6f 92       	push	r6
     cda:	7f 92       	push	r7
     cdc:	af 92       	push	r10
     cde:	bf 92       	push	r11
     ce0:	cf 92       	push	r12
     ce2:	df 92       	push	r13
     ce4:	ef 92       	push	r14
     ce6:	ff 92       	push	r15
     ce8:	0f 93       	push	r16
     cea:	1f 93       	push	r17
     cec:	cf 93       	push	r28
     cee:	df 93       	push	r29
     cf0:	ec 01       	movw	r28, r24
     cf2:	6a 01       	movw	r12, r20
     cf4:	7b 01       	movw	r14, r22
     cf6:	8c 01       	movw	r16, r24
     cf8:	09 5f       	subi	r16, 0xF9	; 249
     cfa:	1f 4f       	sbci	r17, 0xFF	; 255
     cfc:	0e 94 4b 13 	call	0x2696	; 0x2696 <vTaskSuspendAll>
     d00:	eb 85       	ldd	r30, Y+11	; 0x0b
     d02:	fc 85       	ldd	r31, Y+12	; 0x0c
     d04:	88 81       	ld	r24, Y
     d06:	99 81       	ldd	r25, Y+1	; 0x01
     d08:	aa 81       	ldd	r26, Y+2	; 0x02
     d0a:	bb 81       	ldd	r27, Y+3	; 0x03
     d0c:	c8 2a       	or	r12, r24
     d0e:	d9 2a       	or	r13, r25
     d10:	ea 2a       	or	r14, r26
     d12:	fb 2a       	or	r15, r27
     d14:	c8 82       	st	Y, r12
     d16:	d9 82       	std	Y+1, r13	; 0x01
     d18:	ea 82       	std	Y+2, r14	; 0x02
     d1a:	fb 82       	std	Y+3, r15	; 0x03
     d1c:	c1 2c       	mov	r12, r1
     d1e:	d1 2c       	mov	r13, r1
     d20:	76 01       	movw	r14, r12
     d22:	3d c0       	rjmp	.+122    	; 0xd9e <xEventGroupSetBits+0xca>
     d24:	a4 80       	ldd	r10, Z+4	; 0x04
     d26:	b5 80       	ldd	r11, Z+5	; 0x05
     d28:	80 81       	ld	r24, Z
     d2a:	91 81       	ldd	r25, Z+1	; 0x01
     d2c:	a2 81       	ldd	r26, Z+2	; 0x02
     d2e:	b3 81       	ldd	r27, Z+3	; 0x03
     d30:	ac 01       	movw	r20, r24
     d32:	bd 01       	movw	r22, r26
     d34:	77 27       	eor	r23, r23
     d36:	b2 fd       	sbrc	r27, 2
     d38:	0e c0       	rjmp	.+28     	; 0xd56 <xEventGroupSetBits+0x82>
     d3a:	48 80       	ld	r4, Y
     d3c:	59 80       	ldd	r5, Y+1	; 0x01
     d3e:	6a 80       	ldd	r6, Y+2	; 0x02
     d40:	7b 80       	ldd	r7, Y+3	; 0x03
     d42:	44 22       	and	r4, r20
     d44:	55 22       	and	r5, r21
     d46:	66 22       	and	r6, r22
     d48:	77 22       	and	r7, r23
     d4a:	45 28       	or	r4, r5
     d4c:	46 28       	or	r4, r6
     d4e:	47 28       	or	r4, r7
     d50:	89 f4       	brne	.+34     	; 0xd74 <xEventGroupSetBits+0xa0>
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	12 c0       	rjmp	.+36     	; 0xd7a <xEventGroupSetBits+0xa6>
     d56:	48 80       	ld	r4, Y
     d58:	59 80       	ldd	r5, Y+1	; 0x01
     d5a:	6a 80       	ldd	r6, Y+2	; 0x02
     d5c:	7b 80       	ldd	r7, Y+3	; 0x03
     d5e:	44 22       	and	r4, r20
     d60:	55 22       	and	r5, r21
     d62:	66 22       	and	r6, r22
     d64:	77 22       	and	r7, r23
     d66:	44 15       	cp	r20, r4
     d68:	55 05       	cpc	r21, r5
     d6a:	66 05       	cpc	r22, r6
     d6c:	77 05       	cpc	r23, r7
     d6e:	21 f0       	breq	.+8      	; 0xd78 <xEventGroupSetBits+0xa4>
     d70:	20 e0       	ldi	r18, 0x00	; 0
     d72:	03 c0       	rjmp	.+6      	; 0xd7a <xEventGroupSetBits+0xa6>
     d74:	21 e0       	ldi	r18, 0x01	; 1
     d76:	01 c0       	rjmp	.+2      	; 0xd7a <xEventGroupSetBits+0xa6>
     d78:	21 e0       	ldi	r18, 0x01	; 1
     d7a:	22 23       	and	r18, r18
     d7c:	71 f0       	breq	.+28     	; 0xd9a <xEventGroupSetBits+0xc6>
     d7e:	b0 ff       	sbrs	r27, 0
     d80:	04 c0       	rjmp	.+8      	; 0xd8a <xEventGroupSetBits+0xb6>
     d82:	c4 2a       	or	r12, r20
     d84:	d5 2a       	or	r13, r21
     d86:	e6 2a       	or	r14, r22
     d88:	f7 2a       	or	r15, r23
     d8a:	48 81       	ld	r20, Y
     d8c:	59 81       	ldd	r21, Y+1	; 0x01
     d8e:	6a 81       	ldd	r22, Y+2	; 0x02
     d90:	7b 81       	ldd	r23, Y+3	; 0x03
     d92:	72 60       	ori	r23, 0x02	; 2
     d94:	cf 01       	movw	r24, r30
     d96:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <vTaskRemoveFromUnorderedEventList>
     d9a:	ea 2d       	mov	r30, r10
     d9c:	fb 2d       	mov	r31, r11
     d9e:	e0 17       	cp	r30, r16
     da0:	f1 07       	cpc	r31, r17
     da2:	09 f0       	breq	.+2      	; 0xda6 <xEventGroupSetBits+0xd2>
     da4:	bf cf       	rjmp	.-130    	; 0xd24 <xEventGroupSetBits+0x50>
     da6:	c0 94       	com	r12
     da8:	d0 94       	com	r13
     daa:	e0 94       	com	r14
     dac:	f0 94       	com	r15
     dae:	88 81       	ld	r24, Y
     db0:	99 81       	ldd	r25, Y+1	; 0x01
     db2:	aa 81       	ldd	r26, Y+2	; 0x02
     db4:	bb 81       	ldd	r27, Y+3	; 0x03
     db6:	c8 22       	and	r12, r24
     db8:	d9 22       	and	r13, r25
     dba:	ea 22       	and	r14, r26
     dbc:	fb 22       	and	r15, r27
     dbe:	c8 82       	st	Y, r12
     dc0:	d9 82       	std	Y+1, r13	; 0x01
     dc2:	ea 82       	std	Y+2, r14	; 0x02
     dc4:	fb 82       	std	Y+3, r15	; 0x03
     dc6:	0e 94 8b 14 	call	0x2916	; 0x2916 <xTaskResumeAll>
     dca:	68 81       	ld	r22, Y
     dcc:	79 81       	ldd	r23, Y+1	; 0x01
     dce:	8a 81       	ldd	r24, Y+2	; 0x02
     dd0:	9b 81       	ldd	r25, Y+3	; 0x03
     dd2:	df 91       	pop	r29
     dd4:	cf 91       	pop	r28
     dd6:	1f 91       	pop	r17
     dd8:	0f 91       	pop	r16
     dda:	ff 90       	pop	r15
     ddc:	ef 90       	pop	r14
     dde:	df 90       	pop	r13
     de0:	cf 90       	pop	r12
     de2:	bf 90       	pop	r11
     de4:	af 90       	pop	r10
     de6:	7f 90       	pop	r7
     de8:	6f 90       	pop	r6
     dea:	5f 90       	pop	r5
     dec:	4f 90       	pop	r4
     dee:	08 95       	ret

00000df0 <prvHeapInit>:
     df0:	ed ec       	ldi	r30, 0xCD	; 205
     df2:	f7 e0       	ldi	r31, 0x07	; 7
     df4:	a1 ed       	ldi	r26, 0xD1	; 209
     df6:	b7 e0       	ldi	r27, 0x07	; 7
     df8:	b1 83       	std	Z+1, r27	; 0x01
     dfa:	a0 83       	st	Z, r26
     dfc:	13 82       	std	Z+3, r1	; 0x03
     dfe:	12 82       	std	Z+2, r1	; 0x02
     e00:	e1 e9       	ldi	r30, 0x91	; 145
     e02:	f1 e1       	ldi	r31, 0x11	; 17
     e04:	f0 93 cc 07 	sts	0x07CC, r31	; 0x8007cc <pxEnd+0x1>
     e08:	e0 93 cb 07 	sts	0x07CB, r30	; 0x8007cb <pxEnd>
     e0c:	13 82       	std	Z+3, r1	; 0x03
     e0e:	12 82       	std	Z+2, r1	; 0x02
     e10:	11 82       	std	Z+1, r1	; 0x01
     e12:	10 82       	st	Z, r1
     e14:	80 ec       	ldi	r24, 0xC0	; 192
     e16:	99 e0       	ldi	r25, 0x09	; 9
     e18:	13 96       	adiw	r26, 0x03	; 3
     e1a:	9c 93       	st	X, r25
     e1c:	8e 93       	st	-X, r24
     e1e:	12 97       	sbiw	r26, 0x02	; 2
     e20:	ed 93       	st	X+, r30
     e22:	fc 93       	st	X, r31
     e24:	90 93 c8 07 	sts	0x07C8, r25	; 0x8007c8 <xMinimumEverFreeBytesRemaining+0x1>
     e28:	80 93 c7 07 	sts	0x07C7, r24	; 0x8007c7 <xMinimumEverFreeBytesRemaining>
     e2c:	90 93 ca 07 	sts	0x07CA, r25	; 0x8007ca <xFreeBytesRemaining+0x1>
     e30:	80 93 c9 07 	sts	0x07C9, r24	; 0x8007c9 <xFreeBytesRemaining>
     e34:	80 e0       	ldi	r24, 0x00	; 0
     e36:	90 e8       	ldi	r25, 0x80	; 128
     e38:	90 93 c2 07 	sts	0x07C2, r25	; 0x8007c2 <xBlockAllocatedBit+0x1>
     e3c:	80 93 c1 07 	sts	0x07C1, r24	; 0x8007c1 <xBlockAllocatedBit>
     e40:	08 95       	ret

00000e42 <prvInsertBlockIntoFreeList>:
     e42:	cf 93       	push	r28
     e44:	df 93       	push	r29
     e46:	ec 01       	movw	r28, r24
     e48:	ad ec       	ldi	r26, 0xCD	; 205
     e4a:	b7 e0       	ldi	r27, 0x07	; 7
     e4c:	01 c0       	rjmp	.+2      	; 0xe50 <prvInsertBlockIntoFreeList+0xe>
     e4e:	df 01       	movw	r26, r30
     e50:	ed 91       	ld	r30, X+
     e52:	fc 91       	ld	r31, X
     e54:	11 97       	sbiw	r26, 0x01	; 1
     e56:	ec 17       	cp	r30, r28
     e58:	fd 07       	cpc	r31, r29
     e5a:	c8 f3       	brcs	.-14     	; 0xe4e <prvInsertBlockIntoFreeList+0xc>
     e5c:	12 96       	adiw	r26, 0x02	; 2
     e5e:	8d 91       	ld	r24, X+
     e60:	9c 91       	ld	r25, X
     e62:	13 97       	sbiw	r26, 0x03	; 3
     e64:	9d 01       	movw	r18, r26
     e66:	28 0f       	add	r18, r24
     e68:	39 1f       	adc	r19, r25
     e6a:	c2 17       	cp	r28, r18
     e6c:	d3 07       	cpc	r29, r19
     e6e:	49 f4       	brne	.+18     	; 0xe82 <prvInsertBlockIntoFreeList+0x40>
     e70:	2a 81       	ldd	r18, Y+2	; 0x02
     e72:	3b 81       	ldd	r19, Y+3	; 0x03
     e74:	82 0f       	add	r24, r18
     e76:	93 1f       	adc	r25, r19
     e78:	13 96       	adiw	r26, 0x03	; 3
     e7a:	9c 93       	st	X, r25
     e7c:	8e 93       	st	-X, r24
     e7e:	12 97       	sbiw	r26, 0x02	; 2
     e80:	ed 01       	movw	r28, r26
     e82:	8a 81       	ldd	r24, Y+2	; 0x02
     e84:	9b 81       	ldd	r25, Y+3	; 0x03
     e86:	9e 01       	movw	r18, r28
     e88:	28 0f       	add	r18, r24
     e8a:	39 1f       	adc	r19, r25
     e8c:	e2 17       	cp	r30, r18
     e8e:	f3 07       	cpc	r31, r19
     e90:	c1 f4       	brne	.+48     	; 0xec2 <prvInsertBlockIntoFreeList+0x80>
     e92:	20 91 cb 07 	lds	r18, 0x07CB	; 0x8007cb <pxEnd>
     e96:	30 91 cc 07 	lds	r19, 0x07CC	; 0x8007cc <pxEnd+0x1>
     e9a:	e2 17       	cp	r30, r18
     e9c:	f3 07       	cpc	r31, r19
     e9e:	71 f0       	breq	.+28     	; 0xebc <prvInsertBlockIntoFreeList+0x7a>
     ea0:	22 81       	ldd	r18, Z+2	; 0x02
     ea2:	33 81       	ldd	r19, Z+3	; 0x03
     ea4:	82 0f       	add	r24, r18
     ea6:	93 1f       	adc	r25, r19
     ea8:	9b 83       	std	Y+3, r25	; 0x03
     eaa:	8a 83       	std	Y+2, r24	; 0x02
     eac:	ed 91       	ld	r30, X+
     eae:	fc 91       	ld	r31, X
     eb0:	11 97       	sbiw	r26, 0x01	; 1
     eb2:	80 81       	ld	r24, Z
     eb4:	91 81       	ldd	r25, Z+1	; 0x01
     eb6:	99 83       	std	Y+1, r25	; 0x01
     eb8:	88 83       	st	Y, r24
     eba:	05 c0       	rjmp	.+10     	; 0xec6 <prvInsertBlockIntoFreeList+0x84>
     ebc:	39 83       	std	Y+1, r19	; 0x01
     ebe:	28 83       	st	Y, r18
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <prvInsertBlockIntoFreeList+0x84>
     ec2:	f9 83       	std	Y+1, r31	; 0x01
     ec4:	e8 83       	st	Y, r30
     ec6:	ca 17       	cp	r28, r26
     ec8:	db 07       	cpc	r29, r27
     eca:	11 f0       	breq	.+4      	; 0xed0 <prvInsertBlockIntoFreeList+0x8e>
     ecc:	cd 93       	st	X+, r28
     ece:	dc 93       	st	X, r29
     ed0:	df 91       	pop	r29
     ed2:	cf 91       	pop	r28
     ed4:	08 95       	ret

00000ed6 <pvPortMalloc>:
     ed6:	ef 92       	push	r14
     ed8:	ff 92       	push	r15
     eda:	0f 93       	push	r16
     edc:	1f 93       	push	r17
     ede:	cf 93       	push	r28
     ee0:	df 93       	push	r29
     ee2:	8c 01       	movw	r16, r24
     ee4:	0e 94 4b 13 	call	0x2696	; 0x2696 <vTaskSuspendAll>
     ee8:	80 91 cb 07 	lds	r24, 0x07CB	; 0x8007cb <pxEnd>
     eec:	90 91 cc 07 	lds	r25, 0x07CC	; 0x8007cc <pxEnd+0x1>
     ef0:	89 2b       	or	r24, r25
     ef2:	09 f4       	brne	.+2      	; 0xef6 <pvPortMalloc+0x20>
     ef4:	7d df       	rcall	.-262    	; 0xdf0 <prvHeapInit>
     ef6:	80 91 c1 07 	lds	r24, 0x07C1	; 0x8007c1 <xBlockAllocatedBit>
     efa:	90 91 c2 07 	lds	r25, 0x07C2	; 0x8007c2 <xBlockAllocatedBit+0x1>
     efe:	80 23       	and	r24, r16
     f00:	91 23       	and	r25, r17
     f02:	89 2b       	or	r24, r25
     f04:	09 f0       	breq	.+2      	; 0xf08 <pvPortMalloc+0x32>
     f06:	76 c0       	rjmp	.+236    	; 0xff4 <pvPortMalloc+0x11e>
     f08:	01 15       	cp	r16, r1
     f0a:	11 05       	cpc	r17, r1
     f0c:	49 f0       	breq	.+18     	; 0xf20 <pvPortMalloc+0x4a>
     f0e:	c8 01       	movw	r24, r16
     f10:	04 96       	adiw	r24, 0x04	; 4
     f12:	08 17       	cp	r16, r24
     f14:	19 07       	cpc	r17, r25
     f16:	18 f0       	brcs	.+6      	; 0xf1e <pvPortMalloc+0x48>
     f18:	00 e0       	ldi	r16, 0x00	; 0
     f1a:	10 e0       	ldi	r17, 0x00	; 0
     f1c:	01 c0       	rjmp	.+2      	; 0xf20 <pvPortMalloc+0x4a>
     f1e:	8c 01       	movw	r16, r24
     f20:	01 15       	cp	r16, r1
     f22:	11 05       	cpc	r17, r1
     f24:	09 f4       	brne	.+2      	; 0xf28 <pvPortMalloc+0x52>
     f26:	69 c0       	rjmp	.+210    	; 0xffa <pvPortMalloc+0x124>
     f28:	80 91 c9 07 	lds	r24, 0x07C9	; 0x8007c9 <xFreeBytesRemaining>
     f2c:	90 91 ca 07 	lds	r25, 0x07CA	; 0x8007ca <xFreeBytesRemaining+0x1>
     f30:	80 17       	cp	r24, r16
     f32:	91 07       	cpc	r25, r17
     f34:	08 f4       	brcc	.+2      	; 0xf38 <pvPortMalloc+0x62>
     f36:	64 c0       	rjmp	.+200    	; 0x1000 <__EEPROM_REGION_LENGTH__>
     f38:	c0 91 cd 07 	lds	r28, 0x07CD	; 0x8007cd <xStart>
     f3c:	d0 91 ce 07 	lds	r29, 0x07CE	; 0x8007ce <xStart+0x1>
     f40:	ed ec       	ldi	r30, 0xCD	; 205
     f42:	f7 e0       	ldi	r31, 0x07	; 7
     f44:	02 c0       	rjmp	.+4      	; 0xf4a <pvPortMalloc+0x74>
     f46:	fe 01       	movw	r30, r28
     f48:	ec 01       	movw	r28, r24
     f4a:	8a 81       	ldd	r24, Y+2	; 0x02
     f4c:	9b 81       	ldd	r25, Y+3	; 0x03
     f4e:	80 17       	cp	r24, r16
     f50:	91 07       	cpc	r25, r17
     f52:	20 f4       	brcc	.+8      	; 0xf5c <pvPortMalloc+0x86>
     f54:	88 81       	ld	r24, Y
     f56:	99 81       	ldd	r25, Y+1	; 0x01
     f58:	00 97       	sbiw	r24, 0x00	; 0
     f5a:	a9 f7       	brne	.-22     	; 0xf46 <pvPortMalloc+0x70>
     f5c:	80 91 cb 07 	lds	r24, 0x07CB	; 0x8007cb <pxEnd>
     f60:	90 91 cc 07 	lds	r25, 0x07CC	; 0x8007cc <pxEnd+0x1>
     f64:	c8 17       	cp	r28, r24
     f66:	d9 07       	cpc	r29, r25
     f68:	09 f4       	brne	.+2      	; 0xf6c <pvPortMalloc+0x96>
     f6a:	4d c0       	rjmp	.+154    	; 0x1006 <__EEPROM_REGION_LENGTH__+0x6>
     f6c:	e0 80       	ld	r14, Z
     f6e:	f1 80       	ldd	r15, Z+1	; 0x01
     f70:	84 e0       	ldi	r24, 0x04	; 4
     f72:	e8 0e       	add	r14, r24
     f74:	f1 1c       	adc	r15, r1
     f76:	88 81       	ld	r24, Y
     f78:	99 81       	ldd	r25, Y+1	; 0x01
     f7a:	91 83       	std	Z+1, r25	; 0x01
     f7c:	80 83       	st	Z, r24
     f7e:	2a 81       	ldd	r18, Y+2	; 0x02
     f80:	3b 81       	ldd	r19, Y+3	; 0x03
     f82:	20 1b       	sub	r18, r16
     f84:	31 0b       	sbc	r19, r17
     f86:	29 30       	cpi	r18, 0x09	; 9
     f88:	31 05       	cpc	r19, r1
     f8a:	48 f0       	brcs	.+18     	; 0xf9e <pvPortMalloc+0xc8>
     f8c:	ce 01       	movw	r24, r28
     f8e:	80 0f       	add	r24, r16
     f90:	91 1f       	adc	r25, r17
     f92:	fc 01       	movw	r30, r24
     f94:	33 83       	std	Z+3, r19	; 0x03
     f96:	22 83       	std	Z+2, r18	; 0x02
     f98:	1b 83       	std	Y+3, r17	; 0x03
     f9a:	0a 83       	std	Y+2, r16	; 0x02
     f9c:	52 df       	rcall	.-348    	; 0xe42 <prvInsertBlockIntoFreeList>
     f9e:	2a 81       	ldd	r18, Y+2	; 0x02
     fa0:	3b 81       	ldd	r19, Y+3	; 0x03
     fa2:	80 91 c9 07 	lds	r24, 0x07C9	; 0x8007c9 <xFreeBytesRemaining>
     fa6:	90 91 ca 07 	lds	r25, 0x07CA	; 0x8007ca <xFreeBytesRemaining+0x1>
     faa:	82 1b       	sub	r24, r18
     fac:	93 0b       	sbc	r25, r19
     fae:	90 93 ca 07 	sts	0x07CA, r25	; 0x8007ca <xFreeBytesRemaining+0x1>
     fb2:	80 93 c9 07 	sts	0x07C9, r24	; 0x8007c9 <xFreeBytesRemaining>
     fb6:	40 91 c7 07 	lds	r20, 0x07C7	; 0x8007c7 <xMinimumEverFreeBytesRemaining>
     fba:	50 91 c8 07 	lds	r21, 0x07C8	; 0x8007c8 <xMinimumEverFreeBytesRemaining+0x1>
     fbe:	84 17       	cp	r24, r20
     fc0:	95 07       	cpc	r25, r21
     fc2:	20 f4       	brcc	.+8      	; 0xfcc <pvPortMalloc+0xf6>
     fc4:	90 93 c8 07 	sts	0x07C8, r25	; 0x8007c8 <xMinimumEverFreeBytesRemaining+0x1>
     fc8:	80 93 c7 07 	sts	0x07C7, r24	; 0x8007c7 <xMinimumEverFreeBytesRemaining>
     fcc:	80 91 c1 07 	lds	r24, 0x07C1	; 0x8007c1 <xBlockAllocatedBit>
     fd0:	90 91 c2 07 	lds	r25, 0x07C2	; 0x8007c2 <xBlockAllocatedBit+0x1>
     fd4:	28 2b       	or	r18, r24
     fd6:	39 2b       	or	r19, r25
     fd8:	3b 83       	std	Y+3, r19	; 0x03
     fda:	2a 83       	std	Y+2, r18	; 0x02
     fdc:	19 82       	std	Y+1, r1	; 0x01
     fde:	18 82       	st	Y, r1
     fe0:	80 91 c5 07 	lds	r24, 0x07C5	; 0x8007c5 <xNumberOfSuccessfulAllocations>
     fe4:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <xNumberOfSuccessfulAllocations+0x1>
     fe8:	01 96       	adiw	r24, 0x01	; 1
     fea:	90 93 c6 07 	sts	0x07C6, r25	; 0x8007c6 <xNumberOfSuccessfulAllocations+0x1>
     fee:	80 93 c5 07 	sts	0x07C5, r24	; 0x8007c5 <xNumberOfSuccessfulAllocations>
     ff2:	0b c0       	rjmp	.+22     	; 0x100a <__EEPROM_REGION_LENGTH__+0xa>
     ff4:	e1 2c       	mov	r14, r1
     ff6:	f1 2c       	mov	r15, r1
     ff8:	08 c0       	rjmp	.+16     	; 0x100a <__EEPROM_REGION_LENGTH__+0xa>
     ffa:	e1 2c       	mov	r14, r1
     ffc:	f1 2c       	mov	r15, r1
     ffe:	05 c0       	rjmp	.+10     	; 0x100a <__EEPROM_REGION_LENGTH__+0xa>
    1000:	e1 2c       	mov	r14, r1
    1002:	f1 2c       	mov	r15, r1
    1004:	02 c0       	rjmp	.+4      	; 0x100a <__EEPROM_REGION_LENGTH__+0xa>
    1006:	e1 2c       	mov	r14, r1
    1008:	f1 2c       	mov	r15, r1
    100a:	0e 94 8b 14 	call	0x2916	; 0x2916 <xTaskResumeAll>
    100e:	e1 14       	cp	r14, r1
    1010:	f1 04       	cpc	r15, r1
    1012:	11 f4       	brne	.+4      	; 0x1018 <__EEPROM_REGION_LENGTH__+0x18>
    1014:	0e 94 48 20 	call	0x4090	; 0x4090 <vApplicationMallocFailedHook>
    1018:	c7 01       	movw	r24, r14
    101a:	df 91       	pop	r29
    101c:	cf 91       	pop	r28
    101e:	1f 91       	pop	r17
    1020:	0f 91       	pop	r16
    1022:	ff 90       	pop	r15
    1024:	ef 90       	pop	r14
    1026:	08 95       	ret

00001028 <vPortFree>:
    1028:	0f 93       	push	r16
    102a:	1f 93       	push	r17
    102c:	cf 93       	push	r28
    102e:	df 93       	push	r29
    1030:	00 97       	sbiw	r24, 0x00	; 0
    1032:	91 f1       	breq	.+100    	; 0x1098 <vPortFree+0x70>
    1034:	ec 01       	movw	r28, r24
    1036:	24 97       	sbiw	r28, 0x04	; 4
    1038:	4a 81       	ldd	r20, Y+2	; 0x02
    103a:	5b 81       	ldd	r21, Y+3	; 0x03
    103c:	20 91 c1 07 	lds	r18, 0x07C1	; 0x8007c1 <xBlockAllocatedBit>
    1040:	30 91 c2 07 	lds	r19, 0x07C2	; 0x8007c2 <xBlockAllocatedBit+0x1>
    1044:	ba 01       	movw	r22, r20
    1046:	62 23       	and	r22, r18
    1048:	73 23       	and	r23, r19
    104a:	67 2b       	or	r22, r23
    104c:	29 f1       	breq	.+74     	; 0x1098 <vPortFree+0x70>
    104e:	68 81       	ld	r22, Y
    1050:	79 81       	ldd	r23, Y+1	; 0x01
    1052:	67 2b       	or	r22, r23
    1054:	09 f5       	brne	.+66     	; 0x1098 <vPortFree+0x70>
    1056:	20 95       	com	r18
    1058:	30 95       	com	r19
    105a:	24 23       	and	r18, r20
    105c:	35 23       	and	r19, r21
    105e:	3b 83       	std	Y+3, r19	; 0x03
    1060:	2a 83       	std	Y+2, r18	; 0x02
    1062:	0e 94 4b 13 	call	0x2696	; 0x2696 <vTaskSuspendAll>
    1066:	8a 81       	ldd	r24, Y+2	; 0x02
    1068:	9b 81       	ldd	r25, Y+3	; 0x03
    106a:	20 91 c9 07 	lds	r18, 0x07C9	; 0x8007c9 <xFreeBytesRemaining>
    106e:	30 91 ca 07 	lds	r19, 0x07CA	; 0x8007ca <xFreeBytesRemaining+0x1>
    1072:	82 0f       	add	r24, r18
    1074:	93 1f       	adc	r25, r19
    1076:	90 93 ca 07 	sts	0x07CA, r25	; 0x8007ca <xFreeBytesRemaining+0x1>
    107a:	80 93 c9 07 	sts	0x07C9, r24	; 0x8007c9 <xFreeBytesRemaining>
    107e:	ce 01       	movw	r24, r28
    1080:	e0 de       	rcall	.-576    	; 0xe42 <prvInsertBlockIntoFreeList>
    1082:	80 91 c3 07 	lds	r24, 0x07C3	; 0x8007c3 <xNumberOfSuccessfulFrees>
    1086:	90 91 c4 07 	lds	r25, 0x07C4	; 0x8007c4 <xNumberOfSuccessfulFrees+0x1>
    108a:	01 96       	adiw	r24, 0x01	; 1
    108c:	90 93 c4 07 	sts	0x07C4, r25	; 0x8007c4 <xNumberOfSuccessfulFrees+0x1>
    1090:	80 93 c3 07 	sts	0x07C3, r24	; 0x8007c3 <xNumberOfSuccessfulFrees>
    1094:	0e 94 8b 14 	call	0x2916	; 0x2916 <xTaskResumeAll>
    1098:	df 91       	pop	r29
    109a:	cf 91       	pop	r28
    109c:	1f 91       	pop	r17
    109e:	0f 91       	pop	r16
    10a0:	08 95       	ret

000010a2 <vListInitialise>:
    10a2:	fc 01       	movw	r30, r24
    10a4:	03 96       	adiw	r24, 0x03	; 3
    10a6:	92 83       	std	Z+2, r25	; 0x02
    10a8:	81 83       	std	Z+1, r24	; 0x01
    10aa:	4f ef       	ldi	r20, 0xFF	; 255
    10ac:	5f ef       	ldi	r21, 0xFF	; 255
    10ae:	ba 01       	movw	r22, r20
    10b0:	43 83       	std	Z+3, r20	; 0x03
    10b2:	54 83       	std	Z+4, r21	; 0x04
    10b4:	65 83       	std	Z+5, r22	; 0x05
    10b6:	76 83       	std	Z+6, r23	; 0x06
    10b8:	90 87       	std	Z+8, r25	; 0x08
    10ba:	87 83       	std	Z+7, r24	; 0x07
    10bc:	92 87       	std	Z+10, r25	; 0x0a
    10be:	81 87       	std	Z+9, r24	; 0x09
    10c0:	10 82       	st	Z, r1
    10c2:	08 95       	ret

000010c4 <vListInitialiseItem>:
    10c4:	fc 01       	movw	r30, r24
    10c6:	13 86       	std	Z+11, r1	; 0x0b
    10c8:	12 86       	std	Z+10, r1	; 0x0a
    10ca:	08 95       	ret

000010cc <vListInsert>:
    10cc:	0f 93       	push	r16
    10ce:	1f 93       	push	r17
    10d0:	cf 93       	push	r28
    10d2:	df 93       	push	r29
    10d4:	eb 01       	movw	r28, r22
    10d6:	08 81       	ld	r16, Y
    10d8:	19 81       	ldd	r17, Y+1	; 0x01
    10da:	2a 81       	ldd	r18, Y+2	; 0x02
    10dc:	3b 81       	ldd	r19, Y+3	; 0x03
    10de:	0f 3f       	cpi	r16, 0xFF	; 255
    10e0:	4f ef       	ldi	r20, 0xFF	; 255
    10e2:	14 07       	cpc	r17, r20
    10e4:	24 07       	cpc	r18, r20
    10e6:	34 07       	cpc	r19, r20
    10e8:	21 f4       	brne	.+8      	; 0x10f2 <vListInsert+0x26>
    10ea:	fc 01       	movw	r30, r24
    10ec:	a1 85       	ldd	r26, Z+9	; 0x09
    10ee:	b2 85       	ldd	r27, Z+10	; 0x0a
    10f0:	11 c0       	rjmp	.+34     	; 0x1114 <vListInsert+0x48>
    10f2:	dc 01       	movw	r26, r24
    10f4:	13 96       	adiw	r26, 0x03	; 3
    10f6:	01 c0       	rjmp	.+2      	; 0x10fa <vListInsert+0x2e>
    10f8:	df 01       	movw	r26, r30
    10fa:	14 96       	adiw	r26, 0x04	; 4
    10fc:	ed 91       	ld	r30, X+
    10fe:	fc 91       	ld	r31, X
    1100:	15 97       	sbiw	r26, 0x05	; 5
    1102:	40 81       	ld	r20, Z
    1104:	51 81       	ldd	r21, Z+1	; 0x01
    1106:	62 81       	ldd	r22, Z+2	; 0x02
    1108:	73 81       	ldd	r23, Z+3	; 0x03
    110a:	04 17       	cp	r16, r20
    110c:	15 07       	cpc	r17, r21
    110e:	26 07       	cpc	r18, r22
    1110:	37 07       	cpc	r19, r23
    1112:	90 f7       	brcc	.-28     	; 0x10f8 <vListInsert+0x2c>
    1114:	14 96       	adiw	r26, 0x04	; 4
    1116:	ed 91       	ld	r30, X+
    1118:	fc 91       	ld	r31, X
    111a:	15 97       	sbiw	r26, 0x05	; 5
    111c:	fd 83       	std	Y+5, r31	; 0x05
    111e:	ec 83       	std	Y+4, r30	; 0x04
    1120:	d7 83       	std	Z+7, r29	; 0x07
    1122:	c6 83       	std	Z+6, r28	; 0x06
    1124:	bf 83       	std	Y+7, r27	; 0x07
    1126:	ae 83       	std	Y+6, r26	; 0x06
    1128:	15 96       	adiw	r26, 0x05	; 5
    112a:	dc 93       	st	X, r29
    112c:	ce 93       	st	-X, r28
    112e:	14 97       	sbiw	r26, 0x04	; 4
    1130:	9b 87       	std	Y+11, r25	; 0x0b
    1132:	8a 87       	std	Y+10, r24	; 0x0a
    1134:	fc 01       	movw	r30, r24
    1136:	20 81       	ld	r18, Z
    1138:	2f 5f       	subi	r18, 0xFF	; 255
    113a:	20 83       	st	Z, r18
    113c:	df 91       	pop	r29
    113e:	cf 91       	pop	r28
    1140:	1f 91       	pop	r17
    1142:	0f 91       	pop	r16
    1144:	08 95       	ret

00001146 <uxListRemove>:
    1146:	cf 93       	push	r28
    1148:	df 93       	push	r29
    114a:	fc 01       	movw	r30, r24
    114c:	a2 85       	ldd	r26, Z+10	; 0x0a
    114e:	b3 85       	ldd	r27, Z+11	; 0x0b
    1150:	c4 81       	ldd	r28, Z+4	; 0x04
    1152:	d5 81       	ldd	r29, Z+5	; 0x05
    1154:	86 81       	ldd	r24, Z+6	; 0x06
    1156:	97 81       	ldd	r25, Z+7	; 0x07
    1158:	9f 83       	std	Y+7, r25	; 0x07
    115a:	8e 83       	std	Y+6, r24	; 0x06
    115c:	c6 81       	ldd	r28, Z+6	; 0x06
    115e:	d7 81       	ldd	r29, Z+7	; 0x07
    1160:	84 81       	ldd	r24, Z+4	; 0x04
    1162:	95 81       	ldd	r25, Z+5	; 0x05
    1164:	9d 83       	std	Y+5, r25	; 0x05
    1166:	8c 83       	std	Y+4, r24	; 0x04
    1168:	11 96       	adiw	r26, 0x01	; 1
    116a:	8d 91       	ld	r24, X+
    116c:	9c 91       	ld	r25, X
    116e:	12 97       	sbiw	r26, 0x02	; 2
    1170:	e8 17       	cp	r30, r24
    1172:	f9 07       	cpc	r31, r25
    1174:	31 f4       	brne	.+12     	; 0x1182 <uxListRemove+0x3c>
    1176:	86 81       	ldd	r24, Z+6	; 0x06
    1178:	97 81       	ldd	r25, Z+7	; 0x07
    117a:	12 96       	adiw	r26, 0x02	; 2
    117c:	9c 93       	st	X, r25
    117e:	8e 93       	st	-X, r24
    1180:	11 97       	sbiw	r26, 0x01	; 1
    1182:	13 86       	std	Z+11, r1	; 0x0b
    1184:	12 86       	std	Z+10, r1	; 0x0a
    1186:	8c 91       	ld	r24, X
    1188:	81 50       	subi	r24, 0x01	; 1
    118a:	8c 93       	st	X, r24
    118c:	8c 91       	ld	r24, X
    118e:	df 91       	pop	r29
    1190:	cf 91       	pop	r28
    1192:	08 95       	ret

00001194 <prvSetupTimerInterrupt>:
    1194:	a8 95       	wdr
    1196:	90 ec       	ldi	r25, 0xC0	; 192
    1198:	88 e1       	ldi	r24, 0x18	; 24
    119a:	0f b6       	in	r0, 0x3f	; 63
    119c:	f8 94       	cli
    119e:	a8 95       	wdr
    11a0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    11a4:	0f be       	out	0x3f, r0	; 63
    11a6:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    11aa:	08 95       	ret

000011ac <pxPortInitialiseStack>:
    11ac:	fc 01       	movw	r30, r24
    11ae:	60 83       	st	Z, r22
    11b0:	31 97       	sbiw	r30, 0x01	; 1
    11b2:	70 83       	st	Z, r23
    11b4:	31 97       	sbiw	r30, 0x01	; 1
    11b6:	10 82       	st	Z, r1
    11b8:	31 97       	sbiw	r30, 0x01	; 1
    11ba:	10 82       	st	Z, r1
    11bc:	31 97       	sbiw	r30, 0x01	; 1
    11be:	20 e8       	ldi	r18, 0x80	; 128
    11c0:	20 83       	st	Z, r18
    11c2:	31 97       	sbiw	r30, 0x01	; 1
    11c4:	10 82       	st	Z, r1
    11c6:	31 97       	sbiw	r30, 0x01	; 1
    11c8:	10 82       	st	Z, r1
    11ca:	31 97       	sbiw	r30, 0x01	; 1
    11cc:	10 82       	st	Z, r1
    11ce:	77 97       	sbiw	r30, 0x17	; 23
    11d0:	40 83       	st	Z, r20
    11d2:	31 97       	sbiw	r30, 0x01	; 1
    11d4:	50 83       	st	Z, r21
    11d6:	86 97       	sbiw	r24, 0x26	; 38
    11d8:	08 95       	ret

000011da <xPortStartScheduler>:
    11da:	dc df       	rcall	.-72     	; 0x1194 <prvSetupTimerInterrupt>
    11dc:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    11e0:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    11e4:	cd 91       	ld	r28, X+
    11e6:	cd bf       	out	0x3d, r28	; 61
    11e8:	dd 91       	ld	r29, X+
    11ea:	de bf       	out	0x3e, r29	; 62
    11ec:	ff 91       	pop	r31
    11ee:	ef 91       	pop	r30
    11f0:	df 91       	pop	r29
    11f2:	cf 91       	pop	r28
    11f4:	bf 91       	pop	r27
    11f6:	af 91       	pop	r26
    11f8:	9f 91       	pop	r25
    11fa:	8f 91       	pop	r24
    11fc:	7f 91       	pop	r23
    11fe:	6f 91       	pop	r22
    1200:	5f 91       	pop	r21
    1202:	4f 91       	pop	r20
    1204:	3f 91       	pop	r19
    1206:	2f 91       	pop	r18
    1208:	1f 91       	pop	r17
    120a:	0f 91       	pop	r16
    120c:	ff 90       	pop	r15
    120e:	ef 90       	pop	r14
    1210:	df 90       	pop	r13
    1212:	cf 90       	pop	r12
    1214:	bf 90       	pop	r11
    1216:	af 90       	pop	r10
    1218:	9f 90       	pop	r9
    121a:	8f 90       	pop	r8
    121c:	7f 90       	pop	r7
    121e:	6f 90       	pop	r6
    1220:	5f 90       	pop	r5
    1222:	4f 90       	pop	r4
    1224:	3f 90       	pop	r3
    1226:	2f 90       	pop	r2
    1228:	1f 90       	pop	r1
    122a:	0f 90       	pop	r0
    122c:	0c be       	out	0x3c, r0	; 60
    122e:	0f 90       	pop	r0
    1230:	0b be       	out	0x3b, r0	; 59
    1232:	0f 90       	pop	r0
    1234:	0f be       	out	0x3f, r0	; 63
    1236:	0f 90       	pop	r0
    1238:	08 95       	ret
    123a:	81 e0       	ldi	r24, 0x01	; 1
    123c:	08 95       	ret

0000123e <vPortYield>:
    123e:	0f 92       	push	r0
    1240:	0f b6       	in	r0, 0x3f	; 63
    1242:	f8 94       	cli
    1244:	0f 92       	push	r0
    1246:	0b b6       	in	r0, 0x3b	; 59
    1248:	0f 92       	push	r0
    124a:	0c b6       	in	r0, 0x3c	; 60
    124c:	0f 92       	push	r0
    124e:	1f 92       	push	r1
    1250:	11 24       	eor	r1, r1
    1252:	2f 92       	push	r2
    1254:	3f 92       	push	r3
    1256:	4f 92       	push	r4
    1258:	5f 92       	push	r5
    125a:	6f 92       	push	r6
    125c:	7f 92       	push	r7
    125e:	8f 92       	push	r8
    1260:	9f 92       	push	r9
    1262:	af 92       	push	r10
    1264:	bf 92       	push	r11
    1266:	cf 92       	push	r12
    1268:	df 92       	push	r13
    126a:	ef 92       	push	r14
    126c:	ff 92       	push	r15
    126e:	0f 93       	push	r16
    1270:	1f 93       	push	r17
    1272:	2f 93       	push	r18
    1274:	3f 93       	push	r19
    1276:	4f 93       	push	r20
    1278:	5f 93       	push	r21
    127a:	6f 93       	push	r22
    127c:	7f 93       	push	r23
    127e:	8f 93       	push	r24
    1280:	9f 93       	push	r25
    1282:	af 93       	push	r26
    1284:	bf 93       	push	r27
    1286:	cf 93       	push	r28
    1288:	df 93       	push	r29
    128a:	ef 93       	push	r30
    128c:	ff 93       	push	r31
    128e:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    1292:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    1296:	0d b6       	in	r0, 0x3d	; 61
    1298:	0d 92       	st	X+, r0
    129a:	0e b6       	in	r0, 0x3e	; 62
    129c:	0d 92       	st	X+, r0
    129e:	0e 94 e7 15 	call	0x2bce	; 0x2bce <vTaskSwitchContext>
    12a2:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    12a6:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    12aa:	cd 91       	ld	r28, X+
    12ac:	cd bf       	out	0x3d, r28	; 61
    12ae:	dd 91       	ld	r29, X+
    12b0:	de bf       	out	0x3e, r29	; 62
    12b2:	ff 91       	pop	r31
    12b4:	ef 91       	pop	r30
    12b6:	df 91       	pop	r29
    12b8:	cf 91       	pop	r28
    12ba:	bf 91       	pop	r27
    12bc:	af 91       	pop	r26
    12be:	9f 91       	pop	r25
    12c0:	8f 91       	pop	r24
    12c2:	7f 91       	pop	r23
    12c4:	6f 91       	pop	r22
    12c6:	5f 91       	pop	r21
    12c8:	4f 91       	pop	r20
    12ca:	3f 91       	pop	r19
    12cc:	2f 91       	pop	r18
    12ce:	1f 91       	pop	r17
    12d0:	0f 91       	pop	r16
    12d2:	ff 90       	pop	r15
    12d4:	ef 90       	pop	r14
    12d6:	df 90       	pop	r13
    12d8:	cf 90       	pop	r12
    12da:	bf 90       	pop	r11
    12dc:	af 90       	pop	r10
    12de:	9f 90       	pop	r9
    12e0:	8f 90       	pop	r8
    12e2:	7f 90       	pop	r7
    12e4:	6f 90       	pop	r6
    12e6:	5f 90       	pop	r5
    12e8:	4f 90       	pop	r4
    12ea:	3f 90       	pop	r3
    12ec:	2f 90       	pop	r2
    12ee:	1f 90       	pop	r1
    12f0:	0f 90       	pop	r0
    12f2:	0c be       	out	0x3c, r0	; 60
    12f4:	0f 90       	pop	r0
    12f6:	0b be       	out	0x3b, r0	; 59
    12f8:	0f 90       	pop	r0
    12fa:	0f be       	out	0x3f, r0	; 63
    12fc:	0f 90       	pop	r0
    12fe:	08 95       	ret

00001300 <vPortYieldFromTick>:
    1300:	0f 92       	push	r0
    1302:	0f b6       	in	r0, 0x3f	; 63
    1304:	f8 94       	cli
    1306:	0f 92       	push	r0
    1308:	0b b6       	in	r0, 0x3b	; 59
    130a:	0f 92       	push	r0
    130c:	0c b6       	in	r0, 0x3c	; 60
    130e:	0f 92       	push	r0
    1310:	1f 92       	push	r1
    1312:	11 24       	eor	r1, r1
    1314:	2f 92       	push	r2
    1316:	3f 92       	push	r3
    1318:	4f 92       	push	r4
    131a:	5f 92       	push	r5
    131c:	6f 92       	push	r6
    131e:	7f 92       	push	r7
    1320:	8f 92       	push	r8
    1322:	9f 92       	push	r9
    1324:	af 92       	push	r10
    1326:	bf 92       	push	r11
    1328:	cf 92       	push	r12
    132a:	df 92       	push	r13
    132c:	ef 92       	push	r14
    132e:	ff 92       	push	r15
    1330:	0f 93       	push	r16
    1332:	1f 93       	push	r17
    1334:	2f 93       	push	r18
    1336:	3f 93       	push	r19
    1338:	4f 93       	push	r20
    133a:	5f 93       	push	r21
    133c:	6f 93       	push	r22
    133e:	7f 93       	push	r23
    1340:	8f 93       	push	r24
    1342:	9f 93       	push	r25
    1344:	af 93       	push	r26
    1346:	bf 93       	push	r27
    1348:	cf 93       	push	r28
    134a:	df 93       	push	r29
    134c:	ef 93       	push	r30
    134e:	ff 93       	push	r31
    1350:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    1354:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    1358:	0d b6       	in	r0, 0x3d	; 61
    135a:	0d 92       	st	X+, r0
    135c:	0e b6       	in	r0, 0x3e	; 62
    135e:	0d 92       	st	X+, r0
    1360:	13 be       	out	0x33, r1	; 51
    1362:	0e 94 5f 13 	call	0x26be	; 0x26be <xTaskIncrementTick>
    1366:	81 11       	cpse	r24, r1
    1368:	0e 94 e7 15 	call	0x2bce	; 0x2bce <vTaskSwitchContext>
    136c:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    1370:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    1374:	cd 91       	ld	r28, X+
    1376:	cd bf       	out	0x3d, r28	; 61
    1378:	dd 91       	ld	r29, X+
    137a:	de bf       	out	0x3e, r29	; 62
    137c:	ff 91       	pop	r31
    137e:	ef 91       	pop	r30
    1380:	df 91       	pop	r29
    1382:	cf 91       	pop	r28
    1384:	bf 91       	pop	r27
    1386:	af 91       	pop	r26
    1388:	9f 91       	pop	r25
    138a:	8f 91       	pop	r24
    138c:	7f 91       	pop	r23
    138e:	6f 91       	pop	r22
    1390:	5f 91       	pop	r21
    1392:	4f 91       	pop	r20
    1394:	3f 91       	pop	r19
    1396:	2f 91       	pop	r18
    1398:	1f 91       	pop	r17
    139a:	0f 91       	pop	r16
    139c:	ff 90       	pop	r15
    139e:	ef 90       	pop	r14
    13a0:	df 90       	pop	r13
    13a2:	cf 90       	pop	r12
    13a4:	bf 90       	pop	r11
    13a6:	af 90       	pop	r10
    13a8:	9f 90       	pop	r9
    13aa:	8f 90       	pop	r8
    13ac:	7f 90       	pop	r7
    13ae:	6f 90       	pop	r6
    13b0:	5f 90       	pop	r5
    13b2:	4f 90       	pop	r4
    13b4:	3f 90       	pop	r3
    13b6:	2f 90       	pop	r2
    13b8:	1f 90       	pop	r1
    13ba:	0f 90       	pop	r0
    13bc:	0c be       	out	0x3c, r0	; 60
    13be:	0f 90       	pop	r0
    13c0:	0b be       	out	0x3b, r0	; 59
    13c2:	0f 90       	pop	r0
    13c4:	0f be       	out	0x3f, r0	; 63
    13c6:	0f 90       	pop	r0
    13c8:	08 95       	ret

000013ca <__vector_12>:
    13ca:	9a df       	rcall	.-204    	; 0x1300 <vPortYieldFromTick>
    13cc:	18 95       	reti

000013ce <prvGetDisinheritPriorityAfterTimeout>:
    13ce:	dc 01       	movw	r26, r24
    13d0:	53 96       	adiw	r26, 0x13	; 19
    13d2:	2c 91       	ld	r18, X
    13d4:	53 97       	sbiw	r26, 0x13	; 19
    13d6:	22 23       	and	r18, r18
    13d8:	41 f0       	breq	.+16     	; 0x13ea <prvGetDisinheritPriorityAfterTimeout+0x1c>
    13da:	5a 96       	adiw	r26, 0x1a	; 26
    13dc:	ed 91       	ld	r30, X+
    13de:	fc 91       	ld	r31, X
    13e0:	5b 97       	sbiw	r26, 0x1b	; 27
    13e2:	90 81       	ld	r25, Z
    13e4:	8a e0       	ldi	r24, 0x0A	; 10
    13e6:	89 1b       	sub	r24, r25
    13e8:	08 95       	ret
    13ea:	80 e0       	ldi	r24, 0x00	; 0
    13ec:	08 95       	ret

000013ee <prvIsQueueEmpty>:
    13ee:	0f b6       	in	r0, 0x3f	; 63
    13f0:	f8 94       	cli
    13f2:	0f 92       	push	r0
    13f4:	fc 01       	movw	r30, r24
    13f6:	86 8d       	ldd	r24, Z+30	; 0x1e
    13f8:	81 11       	cpse	r24, r1
    13fa:	02 c0       	rjmp	.+4      	; 0x1400 <prvIsQueueEmpty+0x12>
    13fc:	81 e0       	ldi	r24, 0x01	; 1
    13fe:	01 c0       	rjmp	.+2      	; 0x1402 <prvIsQueueEmpty+0x14>
    1400:	80 e0       	ldi	r24, 0x00	; 0
    1402:	0f 90       	pop	r0
    1404:	0f be       	out	0x3f, r0	; 63
    1406:	08 95       	ret

00001408 <prvIsQueueFull>:
    1408:	0f b6       	in	r0, 0x3f	; 63
    140a:	f8 94       	cli
    140c:	0f 92       	push	r0
    140e:	fc 01       	movw	r30, r24
    1410:	26 8d       	ldd	r18, Z+30	; 0x1e
    1412:	87 8d       	ldd	r24, Z+31	; 0x1f
    1414:	28 13       	cpse	r18, r24
    1416:	02 c0       	rjmp	.+4      	; 0x141c <prvIsQueueFull+0x14>
    1418:	81 e0       	ldi	r24, 0x01	; 1
    141a:	01 c0       	rjmp	.+2      	; 0x141e <prvIsQueueFull+0x16>
    141c:	80 e0       	ldi	r24, 0x00	; 0
    141e:	0f 90       	pop	r0
    1420:	0f be       	out	0x3f, r0	; 63
    1422:	08 95       	ret

00001424 <prvCopyDataToQueue>:
    1424:	0f 93       	push	r16
    1426:	1f 93       	push	r17
    1428:	cf 93       	push	r28
    142a:	df 93       	push	r29
    142c:	ec 01       	movw	r28, r24
    142e:	04 2f       	mov	r16, r20
    1430:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1432:	48 a1       	ldd	r20, Y+32	; 0x20
    1434:	41 11       	cpse	r20, r1
    1436:	0c c0       	rjmp	.+24     	; 0x1450 <prvCopyDataToQueue+0x2c>
    1438:	88 81       	ld	r24, Y
    143a:	99 81       	ldd	r25, Y+1	; 0x01
    143c:	89 2b       	or	r24, r25
    143e:	09 f0       	breq	.+2      	; 0x1442 <prvCopyDataToQueue+0x1e>
    1440:	42 c0       	rjmp	.+132    	; 0x14c6 <prvCopyDataToQueue+0xa2>
    1442:	8c 81       	ldd	r24, Y+4	; 0x04
    1444:	9d 81       	ldd	r25, Y+5	; 0x05
    1446:	0e 94 63 19 	call	0x32c6	; 0x32c6 <xTaskPriorityDisinherit>
    144a:	1d 82       	std	Y+5, r1	; 0x05
    144c:	1c 82       	std	Y+4, r1	; 0x04
    144e:	42 c0       	rjmp	.+132    	; 0x14d4 <prvCopyDataToQueue+0xb0>
    1450:	01 11       	cpse	r16, r1
    1452:	17 c0       	rjmp	.+46     	; 0x1482 <prvCopyDataToQueue+0x5e>
    1454:	50 e0       	ldi	r21, 0x00	; 0
    1456:	8a 81       	ldd	r24, Y+2	; 0x02
    1458:	9b 81       	ldd	r25, Y+3	; 0x03
    145a:	0e 94 c7 33 	call	0x678e	; 0x678e <memcpy>
    145e:	28 a1       	ldd	r18, Y+32	; 0x20
    1460:	8a 81       	ldd	r24, Y+2	; 0x02
    1462:	9b 81       	ldd	r25, Y+3	; 0x03
    1464:	82 0f       	add	r24, r18
    1466:	91 1d       	adc	r25, r1
    1468:	9b 83       	std	Y+3, r25	; 0x03
    146a:	8a 83       	std	Y+2, r24	; 0x02
    146c:	2c 81       	ldd	r18, Y+4	; 0x04
    146e:	3d 81       	ldd	r19, Y+5	; 0x05
    1470:	82 17       	cp	r24, r18
    1472:	93 07       	cpc	r25, r19
    1474:	50 f1       	brcs	.+84     	; 0x14ca <prvCopyDataToQueue+0xa6>
    1476:	88 81       	ld	r24, Y
    1478:	99 81       	ldd	r25, Y+1	; 0x01
    147a:	9b 83       	std	Y+3, r25	; 0x03
    147c:	8a 83       	std	Y+2, r24	; 0x02
    147e:	80 e0       	ldi	r24, 0x00	; 0
    1480:	29 c0       	rjmp	.+82     	; 0x14d4 <prvCopyDataToQueue+0xb0>
    1482:	50 e0       	ldi	r21, 0x00	; 0
    1484:	8e 81       	ldd	r24, Y+6	; 0x06
    1486:	9f 81       	ldd	r25, Y+7	; 0x07
    1488:	0e 94 c7 33 	call	0x678e	; 0x678e <memcpy>
    148c:	88 a1       	ldd	r24, Y+32	; 0x20
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	91 95       	neg	r25
    1492:	81 95       	neg	r24
    1494:	91 09       	sbc	r25, r1
    1496:	2e 81       	ldd	r18, Y+6	; 0x06
    1498:	3f 81       	ldd	r19, Y+7	; 0x07
    149a:	28 0f       	add	r18, r24
    149c:	39 1f       	adc	r19, r25
    149e:	3f 83       	std	Y+7, r19	; 0x07
    14a0:	2e 83       	std	Y+6, r18	; 0x06
    14a2:	48 81       	ld	r20, Y
    14a4:	59 81       	ldd	r21, Y+1	; 0x01
    14a6:	24 17       	cp	r18, r20
    14a8:	35 07       	cpc	r19, r21
    14aa:	30 f4       	brcc	.+12     	; 0x14b8 <prvCopyDataToQueue+0x94>
    14ac:	2c 81       	ldd	r18, Y+4	; 0x04
    14ae:	3d 81       	ldd	r19, Y+5	; 0x05
    14b0:	82 0f       	add	r24, r18
    14b2:	93 1f       	adc	r25, r19
    14b4:	9f 83       	std	Y+7, r25	; 0x07
    14b6:	8e 83       	std	Y+6, r24	; 0x06
    14b8:	02 30       	cpi	r16, 0x02	; 2
    14ba:	49 f4       	brne	.+18     	; 0x14ce <prvCopyDataToQueue+0xaa>
    14bc:	11 23       	and	r17, r17
    14be:	49 f0       	breq	.+18     	; 0x14d2 <prvCopyDataToQueue+0xae>
    14c0:	11 50       	subi	r17, 0x01	; 1
    14c2:	80 e0       	ldi	r24, 0x00	; 0
    14c4:	07 c0       	rjmp	.+14     	; 0x14d4 <prvCopyDataToQueue+0xb0>
    14c6:	80 e0       	ldi	r24, 0x00	; 0
    14c8:	05 c0       	rjmp	.+10     	; 0x14d4 <prvCopyDataToQueue+0xb0>
    14ca:	80 e0       	ldi	r24, 0x00	; 0
    14cc:	03 c0       	rjmp	.+6      	; 0x14d4 <prvCopyDataToQueue+0xb0>
    14ce:	80 e0       	ldi	r24, 0x00	; 0
    14d0:	01 c0       	rjmp	.+2      	; 0x14d4 <prvCopyDataToQueue+0xb0>
    14d2:	80 e0       	ldi	r24, 0x00	; 0
    14d4:	1f 5f       	subi	r17, 0xFF	; 255
    14d6:	1e 8f       	std	Y+30, r17	; 0x1e
    14d8:	df 91       	pop	r29
    14da:	cf 91       	pop	r28
    14dc:	1f 91       	pop	r17
    14de:	0f 91       	pop	r16
    14e0:	08 95       	ret

000014e2 <prvCopyDataFromQueue>:
    14e2:	fc 01       	movw	r30, r24
    14e4:	40 a1       	ldd	r20, Z+32	; 0x20
    14e6:	44 23       	and	r20, r20
    14e8:	a9 f0       	breq	.+42     	; 0x1514 <prvCopyDataFromQueue+0x32>
    14ea:	50 e0       	ldi	r21, 0x00	; 0
    14ec:	26 81       	ldd	r18, Z+6	; 0x06
    14ee:	37 81       	ldd	r19, Z+7	; 0x07
    14f0:	24 0f       	add	r18, r20
    14f2:	35 1f       	adc	r19, r21
    14f4:	37 83       	std	Z+7, r19	; 0x07
    14f6:	26 83       	std	Z+6, r18	; 0x06
    14f8:	84 81       	ldd	r24, Z+4	; 0x04
    14fa:	95 81       	ldd	r25, Z+5	; 0x05
    14fc:	28 17       	cp	r18, r24
    14fe:	39 07       	cpc	r19, r25
    1500:	20 f0       	brcs	.+8      	; 0x150a <prvCopyDataFromQueue+0x28>
    1502:	80 81       	ld	r24, Z
    1504:	91 81       	ldd	r25, Z+1	; 0x01
    1506:	97 83       	std	Z+7, r25	; 0x07
    1508:	86 83       	std	Z+6, r24	; 0x06
    150a:	cb 01       	movw	r24, r22
    150c:	66 81       	ldd	r22, Z+6	; 0x06
    150e:	77 81       	ldd	r23, Z+7	; 0x07
    1510:	0c 94 c7 33 	jmp	0x678e	; 0x678e <memcpy>
    1514:	08 95       	ret

00001516 <prvUnlockQueue>:
    1516:	1f 93       	push	r17
    1518:	cf 93       	push	r28
    151a:	df 93       	push	r29
    151c:	ec 01       	movw	r28, r24
    151e:	0f b6       	in	r0, 0x3f	; 63
    1520:	f8 94       	cli
    1522:	0f 92       	push	r0
    1524:	1a a1       	ldd	r17, Y+34	; 0x22
    1526:	0b c0       	rjmp	.+22     	; 0x153e <prvUnlockQueue+0x28>
    1528:	8b 89       	ldd	r24, Y+19	; 0x13
    152a:	88 23       	and	r24, r24
    152c:	51 f0       	breq	.+20     	; 0x1542 <prvUnlockQueue+0x2c>
    152e:	ce 01       	movw	r24, r28
    1530:	43 96       	adiw	r24, 0x13	; 19
    1532:	0e 94 ef 16 	call	0x2dde	; 0x2dde <xTaskRemoveFromEventList>
    1536:	81 11       	cpse	r24, r1
    1538:	0e 94 c5 18 	call	0x318a	; 0x318a <vTaskMissedYield>
    153c:	11 50       	subi	r17, 0x01	; 1
    153e:	11 16       	cp	r1, r17
    1540:	9c f3       	brlt	.-26     	; 0x1528 <prvUnlockQueue+0x12>
    1542:	8f ef       	ldi	r24, 0xFF	; 255
    1544:	8a a3       	std	Y+34, r24	; 0x22
    1546:	0f 90       	pop	r0
    1548:	0f be       	out	0x3f, r0	; 63
    154a:	0f b6       	in	r0, 0x3f	; 63
    154c:	f8 94       	cli
    154e:	0f 92       	push	r0
    1550:	19 a1       	ldd	r17, Y+33	; 0x21
    1552:	0b c0       	rjmp	.+22     	; 0x156a <prvUnlockQueue+0x54>
    1554:	88 85       	ldd	r24, Y+8	; 0x08
    1556:	88 23       	and	r24, r24
    1558:	51 f0       	breq	.+20     	; 0x156e <prvUnlockQueue+0x58>
    155a:	ce 01       	movw	r24, r28
    155c:	08 96       	adiw	r24, 0x08	; 8
    155e:	0e 94 ef 16 	call	0x2dde	; 0x2dde <xTaskRemoveFromEventList>
    1562:	81 11       	cpse	r24, r1
    1564:	0e 94 c5 18 	call	0x318a	; 0x318a <vTaskMissedYield>
    1568:	11 50       	subi	r17, 0x01	; 1
    156a:	11 16       	cp	r1, r17
    156c:	9c f3       	brlt	.-26     	; 0x1554 <prvUnlockQueue+0x3e>
    156e:	8f ef       	ldi	r24, 0xFF	; 255
    1570:	89 a3       	std	Y+33, r24	; 0x21
    1572:	0f 90       	pop	r0
    1574:	0f be       	out	0x3f, r0	; 63
    1576:	df 91       	pop	r29
    1578:	cf 91       	pop	r28
    157a:	1f 91       	pop	r17
    157c:	08 95       	ret

0000157e <xQueueGenericReset>:
    157e:	cf 93       	push	r28
    1580:	df 93       	push	r29
    1582:	ec 01       	movw	r28, r24
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	f8 94       	cli
    1588:	0f 92       	push	r0
    158a:	e8 81       	ld	r30, Y
    158c:	f9 81       	ldd	r31, Y+1	; 0x01
    158e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1590:	28 a1       	ldd	r18, Y+32	; 0x20
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	30 e0       	ldi	r19, 0x00	; 0
    1596:	82 9f       	mul	r24, r18
    1598:	a0 01       	movw	r20, r0
    159a:	83 9f       	mul	r24, r19
    159c:	50 0d       	add	r21, r0
    159e:	92 9f       	mul	r25, r18
    15a0:	50 0d       	add	r21, r0
    15a2:	11 24       	eor	r1, r1
    15a4:	4e 0f       	add	r20, r30
    15a6:	5f 1f       	adc	r21, r31
    15a8:	5d 83       	std	Y+5, r21	; 0x05
    15aa:	4c 83       	std	Y+4, r20	; 0x04
    15ac:	1e 8e       	std	Y+30, r1	; 0x1e
    15ae:	fb 83       	std	Y+3, r31	; 0x03
    15b0:	ea 83       	std	Y+2, r30	; 0x02
    15b2:	01 97       	sbiw	r24, 0x01	; 1
    15b4:	28 9f       	mul	r18, r24
    15b6:	a0 01       	movw	r20, r0
    15b8:	29 9f       	mul	r18, r25
    15ba:	50 0d       	add	r21, r0
    15bc:	38 9f       	mul	r19, r24
    15be:	50 0d       	add	r21, r0
    15c0:	11 24       	eor	r1, r1
    15c2:	cf 01       	movw	r24, r30
    15c4:	84 0f       	add	r24, r20
    15c6:	95 1f       	adc	r25, r21
    15c8:	9f 83       	std	Y+7, r25	; 0x07
    15ca:	8e 83       	std	Y+6, r24	; 0x06
    15cc:	8f ef       	ldi	r24, 0xFF	; 255
    15ce:	89 a3       	std	Y+33, r24	; 0x21
    15d0:	8a a3       	std	Y+34, r24	; 0x22
    15d2:	61 11       	cpse	r22, r1
    15d4:	0b c0       	rjmp	.+22     	; 0x15ec <xQueueGenericReset+0x6e>
    15d6:	88 85       	ldd	r24, Y+8	; 0x08
    15d8:	88 23       	and	r24, r24
    15da:	71 f0       	breq	.+28     	; 0x15f8 <xQueueGenericReset+0x7a>
    15dc:	ce 01       	movw	r24, r28
    15de:	08 96       	adiw	r24, 0x08	; 8
    15e0:	0e 94 ef 16 	call	0x2dde	; 0x2dde <xTaskRemoveFromEventList>
    15e4:	88 23       	and	r24, r24
    15e6:	41 f0       	breq	.+16     	; 0x15f8 <xQueueGenericReset+0x7a>
    15e8:	2a de       	rcall	.-940    	; 0x123e <vPortYield>
    15ea:	06 c0       	rjmp	.+12     	; 0x15f8 <xQueueGenericReset+0x7a>
    15ec:	ce 01       	movw	r24, r28
    15ee:	08 96       	adiw	r24, 0x08	; 8
    15f0:	58 dd       	rcall	.-1360   	; 0x10a2 <vListInitialise>
    15f2:	ce 01       	movw	r24, r28
    15f4:	43 96       	adiw	r24, 0x13	; 19
    15f6:	55 dd       	rcall	.-1366   	; 0x10a2 <vListInitialise>
    15f8:	0f 90       	pop	r0
    15fa:	0f be       	out	0x3f, r0	; 63
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	df 91       	pop	r29
    1600:	cf 91       	pop	r28
    1602:	08 95       	ret

00001604 <prvInitialiseNewQueue>:
    1604:	0f 93       	push	r16
    1606:	1f 93       	push	r17
    1608:	f8 01       	movw	r30, r16
    160a:	61 11       	cpse	r22, r1
    160c:	03 c0       	rjmp	.+6      	; 0x1614 <prvInitialiseNewQueue+0x10>
    160e:	11 83       	std	Z+1, r17	; 0x01
    1610:	00 83       	st	Z, r16
    1612:	02 c0       	rjmp	.+4      	; 0x1618 <prvInitialiseNewQueue+0x14>
    1614:	51 83       	std	Z+1, r21	; 0x01
    1616:	40 83       	st	Z, r20
    1618:	87 8f       	std	Z+31, r24	; 0x1f
    161a:	60 a3       	std	Z+32, r22	; 0x20
    161c:	61 e0       	ldi	r22, 0x01	; 1
    161e:	cf 01       	movw	r24, r30
    1620:	ae df       	rcall	.-164    	; 0x157e <xQueueGenericReset>
    1622:	1f 91       	pop	r17
    1624:	0f 91       	pop	r16
    1626:	08 95       	ret

00001628 <xQueueGenericCreate>:
    1628:	df 92       	push	r13
    162a:	ef 92       	push	r14
    162c:	ff 92       	push	r15
    162e:	0f 93       	push	r16
    1630:	1f 93       	push	r17
    1632:	cf 93       	push	r28
    1634:	df 93       	push	r29
    1636:	f8 2e       	mov	r15, r24
    1638:	e6 2e       	mov	r14, r22
    163a:	d4 2e       	mov	r13, r20
    163c:	86 9f       	mul	r24, r22
    163e:	c0 01       	movw	r24, r0
    1640:	11 24       	eor	r1, r1
    1642:	83 96       	adiw	r24, 0x23	; 35
    1644:	48 dc       	rcall	.-1904   	; 0xed6 <pvPortMalloc>
    1646:	ec 01       	movw	r28, r24
    1648:	00 97       	sbiw	r24, 0x00	; 0
    164a:	41 f0       	breq	.+16     	; 0x165c <xQueueGenericCreate+0x34>
    164c:	8c 01       	movw	r16, r24
    164e:	2d 2d       	mov	r18, r13
    1650:	ac 01       	movw	r20, r24
    1652:	4d 5d       	subi	r20, 0xDD	; 221
    1654:	5f 4f       	sbci	r21, 0xFF	; 255
    1656:	6e 2d       	mov	r22, r14
    1658:	8f 2d       	mov	r24, r15
    165a:	d4 df       	rcall	.-88     	; 0x1604 <prvInitialiseNewQueue>
    165c:	ce 01       	movw	r24, r28
    165e:	df 91       	pop	r29
    1660:	cf 91       	pop	r28
    1662:	1f 91       	pop	r17
    1664:	0f 91       	pop	r16
    1666:	ff 90       	pop	r15
    1668:	ef 90       	pop	r14
    166a:	df 90       	pop	r13
    166c:	08 95       	ret

0000166e <xQueueGenericSend>:
    166e:	cf 92       	push	r12
    1670:	df 92       	push	r13
    1672:	ef 92       	push	r14
    1674:	ff 92       	push	r15
    1676:	0f 93       	push	r16
    1678:	1f 93       	push	r17
    167a:	cf 93       	push	r28
    167c:	df 93       	push	r29
    167e:	cd b7       	in	r28, 0x3d	; 61
    1680:	de b7       	in	r29, 0x3e	; 62
    1682:	29 97       	sbiw	r28, 0x09	; 9
    1684:	0f b6       	in	r0, 0x3f	; 63
    1686:	f8 94       	cli
    1688:	de bf       	out	0x3e, r29	; 62
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	cd bf       	out	0x3d, r28	; 61
    168e:	7c 01       	movw	r14, r24
    1690:	6b 01       	movw	r12, r22
    1692:	2e 83       	std	Y+6, r18	; 0x06
    1694:	3f 83       	std	Y+7, r19	; 0x07
    1696:	48 87       	std	Y+8, r20	; 0x08
    1698:	59 87       	std	Y+9, r21	; 0x09
    169a:	10 e0       	ldi	r17, 0x00	; 0
    169c:	0f b6       	in	r0, 0x3f	; 63
    169e:	f8 94       	cli
    16a0:	0f 92       	push	r0
    16a2:	f7 01       	movw	r30, r14
    16a4:	96 8d       	ldd	r25, Z+30	; 0x1e
    16a6:	87 8d       	ldd	r24, Z+31	; 0x1f
    16a8:	98 17       	cp	r25, r24
    16aa:	10 f0       	brcs	.+4      	; 0x16b0 <xQueueGenericSend+0x42>
    16ac:	02 30       	cpi	r16, 0x02	; 2
    16ae:	b1 f4       	brne	.+44     	; 0x16dc <xQueueGenericSend+0x6e>
    16b0:	40 2f       	mov	r20, r16
    16b2:	b6 01       	movw	r22, r12
    16b4:	c7 01       	movw	r24, r14
    16b6:	b6 de       	rcall	.-660    	; 0x1424 <prvCopyDataToQueue>
    16b8:	f7 01       	movw	r30, r14
    16ba:	93 89       	ldd	r25, Z+19	; 0x13
    16bc:	99 23       	and	r25, r25
    16be:	41 f0       	breq	.+16     	; 0x16d0 <xQueueGenericSend+0x62>
    16c0:	c7 01       	movw	r24, r14
    16c2:	43 96       	adiw	r24, 0x13	; 19
    16c4:	0e 94 ef 16 	call	0x2dde	; 0x2dde <xTaskRemoveFromEventList>
    16c8:	88 23       	and	r24, r24
    16ca:	21 f0       	breq	.+8      	; 0x16d4 <xQueueGenericSend+0x66>
    16cc:	b8 dd       	rcall	.-1168   	; 0x123e <vPortYield>
    16ce:	02 c0       	rjmp	.+4      	; 0x16d4 <xQueueGenericSend+0x66>
    16d0:	81 11       	cpse	r24, r1
    16d2:	b5 dd       	rcall	.-1174   	; 0x123e <vPortYield>
    16d4:	0f 90       	pop	r0
    16d6:	0f be       	out	0x3f, r0	; 63
    16d8:	81 e0       	ldi	r24, 0x01	; 1
    16da:	4c c0       	rjmp	.+152    	; 0x1774 <xQueueGenericSend+0x106>
    16dc:	8e 81       	ldd	r24, Y+6	; 0x06
    16de:	9f 81       	ldd	r25, Y+7	; 0x07
    16e0:	a8 85       	ldd	r26, Y+8	; 0x08
    16e2:	b9 85       	ldd	r27, Y+9	; 0x09
    16e4:	89 2b       	or	r24, r25
    16e6:	8a 2b       	or	r24, r26
    16e8:	8b 2b       	or	r24, r27
    16ea:	21 f4       	brne	.+8      	; 0x16f4 <xQueueGenericSend+0x86>
    16ec:	0f 90       	pop	r0
    16ee:	0f be       	out	0x3f, r0	; 63
    16f0:	80 e0       	ldi	r24, 0x00	; 0
    16f2:	40 c0       	rjmp	.+128    	; 0x1774 <xQueueGenericSend+0x106>
    16f4:	11 11       	cpse	r17, r1
    16f6:	05 c0       	rjmp	.+10     	; 0x1702 <xQueueGenericSend+0x94>
    16f8:	ce 01       	movw	r24, r28
    16fa:	01 96       	adiw	r24, 0x01	; 1
    16fc:	0e 94 4e 18 	call	0x309c	; 0x309c <vTaskInternalSetTimeOutState>
    1700:	11 e0       	ldi	r17, 0x01	; 1
    1702:	0f 90       	pop	r0
    1704:	0f be       	out	0x3f, r0	; 63
    1706:	c7 d7       	rcall	.+3982   	; 0x2696 <vTaskSuspendAll>
    1708:	0f b6       	in	r0, 0x3f	; 63
    170a:	f8 94       	cli
    170c:	0f 92       	push	r0
    170e:	f7 01       	movw	r30, r14
    1710:	81 a1       	ldd	r24, Z+33	; 0x21
    1712:	8f 3f       	cpi	r24, 0xFF	; 255
    1714:	09 f4       	brne	.+2      	; 0x1718 <xQueueGenericSend+0xaa>
    1716:	11 a2       	std	Z+33, r1	; 0x21
    1718:	f7 01       	movw	r30, r14
    171a:	82 a1       	ldd	r24, Z+34	; 0x22
    171c:	8f 3f       	cpi	r24, 0xFF	; 255
    171e:	09 f4       	brne	.+2      	; 0x1722 <xQueueGenericSend+0xb4>
    1720:	12 a2       	std	Z+34, r1	; 0x22
    1722:	0f 90       	pop	r0
    1724:	0f be       	out	0x3f, r0	; 63
    1726:	be 01       	movw	r22, r28
    1728:	6a 5f       	subi	r22, 0xFA	; 250
    172a:	7f 4f       	sbci	r23, 0xFF	; 255
    172c:	ce 01       	movw	r24, r28
    172e:	01 96       	adiw	r24, 0x01	; 1
    1730:	0e 94 5f 18 	call	0x30be	; 0x30be <xTaskCheckForTimeOut>
    1734:	81 11       	cpse	r24, r1
    1736:	19 c0       	rjmp	.+50     	; 0x176a <xQueueGenericSend+0xfc>
    1738:	c7 01       	movw	r24, r14
    173a:	66 de       	rcall	.-820    	; 0x1408 <prvIsQueueFull>
    173c:	88 23       	and	r24, r24
    173e:	81 f0       	breq	.+32     	; 0x1760 <xQueueGenericSend+0xf2>
    1740:	4e 81       	ldd	r20, Y+6	; 0x06
    1742:	5f 81       	ldd	r21, Y+7	; 0x07
    1744:	68 85       	ldd	r22, Y+8	; 0x08
    1746:	79 85       	ldd	r23, Y+9	; 0x09
    1748:	c7 01       	movw	r24, r14
    174a:	08 96       	adiw	r24, 0x08	; 8
    174c:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <vTaskPlaceOnEventList>
    1750:	c7 01       	movw	r24, r14
    1752:	e1 de       	rcall	.-574    	; 0x1516 <prvUnlockQueue>
    1754:	0e 94 8b 14 	call	0x2916	; 0x2916 <xTaskResumeAll>
    1758:	81 11       	cpse	r24, r1
    175a:	a0 cf       	rjmp	.-192    	; 0x169c <xQueueGenericSend+0x2e>
    175c:	70 dd       	rcall	.-1312   	; 0x123e <vPortYield>
    175e:	9e cf       	rjmp	.-196    	; 0x169c <xQueueGenericSend+0x2e>
    1760:	c7 01       	movw	r24, r14
    1762:	d9 de       	rcall	.-590    	; 0x1516 <prvUnlockQueue>
    1764:	0e 94 8b 14 	call	0x2916	; 0x2916 <xTaskResumeAll>
    1768:	99 cf       	rjmp	.-206    	; 0x169c <xQueueGenericSend+0x2e>
    176a:	c7 01       	movw	r24, r14
    176c:	d4 de       	rcall	.-600    	; 0x1516 <prvUnlockQueue>
    176e:	0e 94 8b 14 	call	0x2916	; 0x2916 <xTaskResumeAll>
    1772:	80 e0       	ldi	r24, 0x00	; 0
    1774:	29 96       	adiw	r28, 0x09	; 9
    1776:	0f b6       	in	r0, 0x3f	; 63
    1778:	f8 94       	cli
    177a:	de bf       	out	0x3e, r29	; 62
    177c:	0f be       	out	0x3f, r0	; 63
    177e:	cd bf       	out	0x3d, r28	; 61
    1780:	df 91       	pop	r29
    1782:	cf 91       	pop	r28
    1784:	1f 91       	pop	r17
    1786:	0f 91       	pop	r16
    1788:	ff 90       	pop	r15
    178a:	ef 90       	pop	r14
    178c:	df 90       	pop	r13
    178e:	cf 90       	pop	r12
    1790:	08 95       	ret

00001792 <prvInitialiseMutex>:
    1792:	0f 93       	push	r16
    1794:	00 97       	sbiw	r24, 0x00	; 0
    1796:	69 f0       	breq	.+26     	; 0x17b2 <prvInitialiseMutex+0x20>
    1798:	fc 01       	movw	r30, r24
    179a:	15 82       	std	Z+5, r1	; 0x05
    179c:	14 82       	std	Z+4, r1	; 0x04
    179e:	11 82       	std	Z+1, r1	; 0x01
    17a0:	10 82       	st	Z, r1
    17a2:	16 82       	std	Z+6, r1	; 0x06
    17a4:	00 e0       	ldi	r16, 0x00	; 0
    17a6:	20 e0       	ldi	r18, 0x00	; 0
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	a9 01       	movw	r20, r18
    17ac:	60 e0       	ldi	r22, 0x00	; 0
    17ae:	70 e0       	ldi	r23, 0x00	; 0
    17b0:	5e df       	rcall	.-324    	; 0x166e <xQueueGenericSend>
    17b2:	0f 91       	pop	r16
    17b4:	08 95       	ret

000017b6 <xQueueCreateMutex>:
    17b6:	cf 93       	push	r28
    17b8:	df 93       	push	r29
    17ba:	48 2f       	mov	r20, r24
    17bc:	60 e0       	ldi	r22, 0x00	; 0
    17be:	81 e0       	ldi	r24, 0x01	; 1
    17c0:	33 df       	rcall	.-410    	; 0x1628 <xQueueGenericCreate>
    17c2:	ec 01       	movw	r28, r24
    17c4:	e6 df       	rcall	.-52     	; 0x1792 <prvInitialiseMutex>
    17c6:	ce 01       	movw	r24, r28
    17c8:	df 91       	pop	r29
    17ca:	cf 91       	pop	r28
    17cc:	08 95       	ret

000017ce <xQueueGenericSendFromISR>:
    17ce:	ef 92       	push	r14
    17d0:	ff 92       	push	r15
    17d2:	0f 93       	push	r16
    17d4:	1f 93       	push	r17
    17d6:	cf 93       	push	r28
    17d8:	df 93       	push	r29
    17da:	8a 01       	movw	r16, r20
    17dc:	fc 01       	movw	r30, r24
    17de:	56 8d       	ldd	r21, Z+30	; 0x1e
    17e0:	37 8d       	ldd	r19, Z+31	; 0x1f
    17e2:	53 17       	cp	r21, r19
    17e4:	10 f0       	brcs	.+4      	; 0x17ea <xQueueGenericSendFromISR+0x1c>
    17e6:	22 30       	cpi	r18, 0x02	; 2
    17e8:	f9 f4       	brne	.+62     	; 0x1828 <xQueueGenericSendFromISR+0x5a>
    17ea:	42 2f       	mov	r20, r18
    17ec:	78 01       	movw	r14, r16
    17ee:	ec 01       	movw	r28, r24
    17f0:	1a a1       	ldd	r17, Y+34	; 0x22
    17f2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    17f4:	ce 01       	movw	r24, r28
    17f6:	16 de       	rcall	.-980    	; 0x1424 <prvCopyDataToQueue>
    17f8:	1f 3f       	cpi	r17, 0xFF	; 255
    17fa:	81 f4       	brne	.+32     	; 0x181c <xQueueGenericSendFromISR+0x4e>
    17fc:	8b 89       	ldd	r24, Y+19	; 0x13
    17fe:	88 23       	and	r24, r24
    1800:	a9 f0       	breq	.+42     	; 0x182c <xQueueGenericSendFromISR+0x5e>
    1802:	ce 01       	movw	r24, r28
    1804:	43 96       	adiw	r24, 0x13	; 19
    1806:	0e 94 ef 16 	call	0x2dde	; 0x2dde <xTaskRemoveFromEventList>
    180a:	88 23       	and	r24, r24
    180c:	89 f0       	breq	.+34     	; 0x1830 <xQueueGenericSendFromISR+0x62>
    180e:	e1 14       	cp	r14, r1
    1810:	f1 04       	cpc	r15, r1
    1812:	81 f0       	breq	.+32     	; 0x1834 <xQueueGenericSendFromISR+0x66>
    1814:	81 e0       	ldi	r24, 0x01	; 1
    1816:	f7 01       	movw	r30, r14
    1818:	80 83       	st	Z, r24
    181a:	0d c0       	rjmp	.+26     	; 0x1836 <xQueueGenericSendFromISR+0x68>
    181c:	ff 24       	eor	r15, r15
    181e:	f3 94       	inc	r15
    1820:	f1 0e       	add	r15, r17
    1822:	fa a2       	std	Y+34, r15	; 0x22
    1824:	81 e0       	ldi	r24, 0x01	; 1
    1826:	07 c0       	rjmp	.+14     	; 0x1836 <xQueueGenericSendFromISR+0x68>
    1828:	80 e0       	ldi	r24, 0x00	; 0
    182a:	05 c0       	rjmp	.+10     	; 0x1836 <xQueueGenericSendFromISR+0x68>
    182c:	81 e0       	ldi	r24, 0x01	; 1
    182e:	03 c0       	rjmp	.+6      	; 0x1836 <xQueueGenericSendFromISR+0x68>
    1830:	81 e0       	ldi	r24, 0x01	; 1
    1832:	01 c0       	rjmp	.+2      	; 0x1836 <xQueueGenericSendFromISR+0x68>
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	df 91       	pop	r29
    1838:	cf 91       	pop	r28
    183a:	1f 91       	pop	r17
    183c:	0f 91       	pop	r16
    183e:	ff 90       	pop	r15
    1840:	ef 90       	pop	r14
    1842:	08 95       	ret

00001844 <xQueueReceive>:
    1844:	cf 92       	push	r12
    1846:	df 92       	push	r13
    1848:	ef 92       	push	r14
    184a:	ff 92       	push	r15
    184c:	0f 93       	push	r16
    184e:	1f 93       	push	r17
    1850:	cf 93       	push	r28
    1852:	df 93       	push	r29
    1854:	cd b7       	in	r28, 0x3d	; 61
    1856:	de b7       	in	r29, 0x3e	; 62
    1858:	29 97       	sbiw	r28, 0x09	; 9
    185a:	0f b6       	in	r0, 0x3f	; 63
    185c:	f8 94       	cli
    185e:	de bf       	out	0x3e, r29	; 62
    1860:	0f be       	out	0x3f, r0	; 63
    1862:	cd bf       	out	0x3d, r28	; 61
    1864:	8c 01       	movw	r16, r24
    1866:	6b 01       	movw	r12, r22
    1868:	2e 83       	std	Y+6, r18	; 0x06
    186a:	3f 83       	std	Y+7, r19	; 0x07
    186c:	48 87       	std	Y+8, r20	; 0x08
    186e:	59 87       	std	Y+9, r21	; 0x09
    1870:	e1 2c       	mov	r14, r1
    1872:	0f b6       	in	r0, 0x3f	; 63
    1874:	f8 94       	cli
    1876:	0f 92       	push	r0
    1878:	f8 01       	movw	r30, r16
    187a:	f6 8c       	ldd	r15, Z+30	; 0x1e
    187c:	ff 20       	and	r15, r15
    187e:	99 f0       	breq	.+38     	; 0x18a6 <xQueueReceive+0x62>
    1880:	b6 01       	movw	r22, r12
    1882:	c8 01       	movw	r24, r16
    1884:	2e de       	rcall	.-932    	; 0x14e2 <prvCopyDataFromQueue>
    1886:	fa 94       	dec	r15
    1888:	f8 01       	movw	r30, r16
    188a:	f6 8e       	std	Z+30, r15	; 0x1e
    188c:	80 85       	ldd	r24, Z+8	; 0x08
    188e:	88 23       	and	r24, r24
    1890:	31 f0       	breq	.+12     	; 0x189e <xQueueReceive+0x5a>
    1892:	c8 01       	movw	r24, r16
    1894:	08 96       	adiw	r24, 0x08	; 8
    1896:	0e 94 ef 16 	call	0x2dde	; 0x2dde <xTaskRemoveFromEventList>
    189a:	81 11       	cpse	r24, r1
    189c:	d0 dc       	rcall	.-1632   	; 0x123e <vPortYield>
    189e:	0f 90       	pop	r0
    18a0:	0f be       	out	0x3f, r0	; 63
    18a2:	81 e0       	ldi	r24, 0x01	; 1
    18a4:	4f c0       	rjmp	.+158    	; 0x1944 <xQueueReceive+0x100>
    18a6:	8e 81       	ldd	r24, Y+6	; 0x06
    18a8:	9f 81       	ldd	r25, Y+7	; 0x07
    18aa:	a8 85       	ldd	r26, Y+8	; 0x08
    18ac:	b9 85       	ldd	r27, Y+9	; 0x09
    18ae:	89 2b       	or	r24, r25
    18b0:	8a 2b       	or	r24, r26
    18b2:	8b 2b       	or	r24, r27
    18b4:	21 f4       	brne	.+8      	; 0x18be <xQueueReceive+0x7a>
    18b6:	0f 90       	pop	r0
    18b8:	0f be       	out	0x3f, r0	; 63
    18ba:	80 e0       	ldi	r24, 0x00	; 0
    18bc:	43 c0       	rjmp	.+134    	; 0x1944 <xQueueReceive+0x100>
    18be:	e1 10       	cpse	r14, r1
    18c0:	06 c0       	rjmp	.+12     	; 0x18ce <xQueueReceive+0x8a>
    18c2:	ce 01       	movw	r24, r28
    18c4:	01 96       	adiw	r24, 0x01	; 1
    18c6:	0e 94 4e 18 	call	0x309c	; 0x309c <vTaskInternalSetTimeOutState>
    18ca:	ee 24       	eor	r14, r14
    18cc:	e3 94       	inc	r14
    18ce:	0f 90       	pop	r0
    18d0:	0f be       	out	0x3f, r0	; 63
    18d2:	e1 d6       	rcall	.+3522   	; 0x2696 <vTaskSuspendAll>
    18d4:	0f b6       	in	r0, 0x3f	; 63
    18d6:	f8 94       	cli
    18d8:	0f 92       	push	r0
    18da:	f8 01       	movw	r30, r16
    18dc:	81 a1       	ldd	r24, Z+33	; 0x21
    18de:	8f 3f       	cpi	r24, 0xFF	; 255
    18e0:	09 f4       	brne	.+2      	; 0x18e4 <xQueueReceive+0xa0>
    18e2:	11 a2       	std	Z+33, r1	; 0x21
    18e4:	f8 01       	movw	r30, r16
    18e6:	82 a1       	ldd	r24, Z+34	; 0x22
    18e8:	8f 3f       	cpi	r24, 0xFF	; 255
    18ea:	09 f4       	brne	.+2      	; 0x18ee <xQueueReceive+0xaa>
    18ec:	12 a2       	std	Z+34, r1	; 0x22
    18ee:	0f 90       	pop	r0
    18f0:	0f be       	out	0x3f, r0	; 63
    18f2:	be 01       	movw	r22, r28
    18f4:	6a 5f       	subi	r22, 0xFA	; 250
    18f6:	7f 4f       	sbci	r23, 0xFF	; 255
    18f8:	ce 01       	movw	r24, r28
    18fa:	01 96       	adiw	r24, 0x01	; 1
    18fc:	0e 94 5f 18 	call	0x30be	; 0x30be <xTaskCheckForTimeOut>
    1900:	81 11       	cpse	r24, r1
    1902:	17 c0       	rjmp	.+46     	; 0x1932 <xQueueReceive+0xee>
    1904:	c8 01       	movw	r24, r16
    1906:	73 dd       	rcall	.-1306   	; 0x13ee <prvIsQueueEmpty>
    1908:	88 23       	and	r24, r24
    190a:	79 f0       	breq	.+30     	; 0x192a <xQueueReceive+0xe6>
    190c:	4e 81       	ldd	r20, Y+6	; 0x06
    190e:	5f 81       	ldd	r21, Y+7	; 0x07
    1910:	68 85       	ldd	r22, Y+8	; 0x08
    1912:	79 85       	ldd	r23, Y+9	; 0x09
    1914:	c8 01       	movw	r24, r16
    1916:	43 96       	adiw	r24, 0x13	; 19
    1918:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <vTaskPlaceOnEventList>
    191c:	c8 01       	movw	r24, r16
    191e:	fb dd       	rcall	.-1034   	; 0x1516 <prvUnlockQueue>
    1920:	fa d7       	rcall	.+4084   	; 0x2916 <xTaskResumeAll>
    1922:	81 11       	cpse	r24, r1
    1924:	a6 cf       	rjmp	.-180    	; 0x1872 <xQueueReceive+0x2e>
    1926:	8b dc       	rcall	.-1770   	; 0x123e <vPortYield>
    1928:	a4 cf       	rjmp	.-184    	; 0x1872 <xQueueReceive+0x2e>
    192a:	c8 01       	movw	r24, r16
    192c:	f4 dd       	rcall	.-1048   	; 0x1516 <prvUnlockQueue>
    192e:	f3 d7       	rcall	.+4070   	; 0x2916 <xTaskResumeAll>
    1930:	a0 cf       	rjmp	.-192    	; 0x1872 <xQueueReceive+0x2e>
    1932:	c8 01       	movw	r24, r16
    1934:	f0 dd       	rcall	.-1056   	; 0x1516 <prvUnlockQueue>
    1936:	ef d7       	rcall	.+4062   	; 0x2916 <xTaskResumeAll>
    1938:	c8 01       	movw	r24, r16
    193a:	59 dd       	rcall	.-1358   	; 0x13ee <prvIsQueueEmpty>
    193c:	88 23       	and	r24, r24
    193e:	09 f4       	brne	.+2      	; 0x1942 <xQueueReceive+0xfe>
    1940:	98 cf       	rjmp	.-208    	; 0x1872 <xQueueReceive+0x2e>
    1942:	80 e0       	ldi	r24, 0x00	; 0
    1944:	29 96       	adiw	r28, 0x09	; 9
    1946:	0f b6       	in	r0, 0x3f	; 63
    1948:	f8 94       	cli
    194a:	de bf       	out	0x3e, r29	; 62
    194c:	0f be       	out	0x3f, r0	; 63
    194e:	cd bf       	out	0x3d, r28	; 61
    1950:	df 91       	pop	r29
    1952:	cf 91       	pop	r28
    1954:	1f 91       	pop	r17
    1956:	0f 91       	pop	r16
    1958:	ff 90       	pop	r15
    195a:	ef 90       	pop	r14
    195c:	df 90       	pop	r13
    195e:	cf 90       	pop	r12
    1960:	08 95       	ret

00001962 <xQueueSemaphoreTake>:
    1962:	ef 92       	push	r14
    1964:	ff 92       	push	r15
    1966:	0f 93       	push	r16
    1968:	1f 93       	push	r17
    196a:	cf 93       	push	r28
    196c:	df 93       	push	r29
    196e:	cd b7       	in	r28, 0x3d	; 61
    1970:	de b7       	in	r29, 0x3e	; 62
    1972:	29 97       	sbiw	r28, 0x09	; 9
    1974:	0f b6       	in	r0, 0x3f	; 63
    1976:	f8 94       	cli
    1978:	de bf       	out	0x3e, r29	; 62
    197a:	0f be       	out	0x3f, r0	; 63
    197c:	cd bf       	out	0x3d, r28	; 61
    197e:	8c 01       	movw	r16, r24
    1980:	4e 83       	std	Y+6, r20	; 0x06
    1982:	5f 83       	std	Y+7, r21	; 0x07
    1984:	68 87       	std	Y+8, r22	; 0x08
    1986:	79 87       	std	Y+9, r23	; 0x09
    1988:	e1 2c       	mov	r14, r1
    198a:	f1 2c       	mov	r15, r1
    198c:	0f b6       	in	r0, 0x3f	; 63
    198e:	f8 94       	cli
    1990:	0f 92       	push	r0
    1992:	f8 01       	movw	r30, r16
    1994:	86 8d       	ldd	r24, Z+30	; 0x1e
    1996:	88 23       	and	r24, r24
    1998:	c9 f0       	breq	.+50     	; 0x19cc <xQueueSemaphoreTake+0x6a>
    199a:	81 50       	subi	r24, 0x01	; 1
    199c:	86 8f       	std	Z+30, r24	; 0x1e
    199e:	80 81       	ld	r24, Z
    19a0:	91 81       	ldd	r25, Z+1	; 0x01
    19a2:	89 2b       	or	r24, r25
    19a4:	29 f4       	brne	.+10     	; 0x19b0 <xQueueSemaphoreTake+0x4e>
    19a6:	0e 94 4f 1a 	call	0x349e	; 0x349e <pvTaskIncrementMutexHeldCount>
    19aa:	f8 01       	movw	r30, r16
    19ac:	95 83       	std	Z+5, r25	; 0x05
    19ae:	84 83       	std	Z+4, r24	; 0x04
    19b0:	f8 01       	movw	r30, r16
    19b2:	80 85       	ldd	r24, Z+8	; 0x08
    19b4:	88 23       	and	r24, r24
    19b6:	31 f0       	breq	.+12     	; 0x19c4 <xQueueSemaphoreTake+0x62>
    19b8:	c8 01       	movw	r24, r16
    19ba:	08 96       	adiw	r24, 0x08	; 8
    19bc:	0e 94 ef 16 	call	0x2dde	; 0x2dde <xTaskRemoveFromEventList>
    19c0:	81 11       	cpse	r24, r1
    19c2:	3d dc       	rcall	.-1926   	; 0x123e <vPortYield>
    19c4:	0f 90       	pop	r0
    19c6:	0f be       	out	0x3f, r0	; 63
    19c8:	81 e0       	ldi	r24, 0x01	; 1
    19ca:	6f c0       	rjmp	.+222    	; 0x1aaa <xQueueSemaphoreTake+0x148>
    19cc:	8e 81       	ldd	r24, Y+6	; 0x06
    19ce:	9f 81       	ldd	r25, Y+7	; 0x07
    19d0:	a8 85       	ldd	r26, Y+8	; 0x08
    19d2:	b9 85       	ldd	r27, Y+9	; 0x09
    19d4:	89 2b       	or	r24, r25
    19d6:	8a 2b       	or	r24, r26
    19d8:	8b 2b       	or	r24, r27
    19da:	21 f4       	brne	.+8      	; 0x19e4 <xQueueSemaphoreTake+0x82>
    19dc:	0f 90       	pop	r0
    19de:	0f be       	out	0x3f, r0	; 63
    19e0:	80 e0       	ldi	r24, 0x00	; 0
    19e2:	63 c0       	rjmp	.+198    	; 0x1aaa <xQueueSemaphoreTake+0x148>
    19e4:	f1 10       	cpse	r15, r1
    19e6:	06 c0       	rjmp	.+12     	; 0x19f4 <xQueueSemaphoreTake+0x92>
    19e8:	ce 01       	movw	r24, r28
    19ea:	01 96       	adiw	r24, 0x01	; 1
    19ec:	0e 94 4e 18 	call	0x309c	; 0x309c <vTaskInternalSetTimeOutState>
    19f0:	ff 24       	eor	r15, r15
    19f2:	f3 94       	inc	r15
    19f4:	0f 90       	pop	r0
    19f6:	0f be       	out	0x3f, r0	; 63
    19f8:	4e d6       	rcall	.+3228   	; 0x2696 <vTaskSuspendAll>
    19fa:	0f b6       	in	r0, 0x3f	; 63
    19fc:	f8 94       	cli
    19fe:	0f 92       	push	r0
    1a00:	f8 01       	movw	r30, r16
    1a02:	81 a1       	ldd	r24, Z+33	; 0x21
    1a04:	8f 3f       	cpi	r24, 0xFF	; 255
    1a06:	09 f4       	brne	.+2      	; 0x1a0a <xQueueSemaphoreTake+0xa8>
    1a08:	11 a2       	std	Z+33, r1	; 0x21
    1a0a:	f8 01       	movw	r30, r16
    1a0c:	82 a1       	ldd	r24, Z+34	; 0x22
    1a0e:	8f 3f       	cpi	r24, 0xFF	; 255
    1a10:	09 f4       	brne	.+2      	; 0x1a14 <xQueueSemaphoreTake+0xb2>
    1a12:	12 a2       	std	Z+34, r1	; 0x22
    1a14:	0f 90       	pop	r0
    1a16:	0f be       	out	0x3f, r0	; 63
    1a18:	be 01       	movw	r22, r28
    1a1a:	6a 5f       	subi	r22, 0xFA	; 250
    1a1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a1e:	ce 01       	movw	r24, r28
    1a20:	01 96       	adiw	r24, 0x01	; 1
    1a22:	0e 94 5f 18 	call	0x30be	; 0x30be <xTaskCheckForTimeOut>
    1a26:	81 11       	cpse	r24, r1
    1a28:	26 c0       	rjmp	.+76     	; 0x1a76 <xQueueSemaphoreTake+0x114>
    1a2a:	c8 01       	movw	r24, r16
    1a2c:	e0 dc       	rcall	.-1600   	; 0x13ee <prvIsQueueEmpty>
    1a2e:	88 23       	and	r24, r24
    1a30:	f1 f0       	breq	.+60     	; 0x1a6e <xQueueSemaphoreTake+0x10c>
    1a32:	f8 01       	movw	r30, r16
    1a34:	80 81       	ld	r24, Z
    1a36:	91 81       	ldd	r25, Z+1	; 0x01
    1a38:	89 2b       	or	r24, r25
    1a3a:	51 f4       	brne	.+20     	; 0x1a50 <xQueueSemaphoreTake+0xee>
    1a3c:	0f b6       	in	r0, 0x3f	; 63
    1a3e:	f8 94       	cli
    1a40:	0f 92       	push	r0
    1a42:	84 81       	ldd	r24, Z+4	; 0x04
    1a44:	95 81       	ldd	r25, Z+5	; 0x05
    1a46:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <xTaskPriorityInherit>
    1a4a:	e8 2e       	mov	r14, r24
    1a4c:	0f 90       	pop	r0
    1a4e:	0f be       	out	0x3f, r0	; 63
    1a50:	4e 81       	ldd	r20, Y+6	; 0x06
    1a52:	5f 81       	ldd	r21, Y+7	; 0x07
    1a54:	68 85       	ldd	r22, Y+8	; 0x08
    1a56:	79 85       	ldd	r23, Y+9	; 0x09
    1a58:	c8 01       	movw	r24, r16
    1a5a:	43 96       	adiw	r24, 0x13	; 19
    1a5c:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <vTaskPlaceOnEventList>
    1a60:	c8 01       	movw	r24, r16
    1a62:	59 dd       	rcall	.-1358   	; 0x1516 <prvUnlockQueue>
    1a64:	58 d7       	rcall	.+3760   	; 0x2916 <xTaskResumeAll>
    1a66:	81 11       	cpse	r24, r1
    1a68:	91 cf       	rjmp	.-222    	; 0x198c <xQueueSemaphoreTake+0x2a>
    1a6a:	e9 db       	rcall	.-2094   	; 0x123e <vPortYield>
    1a6c:	8f cf       	rjmp	.-226    	; 0x198c <xQueueSemaphoreTake+0x2a>
    1a6e:	c8 01       	movw	r24, r16
    1a70:	52 dd       	rcall	.-1372   	; 0x1516 <prvUnlockQueue>
    1a72:	51 d7       	rcall	.+3746   	; 0x2916 <xTaskResumeAll>
    1a74:	8b cf       	rjmp	.-234    	; 0x198c <xQueueSemaphoreTake+0x2a>
    1a76:	c8 01       	movw	r24, r16
    1a78:	4e dd       	rcall	.-1380   	; 0x1516 <prvUnlockQueue>
    1a7a:	4d d7       	rcall	.+3738   	; 0x2916 <xTaskResumeAll>
    1a7c:	c8 01       	movw	r24, r16
    1a7e:	b7 dc       	rcall	.-1682   	; 0x13ee <prvIsQueueEmpty>
    1a80:	88 23       	and	r24, r24
    1a82:	09 f4       	brne	.+2      	; 0x1a86 <xQueueSemaphoreTake+0x124>
    1a84:	83 cf       	rjmp	.-250    	; 0x198c <xQueueSemaphoreTake+0x2a>
    1a86:	ee 20       	and	r14, r14
    1a88:	79 f0       	breq	.+30     	; 0x1aa8 <xQueueSemaphoreTake+0x146>
    1a8a:	0f b6       	in	r0, 0x3f	; 63
    1a8c:	f8 94       	cli
    1a8e:	0f 92       	push	r0
    1a90:	c8 01       	movw	r24, r16
    1a92:	9d dc       	rcall	.-1734   	; 0x13ce <prvGetDisinheritPriorityAfterTimeout>
    1a94:	68 2f       	mov	r22, r24
    1a96:	f8 01       	movw	r30, r16
    1a98:	84 81       	ldd	r24, Z+4	; 0x04
    1a9a:	95 81       	ldd	r25, Z+5	; 0x05
    1a9c:	0e 94 be 19 	call	0x337c	; 0x337c <vTaskPriorityDisinheritAfterTimeout>
    1aa0:	0f 90       	pop	r0
    1aa2:	0f be       	out	0x3f, r0	; 63
    1aa4:	80 e0       	ldi	r24, 0x00	; 0
    1aa6:	01 c0       	rjmp	.+2      	; 0x1aaa <xQueueSemaphoreTake+0x148>
    1aa8:	80 e0       	ldi	r24, 0x00	; 0
    1aaa:	29 96       	adiw	r28, 0x09	; 9
    1aac:	0f b6       	in	r0, 0x3f	; 63
    1aae:	f8 94       	cli
    1ab0:	de bf       	out	0x3e, r29	; 62
    1ab2:	0f be       	out	0x3f, r0	; 63
    1ab4:	cd bf       	out	0x3d, r28	; 61
    1ab6:	df 91       	pop	r29
    1ab8:	cf 91       	pop	r28
    1aba:	1f 91       	pop	r17
    1abc:	0f 91       	pop	r16
    1abe:	ff 90       	pop	r15
    1ac0:	ef 90       	pop	r14
    1ac2:	08 95       	ret

00001ac4 <vQueueWaitForMessageRestricted>:
    1ac4:	cf 93       	push	r28
    1ac6:	df 93       	push	r29
    1ac8:	ec 01       	movw	r28, r24
    1aca:	0f b6       	in	r0, 0x3f	; 63
    1acc:	f8 94       	cli
    1ace:	0f 92       	push	r0
    1ad0:	89 a1       	ldd	r24, Y+33	; 0x21
    1ad2:	8f 3f       	cpi	r24, 0xFF	; 255
    1ad4:	09 f4       	brne	.+2      	; 0x1ad8 <vQueueWaitForMessageRestricted+0x14>
    1ad6:	19 a2       	std	Y+33, r1	; 0x21
    1ad8:	8a a1       	ldd	r24, Y+34	; 0x22
    1ada:	8f 3f       	cpi	r24, 0xFF	; 255
    1adc:	09 f4       	brne	.+2      	; 0x1ae0 <vQueueWaitForMessageRestricted+0x1c>
    1ade:	1a a2       	std	Y+34, r1	; 0x22
    1ae0:	0f 90       	pop	r0
    1ae2:	0f be       	out	0x3f, r0	; 63
    1ae4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1ae6:	81 11       	cpse	r24, r1
    1ae8:	04 c0       	rjmp	.+8      	; 0x1af2 <vQueueWaitForMessageRestricted+0x2e>
    1aea:	ce 01       	movw	r24, r28
    1aec:	43 96       	adiw	r24, 0x13	; 19
    1aee:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <vTaskPlaceOnEventListRestricted>
    1af2:	ce 01       	movw	r24, r28
    1af4:	10 dd       	rcall	.-1504   	; 0x1516 <prvUnlockQueue>
    1af6:	df 91       	pop	r29
    1af8:	cf 91       	pop	r28
    1afa:	08 95       	ret

00001afc <prvBytesInBuffer>:
    1afc:	fc 01       	movw	r30, r24
    1afe:	44 81       	ldd	r20, Z+4	; 0x04
    1b00:	55 81       	ldd	r21, Z+5	; 0x05
    1b02:	22 81       	ldd	r18, Z+2	; 0x02
    1b04:	33 81       	ldd	r19, Z+3	; 0x03
    1b06:	24 0f       	add	r18, r20
    1b08:	35 1f       	adc	r19, r21
    1b0a:	80 81       	ld	r24, Z
    1b0c:	91 81       	ldd	r25, Z+1	; 0x01
    1b0e:	b9 01       	movw	r22, r18
    1b10:	68 1b       	sub	r22, r24
    1b12:	79 0b       	sbc	r23, r25
    1b14:	cb 01       	movw	r24, r22
    1b16:	64 17       	cp	r22, r20
    1b18:	75 07       	cpc	r23, r21
    1b1a:	10 f0       	brcs	.+4      	; 0x1b20 <prvBytesInBuffer+0x24>
    1b1c:	84 1b       	sub	r24, r20
    1b1e:	95 0b       	sbc	r25, r21
    1b20:	08 95       	ret

00001b22 <prvInitialiseNewStreamBuffer>:
    1b22:	0f 93       	push	r16
    1b24:	fc 01       	movw	r30, r24
    1b26:	8f e0       	ldi	r24, 0x0F	; 15
    1b28:	df 01       	movw	r26, r30
    1b2a:	1d 92       	st	X+, r1
    1b2c:	8a 95       	dec	r24
    1b2e:	e9 f7       	brne	.-6      	; 0x1b2a <prvInitialiseNewStreamBuffer+0x8>
    1b30:	75 87       	std	Z+13, r23	; 0x0d
    1b32:	64 87       	std	Z+12, r22	; 0x0c
    1b34:	55 83       	std	Z+5, r21	; 0x05
    1b36:	44 83       	std	Z+4, r20	; 0x04
    1b38:	37 83       	std	Z+7, r19	; 0x07
    1b3a:	26 83       	std	Z+6, r18	; 0x06
    1b3c:	06 87       	std	Z+14, r16	; 0x0e
    1b3e:	0f 91       	pop	r16
    1b40:	08 95       	ret

00001b42 <prvWriteBytesToBuffer>:
    1b42:	af 92       	push	r10
    1b44:	bf 92       	push	r11
    1b46:	cf 92       	push	r12
    1b48:	df 92       	push	r13
    1b4a:	ef 92       	push	r14
    1b4c:	ff 92       	push	r15
    1b4e:	0f 93       	push	r16
    1b50:	1f 93       	push	r17
    1b52:	cf 93       	push	r28
    1b54:	df 93       	push	r29
    1b56:	6c 01       	movw	r12, r24
    1b58:	5b 01       	movw	r10, r22
    1b5a:	7a 01       	movw	r14, r20
    1b5c:	fc 01       	movw	r30, r24
    1b5e:	c2 81       	ldd	r28, Z+2	; 0x02
    1b60:	d3 81       	ldd	r29, Z+3	; 0x03
    1b62:	04 81       	ldd	r16, Z+4	; 0x04
    1b64:	15 81       	ldd	r17, Z+5	; 0x05
    1b66:	0c 1b       	sub	r16, r28
    1b68:	1d 0b       	sbc	r17, r29
    1b6a:	40 17       	cp	r20, r16
    1b6c:	51 07       	cpc	r21, r17
    1b6e:	08 f4       	brcc	.+2      	; 0x1b72 <prvWriteBytesToBuffer+0x30>
    1b70:	8a 01       	movw	r16, r20
    1b72:	f6 01       	movw	r30, r12
    1b74:	84 85       	ldd	r24, Z+12	; 0x0c
    1b76:	95 85       	ldd	r25, Z+13	; 0x0d
    1b78:	a8 01       	movw	r20, r16
    1b7a:	b5 01       	movw	r22, r10
    1b7c:	8c 0f       	add	r24, r28
    1b7e:	9d 1f       	adc	r25, r29
    1b80:	0e 94 c7 33 	call	0x678e	; 0x678e <memcpy>
    1b84:	0e 15       	cp	r16, r14
    1b86:	1f 05       	cpc	r17, r15
    1b88:	58 f4       	brcc	.+22     	; 0x1ba0 <prvWriteBytesToBuffer+0x5e>
    1b8a:	a7 01       	movw	r20, r14
    1b8c:	40 1b       	sub	r20, r16
    1b8e:	51 0b       	sbc	r21, r17
    1b90:	b5 01       	movw	r22, r10
    1b92:	60 0f       	add	r22, r16
    1b94:	71 1f       	adc	r23, r17
    1b96:	f6 01       	movw	r30, r12
    1b98:	84 85       	ldd	r24, Z+12	; 0x0c
    1b9a:	95 85       	ldd	r25, Z+13	; 0x0d
    1b9c:	0e 94 c7 33 	call	0x678e	; 0x678e <memcpy>
    1ba0:	ce 01       	movw	r24, r28
    1ba2:	8e 0d       	add	r24, r14
    1ba4:	9f 1d       	adc	r25, r15
    1ba6:	f6 01       	movw	r30, r12
    1ba8:	24 81       	ldd	r18, Z+4	; 0x04
    1baa:	35 81       	ldd	r19, Z+5	; 0x05
    1bac:	82 17       	cp	r24, r18
    1bae:	93 07       	cpc	r25, r19
    1bb0:	10 f0       	brcs	.+4      	; 0x1bb6 <prvWriteBytesToBuffer+0x74>
    1bb2:	82 1b       	sub	r24, r18
    1bb4:	93 0b       	sbc	r25, r19
    1bb6:	f6 01       	movw	r30, r12
    1bb8:	93 83       	std	Z+3, r25	; 0x03
    1bba:	82 83       	std	Z+2, r24	; 0x02
    1bbc:	c7 01       	movw	r24, r14
    1bbe:	df 91       	pop	r29
    1bc0:	cf 91       	pop	r28
    1bc2:	1f 91       	pop	r17
    1bc4:	0f 91       	pop	r16
    1bc6:	ff 90       	pop	r15
    1bc8:	ef 90       	pop	r14
    1bca:	df 90       	pop	r13
    1bcc:	cf 90       	pop	r12
    1bce:	bf 90       	pop	r11
    1bd0:	af 90       	pop	r10
    1bd2:	08 95       	ret

00001bd4 <prvWriteMessageToBuffer>:
    1bd4:	cf 92       	push	r12
    1bd6:	df 92       	push	r13
    1bd8:	ef 92       	push	r14
    1bda:	ff 92       	push	r15
    1bdc:	0f 93       	push	r16
    1bde:	1f 93       	push	r17
    1be0:	cf 93       	push	r28
    1be2:	df 93       	push	r29
    1be4:	1f 92       	push	r1
    1be6:	1f 92       	push	r1
    1be8:	cd b7       	in	r28, 0x3d	; 61
    1bea:	de b7       	in	r29, 0x3e	; 62
    1bec:	7c 01       	movw	r14, r24
    1bee:	6b 01       	movw	r12, r22
    1bf0:	5a 83       	std	Y+2, r21	; 0x02
    1bf2:	49 83       	std	Y+1, r20	; 0x01
    1bf4:	21 15       	cp	r18, r1
    1bf6:	31 05       	cpc	r19, r1
    1bf8:	c1 f0       	breq	.+48     	; 0x1c2a <prvWriteMessageToBuffer+0x56>
    1bfa:	fc 01       	movw	r30, r24
    1bfc:	86 85       	ldd	r24, Z+14	; 0x0e
    1bfe:	80 fd       	sbrc	r24, 0
    1c00:	08 c0       	rjmp	.+16     	; 0x1c12 <prvWriteMessageToBuffer+0x3e>
    1c02:	42 17       	cp	r20, r18
    1c04:	53 07       	cpc	r21, r19
    1c06:	08 f4       	brcc	.+2      	; 0x1c0a <prvWriteMessageToBuffer+0x36>
    1c08:	9a 01       	movw	r18, r20
    1c0a:	3a 83       	std	Y+2, r19	; 0x02
    1c0c:	29 83       	std	Y+1, r18	; 0x01
    1c0e:	81 e0       	ldi	r24, 0x01	; 1
    1c10:	0f c0       	rjmp	.+30     	; 0x1c30 <prvWriteMessageToBuffer+0x5c>
    1c12:	20 17       	cp	r18, r16
    1c14:	31 07       	cpc	r19, r17
    1c16:	58 f0       	brcs	.+22     	; 0x1c2e <prvWriteMessageToBuffer+0x5a>
    1c18:	42 e0       	ldi	r20, 0x02	; 2
    1c1a:	50 e0       	ldi	r21, 0x00	; 0
    1c1c:	be 01       	movw	r22, r28
    1c1e:	6f 5f       	subi	r22, 0xFF	; 255
    1c20:	7f 4f       	sbci	r23, 0xFF	; 255
    1c22:	c7 01       	movw	r24, r14
    1c24:	8e df       	rcall	.-228    	; 0x1b42 <prvWriteBytesToBuffer>
    1c26:	81 e0       	ldi	r24, 0x01	; 1
    1c28:	03 c0       	rjmp	.+6      	; 0x1c30 <prvWriteMessageToBuffer+0x5c>
    1c2a:	80 e0       	ldi	r24, 0x00	; 0
    1c2c:	01 c0       	rjmp	.+2      	; 0x1c30 <prvWriteMessageToBuffer+0x5c>
    1c2e:	80 e0       	ldi	r24, 0x00	; 0
    1c30:	88 23       	and	r24, r24
    1c32:	31 f0       	breq	.+12     	; 0x1c40 <prvWriteMessageToBuffer+0x6c>
    1c34:	49 81       	ldd	r20, Y+1	; 0x01
    1c36:	5a 81       	ldd	r21, Y+2	; 0x02
    1c38:	b6 01       	movw	r22, r12
    1c3a:	c7 01       	movw	r24, r14
    1c3c:	82 df       	rcall	.-252    	; 0x1b42 <prvWriteBytesToBuffer>
    1c3e:	02 c0       	rjmp	.+4      	; 0x1c44 <prvWriteMessageToBuffer+0x70>
    1c40:	80 e0       	ldi	r24, 0x00	; 0
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	0f 90       	pop	r0
    1c46:	0f 90       	pop	r0
    1c48:	df 91       	pop	r29
    1c4a:	cf 91       	pop	r28
    1c4c:	1f 91       	pop	r17
    1c4e:	0f 91       	pop	r16
    1c50:	ff 90       	pop	r15
    1c52:	ef 90       	pop	r14
    1c54:	df 90       	pop	r13
    1c56:	cf 90       	pop	r12
    1c58:	08 95       	ret

00001c5a <prvReadBytesFromBuffer>:
    1c5a:	af 92       	push	r10
    1c5c:	bf 92       	push	r11
    1c5e:	cf 92       	push	r12
    1c60:	df 92       	push	r13
    1c62:	ef 92       	push	r14
    1c64:	ff 92       	push	r15
    1c66:	0f 93       	push	r16
    1c68:	1f 93       	push	r17
    1c6a:	cf 93       	push	r28
    1c6c:	df 93       	push	r29
    1c6e:	7c 01       	movw	r14, r24
    1c70:	5b 01       	movw	r10, r22
    1c72:	e9 01       	movw	r28, r18
    1c74:	42 17       	cp	r20, r18
    1c76:	53 07       	cpc	r21, r19
    1c78:	08 f4       	brcc	.+2      	; 0x1c7c <prvReadBytesFromBuffer+0x22>
    1c7a:	ea 01       	movw	r28, r20
    1c7c:	20 97       	sbiw	r28, 0x00	; 0
    1c7e:	81 f1       	breq	.+96     	; 0x1ce0 <prvReadBytesFromBuffer+0x86>
    1c80:	f7 01       	movw	r30, r14
    1c82:	00 81       	ld	r16, Z
    1c84:	11 81       	ldd	r17, Z+1	; 0x01
    1c86:	84 81       	ldd	r24, Z+4	; 0x04
    1c88:	95 81       	ldd	r25, Z+5	; 0x05
    1c8a:	80 1b       	sub	r24, r16
    1c8c:	91 0b       	sbc	r25, r17
    1c8e:	6e 01       	movw	r12, r28
    1c90:	8c 17       	cp	r24, r28
    1c92:	9d 07       	cpc	r25, r29
    1c94:	08 f4       	brcc	.+2      	; 0x1c98 <prvReadBytesFromBuffer+0x3e>
    1c96:	6c 01       	movw	r12, r24
    1c98:	f7 01       	movw	r30, r14
    1c9a:	64 85       	ldd	r22, Z+12	; 0x0c
    1c9c:	75 85       	ldd	r23, Z+13	; 0x0d
    1c9e:	60 0f       	add	r22, r16
    1ca0:	71 1f       	adc	r23, r17
    1ca2:	a6 01       	movw	r20, r12
    1ca4:	c5 01       	movw	r24, r10
    1ca6:	0e 94 c7 33 	call	0x678e	; 0x678e <memcpy>
    1caa:	cc 16       	cp	r12, r28
    1cac:	dd 06       	cpc	r13, r29
    1cae:	58 f4       	brcc	.+22     	; 0x1cc6 <prvReadBytesFromBuffer+0x6c>
    1cb0:	ae 01       	movw	r20, r28
    1cb2:	4c 19       	sub	r20, r12
    1cb4:	5d 09       	sbc	r21, r13
    1cb6:	f7 01       	movw	r30, r14
    1cb8:	64 85       	ldd	r22, Z+12	; 0x0c
    1cba:	75 85       	ldd	r23, Z+13	; 0x0d
    1cbc:	c5 01       	movw	r24, r10
    1cbe:	8c 0d       	add	r24, r12
    1cc0:	9d 1d       	adc	r25, r13
    1cc2:	0e 94 c7 33 	call	0x678e	; 0x678e <memcpy>
    1cc6:	0c 0f       	add	r16, r28
    1cc8:	1d 1f       	adc	r17, r29
    1cca:	f7 01       	movw	r30, r14
    1ccc:	84 81       	ldd	r24, Z+4	; 0x04
    1cce:	95 81       	ldd	r25, Z+5	; 0x05
    1cd0:	08 17       	cp	r16, r24
    1cd2:	19 07       	cpc	r17, r25
    1cd4:	10 f0       	brcs	.+4      	; 0x1cda <prvReadBytesFromBuffer+0x80>
    1cd6:	08 1b       	sub	r16, r24
    1cd8:	19 0b       	sbc	r17, r25
    1cda:	f7 01       	movw	r30, r14
    1cdc:	11 83       	std	Z+1, r17	; 0x01
    1cde:	00 83       	st	Z, r16
    1ce0:	ce 01       	movw	r24, r28
    1ce2:	df 91       	pop	r29
    1ce4:	cf 91       	pop	r28
    1ce6:	1f 91       	pop	r17
    1ce8:	0f 91       	pop	r16
    1cea:	ff 90       	pop	r15
    1cec:	ef 90       	pop	r14
    1cee:	df 90       	pop	r13
    1cf0:	cf 90       	pop	r12
    1cf2:	bf 90       	pop	r11
    1cf4:	af 90       	pop	r10
    1cf6:	08 95       	ret

00001cf8 <prvReadMessageFromBuffer>:
    1cf8:	6f 92       	push	r6
    1cfa:	7f 92       	push	r7
    1cfc:	8f 92       	push	r8
    1cfe:	9f 92       	push	r9
    1d00:	af 92       	push	r10
    1d02:	bf 92       	push	r11
    1d04:	cf 92       	push	r12
    1d06:	df 92       	push	r13
    1d08:	ef 92       	push	r14
    1d0a:	ff 92       	push	r15
    1d0c:	0f 93       	push	r16
    1d0e:	1f 93       	push	r17
    1d10:	cf 93       	push	r28
    1d12:	df 93       	push	r29
    1d14:	1f 92       	push	r1
    1d16:	1f 92       	push	r1
    1d18:	cd b7       	in	r28, 0x3d	; 61
    1d1a:	de b7       	in	r29, 0x3e	; 62
    1d1c:	6c 01       	movw	r12, r24
    1d1e:	4b 01       	movw	r8, r22
    1d20:	5a 01       	movw	r10, r20
    1d22:	79 01       	movw	r14, r18
    1d24:	01 15       	cp	r16, r1
    1d26:	11 05       	cpc	r17, r1
    1d28:	b1 f0       	breq	.+44     	; 0x1d56 <prvReadMessageFromBuffer+0x5e>
    1d2a:	fc 01       	movw	r30, r24
    1d2c:	60 80       	ld	r6, Z
    1d2e:	71 80       	ldd	r7, Z+1	; 0x01
    1d30:	a8 01       	movw	r20, r16
    1d32:	be 01       	movw	r22, r28
    1d34:	6f 5f       	subi	r22, 0xFF	; 255
    1d36:	7f 4f       	sbci	r23, 0xFF	; 255
    1d38:	90 df       	rcall	.-224    	; 0x1c5a <prvReadBytesFromBuffer>
    1d3a:	89 81       	ldd	r24, Y+1	; 0x01
    1d3c:	9a 81       	ldd	r25, Y+2	; 0x02
    1d3e:	e0 1a       	sub	r14, r16
    1d40:	f1 0a       	sbc	r15, r17
    1d42:	a8 16       	cp	r10, r24
    1d44:	b9 06       	cpc	r11, r25
    1d46:	30 f4       	brcc	.+12     	; 0x1d54 <prvReadMessageFromBuffer+0x5c>
    1d48:	f6 01       	movw	r30, r12
    1d4a:	71 82       	std	Z+1, r7	; 0x01
    1d4c:	60 82       	st	Z, r6
    1d4e:	a1 2c       	mov	r10, r1
    1d50:	b1 2c       	mov	r11, r1
    1d52:	01 c0       	rjmp	.+2      	; 0x1d56 <prvReadMessageFromBuffer+0x5e>
    1d54:	5c 01       	movw	r10, r24
    1d56:	97 01       	movw	r18, r14
    1d58:	a5 01       	movw	r20, r10
    1d5a:	b4 01       	movw	r22, r8
    1d5c:	c6 01       	movw	r24, r12
    1d5e:	7d df       	rcall	.-262    	; 0x1c5a <prvReadBytesFromBuffer>
    1d60:	0f 90       	pop	r0
    1d62:	0f 90       	pop	r0
    1d64:	df 91       	pop	r29
    1d66:	cf 91       	pop	r28
    1d68:	1f 91       	pop	r17
    1d6a:	0f 91       	pop	r16
    1d6c:	ff 90       	pop	r15
    1d6e:	ef 90       	pop	r14
    1d70:	df 90       	pop	r13
    1d72:	cf 90       	pop	r12
    1d74:	bf 90       	pop	r11
    1d76:	af 90       	pop	r10
    1d78:	9f 90       	pop	r9
    1d7a:	8f 90       	pop	r8
    1d7c:	7f 90       	pop	r7
    1d7e:	6f 90       	pop	r6
    1d80:	08 95       	ret

00001d82 <xStreamBufferGenericCreate>:
    1d82:	cf 92       	push	r12
    1d84:	df 92       	push	r13
    1d86:	ef 92       	push	r14
    1d88:	ff 92       	push	r15
    1d8a:	0f 93       	push	r16
    1d8c:	cf 93       	push	r28
    1d8e:	df 93       	push	r29
    1d90:	ec 01       	movw	r28, r24
    1d92:	6b 01       	movw	r12, r22
    1d94:	41 30       	cpi	r20, 0x01	; 1
    1d96:	11 f4       	brne	.+4      	; 0x1d9c <xStreamBufferGenericCreate+0x1a>
    1d98:	01 e0       	ldi	r16, 0x01	; 1
    1d9a:	01 c0       	rjmp	.+2      	; 0x1d9e <xStreamBufferGenericCreate+0x1c>
    1d9c:	00 e0       	ldi	r16, 0x00	; 0
    1d9e:	c1 14       	cp	r12, r1
    1da0:	d1 04       	cpc	r13, r1
    1da2:	19 f4       	brne	.+6      	; 0x1daa <xStreamBufferGenericCreate+0x28>
    1da4:	cc 24       	eor	r12, r12
    1da6:	c3 94       	inc	r12
    1da8:	d1 2c       	mov	r13, r1
    1daa:	ce 01       	movw	r24, r28
    1dac:	40 96       	adiw	r24, 0x10	; 16
    1dae:	c8 17       	cp	r28, r24
    1db0:	d9 07       	cpc	r29, r25
    1db2:	20 f4       	brcc	.+8      	; 0x1dbc <xStreamBufferGenericCreate+0x3a>
    1db4:	21 96       	adiw	r28, 0x01	; 1
    1db6:	8f d8       	rcall	.-3810   	; 0xed6 <pvPortMalloc>
    1db8:	7c 01       	movw	r14, r24
    1dba:	02 c0       	rjmp	.+4      	; 0x1dc0 <xStreamBufferGenericCreate+0x3e>
    1dbc:	e1 2c       	mov	r14, r1
    1dbe:	f1 2c       	mov	r15, r1
    1dc0:	e1 14       	cp	r14, r1
    1dc2:	f1 04       	cpc	r15, r1
    1dc4:	39 f0       	breq	.+14     	; 0x1dd4 <xStreamBufferGenericCreate+0x52>
    1dc6:	96 01       	movw	r18, r12
    1dc8:	ae 01       	movw	r20, r28
    1dca:	b7 01       	movw	r22, r14
    1dcc:	61 5f       	subi	r22, 0xF1	; 241
    1dce:	7f 4f       	sbci	r23, 0xFF	; 255
    1dd0:	c7 01       	movw	r24, r14
    1dd2:	a7 de       	rcall	.-690    	; 0x1b22 <prvInitialiseNewStreamBuffer>
    1dd4:	c7 01       	movw	r24, r14
    1dd6:	df 91       	pop	r29
    1dd8:	cf 91       	pop	r28
    1dda:	0f 91       	pop	r16
    1ddc:	ff 90       	pop	r15
    1dde:	ef 90       	pop	r14
    1de0:	df 90       	pop	r13
    1de2:	cf 90       	pop	r12
    1de4:	08 95       	ret

00001de6 <xStreamBufferReset>:
    1de6:	0f 93       	push	r16
    1de8:	0f b6       	in	r0, 0x3f	; 63
    1dea:	f8 94       	cli
    1dec:	0f 92       	push	r0
    1dee:	fc 01       	movw	r30, r24
    1df0:	20 85       	ldd	r18, Z+8	; 0x08
    1df2:	31 85       	ldd	r19, Z+9	; 0x09
    1df4:	23 2b       	or	r18, r19
    1df6:	71 f4       	brne	.+28     	; 0x1e14 <xStreamBufferReset+0x2e>
    1df8:	22 85       	ldd	r18, Z+10	; 0x0a
    1dfa:	33 85       	ldd	r19, Z+11	; 0x0b
    1dfc:	23 2b       	or	r18, r19
    1dfe:	61 f4       	brne	.+24     	; 0x1e18 <xStreamBufferReset+0x32>
    1e00:	26 81       	ldd	r18, Z+6	; 0x06
    1e02:	37 81       	ldd	r19, Z+7	; 0x07
    1e04:	44 81       	ldd	r20, Z+4	; 0x04
    1e06:	55 81       	ldd	r21, Z+5	; 0x05
    1e08:	64 85       	ldd	r22, Z+12	; 0x0c
    1e0a:	75 85       	ldd	r23, Z+13	; 0x0d
    1e0c:	06 85       	ldd	r16, Z+14	; 0x0e
    1e0e:	89 de       	rcall	.-750    	; 0x1b22 <prvInitialiseNewStreamBuffer>
    1e10:	81 e0       	ldi	r24, 0x01	; 1
    1e12:	03 c0       	rjmp	.+6      	; 0x1e1a <xStreamBufferReset+0x34>
    1e14:	80 e0       	ldi	r24, 0x00	; 0
    1e16:	01 c0       	rjmp	.+2      	; 0x1e1a <xStreamBufferReset+0x34>
    1e18:	80 e0       	ldi	r24, 0x00	; 0
    1e1a:	0f 90       	pop	r0
    1e1c:	0f be       	out	0x3f, r0	; 63
    1e1e:	0f 91       	pop	r16
    1e20:	08 95       	ret

00001e22 <xStreamBufferSpacesAvailable>:
    1e22:	fc 01       	movw	r30, r24
    1e24:	24 81       	ldd	r18, Z+4	; 0x04
    1e26:	35 81       	ldd	r19, Z+5	; 0x05
    1e28:	80 81       	ld	r24, Z
    1e2a:	91 81       	ldd	r25, Z+1	; 0x01
    1e2c:	82 0f       	add	r24, r18
    1e2e:	93 1f       	adc	r25, r19
    1e30:	42 81       	ldd	r20, Z+2	; 0x02
    1e32:	53 81       	ldd	r21, Z+3	; 0x03
    1e34:	84 1b       	sub	r24, r20
    1e36:	95 0b       	sbc	r25, r21
    1e38:	01 97       	sbiw	r24, 0x01	; 1
    1e3a:	82 17       	cp	r24, r18
    1e3c:	93 07       	cpc	r25, r19
    1e3e:	10 f0       	brcs	.+4      	; 0x1e44 <xStreamBufferSpacesAvailable+0x22>
    1e40:	82 1b       	sub	r24, r18
    1e42:	93 0b       	sbc	r25, r19
    1e44:	08 95       	ret

00001e46 <xStreamBufferSend>:
    1e46:	2f 92       	push	r2
    1e48:	3f 92       	push	r3
    1e4a:	4f 92       	push	r4
    1e4c:	5f 92       	push	r5
    1e4e:	6f 92       	push	r6
    1e50:	7f 92       	push	r7
    1e52:	8f 92       	push	r8
    1e54:	9f 92       	push	r9
    1e56:	af 92       	push	r10
    1e58:	bf 92       	push	r11
    1e5a:	cf 92       	push	r12
    1e5c:	df 92       	push	r13
    1e5e:	ef 92       	push	r14
    1e60:	ff 92       	push	r15
    1e62:	0f 93       	push	r16
    1e64:	1f 93       	push	r17
    1e66:	cf 93       	push	r28
    1e68:	df 93       	push	r29
    1e6a:	cd b7       	in	r28, 0x3d	; 61
    1e6c:	de b7       	in	r29, 0x3e	; 62
    1e6e:	2b 97       	sbiw	r28, 0x0b	; 11
    1e70:	0f b6       	in	r0, 0x3f	; 63
    1e72:	f8 94       	cli
    1e74:	de bf       	out	0x3e, r29	; 62
    1e76:	0f be       	out	0x3f, r0	; 63
    1e78:	cd bf       	out	0x3d, r28	; 61
    1e7a:	4c 01       	movw	r8, r24
    1e7c:	7b 87       	std	Y+11, r23	; 0x0b
    1e7e:	6a 87       	std	Y+10, r22	; 0x0a
    1e80:	1a 01       	movw	r2, r20
    1e82:	0e 83       	std	Y+6, r16	; 0x06
    1e84:	1f 83       	std	Y+7, r17	; 0x07
    1e86:	28 87       	std	Y+8, r18	; 0x08
    1e88:	39 87       	std	Y+9, r19	; 0x09
    1e8a:	fc 01       	movw	r30, r24
    1e8c:	84 81       	ldd	r24, Z+4	; 0x04
    1e8e:	95 81       	ldd	r25, Z+5	; 0x05
    1e90:	01 97       	sbiw	r24, 0x01	; 1
    1e92:	26 85       	ldd	r18, Z+14	; 0x0e
    1e94:	20 ff       	sbrs	r18, 0
    1e96:	0c c0       	rjmp	.+24     	; 0x1eb0 <xStreamBufferSend+0x6a>
    1e98:	2a 01       	movw	r4, r20
    1e9a:	f2 e0       	ldi	r31, 0x02	; 2
    1e9c:	4f 0e       	add	r4, r31
    1e9e:	51 1c       	adc	r5, r1
    1ea0:	84 15       	cp	r24, r4
    1ea2:	95 05       	cpc	r25, r5
    1ea4:	58 f4       	brcc	.+22     	; 0x1ebc <xStreamBufferSend+0x76>
    1ea6:	1e 82       	std	Y+6, r1	; 0x06
    1ea8:	1f 82       	std	Y+7, r1	; 0x07
    1eaa:	18 86       	std	Y+8, r1	; 0x08
    1eac:	19 86       	std	Y+9, r1	; 0x09
    1eae:	06 c0       	rjmp	.+12     	; 0x1ebc <xStreamBufferSend+0x76>
    1eb0:	84 17       	cp	r24, r20
    1eb2:	95 07       	cpc	r25, r21
    1eb4:	10 f0       	brcs	.+4      	; 0x1eba <xStreamBufferSend+0x74>
    1eb6:	2a 01       	movw	r4, r20
    1eb8:	01 c0       	rjmp	.+2      	; 0x1ebc <xStreamBufferSend+0x76>
    1eba:	2c 01       	movw	r4, r24
    1ebc:	8e 81       	ldd	r24, Y+6	; 0x06
    1ebe:	9f 81       	ldd	r25, Y+7	; 0x07
    1ec0:	a8 85       	ldd	r26, Y+8	; 0x08
    1ec2:	b9 85       	ldd	r27, Y+9	; 0x09
    1ec4:	89 2b       	or	r24, r25
    1ec6:	8a 2b       	or	r24, r26
    1ec8:	8b 2b       	or	r24, r27
    1eca:	09 f4       	brne	.+2      	; 0x1ece <xStreamBufferSend+0x88>
    1ecc:	38 c0       	rjmp	.+112    	; 0x1f3e <xStreamBufferSend+0xf8>
    1ece:	ce 01       	movw	r24, r28
    1ed0:	01 96       	adiw	r24, 0x01	; 1
    1ed2:	0e 94 38 18 	call	0x3070	; 0x3070 <vTaskSetTimeOutState>
    1ed6:	0f b6       	in	r0, 0x3f	; 63
    1ed8:	f8 94       	cli
    1eda:	0f 92       	push	r0
    1edc:	c4 01       	movw	r24, r8
    1ede:	a1 df       	rcall	.-190    	; 0x1e22 <xStreamBufferSpacesAvailable>
    1ee0:	3c 01       	movw	r6, r24
    1ee2:	84 15       	cp	r24, r4
    1ee4:	95 05       	cpc	r25, r5
    1ee6:	40 f5       	brcc	.+80     	; 0x1f38 <xStreamBufferSend+0xf2>
    1ee8:	60 e0       	ldi	r22, 0x00	; 0
    1eea:	80 e0       	ldi	r24, 0x00	; 0
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <xTaskGenericNotifyStateClear>
    1ef2:	0e 94 c9 18 	call	0x3192	; 0x3192 <xTaskGetCurrentTaskHandle>
    1ef6:	f4 01       	movw	r30, r8
    1ef8:	93 87       	std	Z+11, r25	; 0x0b
    1efa:	82 87       	std	Z+10, r24	; 0x0a
    1efc:	0f 90       	pop	r0
    1efe:	0f be       	out	0x3f, r0	; 63
    1f00:	ae 80       	ldd	r10, Y+6	; 0x06
    1f02:	bf 80       	ldd	r11, Y+7	; 0x07
    1f04:	c8 84       	ldd	r12, Y+8	; 0x08
    1f06:	d9 84       	ldd	r13, Y+9	; 0x09
    1f08:	e1 2c       	mov	r14, r1
    1f0a:	f1 2c       	mov	r15, r1
    1f0c:	00 e0       	ldi	r16, 0x00	; 0
    1f0e:	10 e0       	ldi	r17, 0x00	; 0
    1f10:	98 01       	movw	r18, r16
    1f12:	40 e0       	ldi	r20, 0x00	; 0
    1f14:	50 e0       	ldi	r21, 0x00	; 0
    1f16:	ba 01       	movw	r22, r20
    1f18:	80 e0       	ldi	r24, 0x00	; 0
    1f1a:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <xTaskGenericNotifyWait>
    1f1e:	f4 01       	movw	r30, r8
    1f20:	13 86       	std	Z+11, r1	; 0x0b
    1f22:	12 86       	std	Z+10, r1	; 0x0a
    1f24:	be 01       	movw	r22, r28
    1f26:	6a 5f       	subi	r22, 0xFA	; 250
    1f28:	7f 4f       	sbci	r23, 0xFF	; 255
    1f2a:	ce 01       	movw	r24, r28
    1f2c:	01 96       	adiw	r24, 0x01	; 1
    1f2e:	0e 94 5f 18 	call	0x30be	; 0x30be <xTaskCheckForTimeOut>
    1f32:	88 23       	and	r24, r24
    1f34:	81 f2       	breq	.-96     	; 0x1ed6 <xStreamBufferSend+0x90>
    1f36:	05 c0       	rjmp	.+10     	; 0x1f42 <xStreamBufferSend+0xfc>
    1f38:	0f 90       	pop	r0
    1f3a:	0f be       	out	0x3f, r0	; 63
    1f3c:	02 c0       	rjmp	.+4      	; 0x1f42 <xStreamBufferSend+0xfc>
    1f3e:	61 2c       	mov	r6, r1
    1f40:	71 2c       	mov	r7, r1
    1f42:	61 14       	cp	r6, r1
    1f44:	71 04       	cpc	r7, r1
    1f46:	19 f4       	brne	.+6      	; 0x1f4e <xStreamBufferSend+0x108>
    1f48:	c4 01       	movw	r24, r8
    1f4a:	6b df       	rcall	.-298    	; 0x1e22 <xStreamBufferSpacesAvailable>
    1f4c:	3c 01       	movw	r6, r24
    1f4e:	82 01       	movw	r16, r4
    1f50:	93 01       	movw	r18, r6
    1f52:	a1 01       	movw	r20, r2
    1f54:	6a 85       	ldd	r22, Y+10	; 0x0a
    1f56:	7b 85       	ldd	r23, Y+11	; 0x0b
    1f58:	c4 01       	movw	r24, r8
    1f5a:	3c de       	rcall	.-904    	; 0x1bd4 <prvWriteMessageToBuffer>
    1f5c:	6c 01       	movw	r12, r24
    1f5e:	89 2b       	or	r24, r25
    1f60:	e9 f0       	breq	.+58     	; 0x1f9c <xStreamBufferSend+0x156>
    1f62:	c4 01       	movw	r24, r8
    1f64:	cb dd       	rcall	.-1130   	; 0x1afc <prvBytesInBuffer>
    1f66:	f4 01       	movw	r30, r8
    1f68:	26 81       	ldd	r18, Z+6	; 0x06
    1f6a:	37 81       	ldd	r19, Z+7	; 0x07
    1f6c:	82 17       	cp	r24, r18
    1f6e:	93 07       	cpc	r25, r19
    1f70:	a8 f0       	brcs	.+42     	; 0x1f9c <xStreamBufferSend+0x156>
    1f72:	91 d3       	rcall	.+1826   	; 0x2696 <vTaskSuspendAll>
    1f74:	f4 01       	movw	r30, r8
    1f76:	80 85       	ldd	r24, Z+8	; 0x08
    1f78:	91 85       	ldd	r25, Z+9	; 0x09
    1f7a:	89 2b       	or	r24, r25
    1f7c:	71 f0       	breq	.+28     	; 0x1f9a <xStreamBufferSend+0x154>
    1f7e:	80 85       	ldd	r24, Z+8	; 0x08
    1f80:	91 85       	ldd	r25, Z+9	; 0x09
    1f82:	e1 2c       	mov	r14, r1
    1f84:	f1 2c       	mov	r15, r1
    1f86:	00 e0       	ldi	r16, 0x00	; 0
    1f88:	20 e0       	ldi	r18, 0x00	; 0
    1f8a:	30 e0       	ldi	r19, 0x00	; 0
    1f8c:	a9 01       	movw	r20, r18
    1f8e:	60 e0       	ldi	r22, 0x00	; 0
    1f90:	0e 94 09 1b 	call	0x3612	; 0x3612 <xTaskGenericNotify>
    1f94:	f4 01       	movw	r30, r8
    1f96:	11 86       	std	Z+9, r1	; 0x09
    1f98:	10 86       	std	Z+8, r1	; 0x08
    1f9a:	bd d4       	rcall	.+2426   	; 0x2916 <xTaskResumeAll>
    1f9c:	c6 01       	movw	r24, r12
    1f9e:	2b 96       	adiw	r28, 0x0b	; 11
    1fa0:	0f b6       	in	r0, 0x3f	; 63
    1fa2:	f8 94       	cli
    1fa4:	de bf       	out	0x3e, r29	; 62
    1fa6:	0f be       	out	0x3f, r0	; 63
    1fa8:	cd bf       	out	0x3d, r28	; 61
    1faa:	df 91       	pop	r29
    1fac:	cf 91       	pop	r28
    1fae:	1f 91       	pop	r17
    1fb0:	0f 91       	pop	r16
    1fb2:	ff 90       	pop	r15
    1fb4:	ef 90       	pop	r14
    1fb6:	df 90       	pop	r13
    1fb8:	cf 90       	pop	r12
    1fba:	bf 90       	pop	r11
    1fbc:	af 90       	pop	r10
    1fbe:	9f 90       	pop	r9
    1fc0:	8f 90       	pop	r8
    1fc2:	7f 90       	pop	r7
    1fc4:	6f 90       	pop	r6
    1fc6:	5f 90       	pop	r5
    1fc8:	4f 90       	pop	r4
    1fca:	3f 90       	pop	r3
    1fcc:	2f 90       	pop	r2
    1fce:	08 95       	ret

00001fd0 <xStreamBufferSendFromISR>:
    1fd0:	af 92       	push	r10
    1fd2:	bf 92       	push	r11
    1fd4:	cf 92       	push	r12
    1fd6:	df 92       	push	r13
    1fd8:	ef 92       	push	r14
    1fda:	ff 92       	push	r15
    1fdc:	0f 93       	push	r16
    1fde:	1f 93       	push	r17
    1fe0:	cf 93       	push	r28
    1fe2:	df 93       	push	r29
    1fe4:	ec 01       	movw	r28, r24
    1fe6:	7b 01       	movw	r14, r22
    1fe8:	5a 01       	movw	r10, r20
    1fea:	69 01       	movw	r12, r18
    1fec:	8e 85       	ldd	r24, Y+14	; 0x0e
    1fee:	80 ff       	sbrs	r24, 0
    1ff0:	04 c0       	rjmp	.+8      	; 0x1ffa <xStreamBufferSendFromISR+0x2a>
    1ff2:	8a 01       	movw	r16, r20
    1ff4:	0e 5f       	subi	r16, 0xFE	; 254
    1ff6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ff8:	01 c0       	rjmp	.+2      	; 0x1ffc <xStreamBufferSendFromISR+0x2c>
    1ffa:	8a 01       	movw	r16, r20
    1ffc:	ce 01       	movw	r24, r28
    1ffe:	11 df       	rcall	.-478    	; 0x1e22 <xStreamBufferSpacesAvailable>
    2000:	9c 01       	movw	r18, r24
    2002:	a5 01       	movw	r20, r10
    2004:	b7 01       	movw	r22, r14
    2006:	ce 01       	movw	r24, r28
    2008:	e5 dd       	rcall	.-1078   	; 0x1bd4 <prvWriteMessageToBuffer>
    200a:	5c 01       	movw	r10, r24
    200c:	89 2b       	or	r24, r25
    200e:	c1 f0       	breq	.+48     	; 0x2040 <__DATA_REGION_LENGTH__+0x40>
    2010:	ce 01       	movw	r24, r28
    2012:	74 dd       	rcall	.-1304   	; 0x1afc <prvBytesInBuffer>
    2014:	2e 81       	ldd	r18, Y+6	; 0x06
    2016:	3f 81       	ldd	r19, Y+7	; 0x07
    2018:	82 17       	cp	r24, r18
    201a:	93 07       	cpc	r25, r19
    201c:	88 f0       	brcs	.+34     	; 0x2040 <__DATA_REGION_LENGTH__+0x40>
    201e:	88 85       	ldd	r24, Y+8	; 0x08
    2020:	99 85       	ldd	r25, Y+9	; 0x09
    2022:	89 2b       	or	r24, r25
    2024:	69 f0       	breq	.+26     	; 0x2040 <__DATA_REGION_LENGTH__+0x40>
    2026:	88 85       	ldd	r24, Y+8	; 0x08
    2028:	99 85       	ldd	r25, Y+9	; 0x09
    202a:	e1 2c       	mov	r14, r1
    202c:	f1 2c       	mov	r15, r1
    202e:	00 e0       	ldi	r16, 0x00	; 0
    2030:	20 e0       	ldi	r18, 0x00	; 0
    2032:	30 e0       	ldi	r19, 0x00	; 0
    2034:	a9 01       	movw	r20, r18
    2036:	60 e0       	ldi	r22, 0x00	; 0
    2038:	0e 94 00 1c 	call	0x3800	; 0x3800 <xTaskGenericNotifyFromISR>
    203c:	19 86       	std	Y+9, r1	; 0x09
    203e:	18 86       	std	Y+8, r1	; 0x08
    2040:	c5 01       	movw	r24, r10
    2042:	df 91       	pop	r29
    2044:	cf 91       	pop	r28
    2046:	1f 91       	pop	r17
    2048:	0f 91       	pop	r16
    204a:	ff 90       	pop	r15
    204c:	ef 90       	pop	r14
    204e:	df 90       	pop	r13
    2050:	cf 90       	pop	r12
    2052:	bf 90       	pop	r11
    2054:	af 90       	pop	r10
    2056:	08 95       	ret

00002058 <xStreamBufferReceive>:
    2058:	4f 92       	push	r4
    205a:	5f 92       	push	r5
    205c:	6f 92       	push	r6
    205e:	7f 92       	push	r7
    2060:	8f 92       	push	r8
    2062:	9f 92       	push	r9
    2064:	af 92       	push	r10
    2066:	bf 92       	push	r11
    2068:	cf 92       	push	r12
    206a:	df 92       	push	r13
    206c:	ef 92       	push	r14
    206e:	ff 92       	push	r15
    2070:	0f 93       	push	r16
    2072:	1f 93       	push	r17
    2074:	cf 93       	push	r28
    2076:	df 93       	push	r29
    2078:	ec 01       	movw	r28, r24
    207a:	2b 01       	movw	r4, r22
    207c:	3a 01       	movw	r6, r20
    207e:	58 01       	movw	r10, r16
    2080:	69 01       	movw	r12, r18
    2082:	8e 85       	ldd	r24, Y+14	; 0x0e
    2084:	80 ff       	sbrs	r24, 0
    2086:	05 c0       	rjmp	.+10     	; 0x2092 <xStreamBufferReceive+0x3a>
    2088:	68 94       	set
    208a:	88 24       	eor	r8, r8
    208c:	81 f8       	bld	r8, 1
    208e:	91 2c       	mov	r9, r1
    2090:	02 c0       	rjmp	.+4      	; 0x2096 <xStreamBufferReceive+0x3e>
    2092:	81 2c       	mov	r8, r1
    2094:	91 2c       	mov	r9, r1
    2096:	a1 14       	cp	r10, r1
    2098:	b1 04       	cpc	r11, r1
    209a:	c1 04       	cpc	r12, r1
    209c:	d1 04       	cpc	r13, r1
    209e:	41 f1       	breq	.+80     	; 0x20f0 <xStreamBufferReceive+0x98>
    20a0:	0f b6       	in	r0, 0x3f	; 63
    20a2:	f8 94       	cli
    20a4:	0f 92       	push	r0
    20a6:	ce 01       	movw	r24, r28
    20a8:	29 dd       	rcall	.-1454   	; 0x1afc <prvBytesInBuffer>
    20aa:	7c 01       	movw	r14, r24
    20ac:	88 16       	cp	r8, r24
    20ae:	99 06       	cpc	r9, r25
    20b0:	48 f0       	brcs	.+18     	; 0x20c4 <xStreamBufferReceive+0x6c>
    20b2:	60 e0       	ldi	r22, 0x00	; 0
    20b4:	80 e0       	ldi	r24, 0x00	; 0
    20b6:	90 e0       	ldi	r25, 0x00	; 0
    20b8:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <xTaskGenericNotifyStateClear>
    20bc:	0e 94 c9 18 	call	0x3192	; 0x3192 <xTaskGetCurrentTaskHandle>
    20c0:	99 87       	std	Y+9, r25	; 0x09
    20c2:	88 87       	std	Y+8, r24	; 0x08
    20c4:	0f 90       	pop	r0
    20c6:	0f be       	out	0x3f, r0	; 63
    20c8:	8e 14       	cp	r8, r14
    20ca:	9f 04       	cpc	r9, r15
    20cc:	a0 f0       	brcs	.+40     	; 0x20f6 <xStreamBufferReceive+0x9e>
    20ce:	e1 2c       	mov	r14, r1
    20d0:	f1 2c       	mov	r15, r1
    20d2:	00 e0       	ldi	r16, 0x00	; 0
    20d4:	10 e0       	ldi	r17, 0x00	; 0
    20d6:	98 01       	movw	r18, r16
    20d8:	40 e0       	ldi	r20, 0x00	; 0
    20da:	50 e0       	ldi	r21, 0x00	; 0
    20dc:	ba 01       	movw	r22, r20
    20de:	80 e0       	ldi	r24, 0x00	; 0
    20e0:	0e 94 61 1a 	call	0x34c2	; 0x34c2 <xTaskGenericNotifyWait>
    20e4:	19 86       	std	Y+9, r1	; 0x09
    20e6:	18 86       	std	Y+8, r1	; 0x08
    20e8:	ce 01       	movw	r24, r28
    20ea:	08 dd       	rcall	.-1520   	; 0x1afc <prvBytesInBuffer>
    20ec:	7c 01       	movw	r14, r24
    20ee:	03 c0       	rjmp	.+6      	; 0x20f6 <xStreamBufferReceive+0x9e>
    20f0:	ce 01       	movw	r24, r28
    20f2:	04 dd       	rcall	.-1528   	; 0x1afc <prvBytesInBuffer>
    20f4:	7c 01       	movw	r14, r24
    20f6:	8e 14       	cp	r8, r14
    20f8:	9f 04       	cpc	r9, r15
    20fa:	e8 f4       	brcc	.+58     	; 0x2136 <xStreamBufferReceive+0xde>
    20fc:	84 01       	movw	r16, r8
    20fe:	97 01       	movw	r18, r14
    2100:	a3 01       	movw	r20, r6
    2102:	b2 01       	movw	r22, r4
    2104:	ce 01       	movw	r24, r28
    2106:	f8 dd       	rcall	.-1040   	; 0x1cf8 <prvReadMessageFromBuffer>
    2108:	6c 01       	movw	r12, r24
    210a:	89 2b       	or	r24, r25
    210c:	b1 f0       	breq	.+44     	; 0x213a <xStreamBufferReceive+0xe2>
    210e:	c3 d2       	rcall	.+1414   	; 0x2696 <vTaskSuspendAll>
    2110:	8a 85       	ldd	r24, Y+10	; 0x0a
    2112:	9b 85       	ldd	r25, Y+11	; 0x0b
    2114:	89 2b       	or	r24, r25
    2116:	69 f0       	breq	.+26     	; 0x2132 <xStreamBufferReceive+0xda>
    2118:	8a 85       	ldd	r24, Y+10	; 0x0a
    211a:	9b 85       	ldd	r25, Y+11	; 0x0b
    211c:	e1 2c       	mov	r14, r1
    211e:	f1 2c       	mov	r15, r1
    2120:	00 e0       	ldi	r16, 0x00	; 0
    2122:	20 e0       	ldi	r18, 0x00	; 0
    2124:	30 e0       	ldi	r19, 0x00	; 0
    2126:	a9 01       	movw	r20, r18
    2128:	60 e0       	ldi	r22, 0x00	; 0
    212a:	0e 94 09 1b 	call	0x3612	; 0x3612 <xTaskGenericNotify>
    212e:	1b 86       	std	Y+11, r1	; 0x0b
    2130:	1a 86       	std	Y+10, r1	; 0x0a
    2132:	f1 d3       	rcall	.+2018   	; 0x2916 <xTaskResumeAll>
    2134:	02 c0       	rjmp	.+4      	; 0x213a <xStreamBufferReceive+0xe2>
    2136:	c1 2c       	mov	r12, r1
    2138:	d1 2c       	mov	r13, r1
    213a:	c6 01       	movw	r24, r12
    213c:	df 91       	pop	r29
    213e:	cf 91       	pop	r28
    2140:	1f 91       	pop	r17
    2142:	0f 91       	pop	r16
    2144:	ff 90       	pop	r15
    2146:	ef 90       	pop	r14
    2148:	df 90       	pop	r13
    214a:	cf 90       	pop	r12
    214c:	bf 90       	pop	r11
    214e:	af 90       	pop	r10
    2150:	9f 90       	pop	r9
    2152:	8f 90       	pop	r8
    2154:	7f 90       	pop	r7
    2156:	6f 90       	pop	r6
    2158:	5f 90       	pop	r5
    215a:	4f 90       	pop	r4
    215c:	08 95       	ret

0000215e <prvResetNextTaskUnblockTime>:
    215e:	e0 91 ce 11 	lds	r30, 0x11CE	; 0x8011ce <pxDelayedTaskList>
    2162:	f0 91 cf 11 	lds	r31, 0x11CF	; 0x8011cf <pxDelayedTaskList+0x1>
    2166:	80 81       	ld	r24, Z
    2168:	81 11       	cpse	r24, r1
    216a:	0c c0       	rjmp	.+24     	; 0x2184 <prvResetNextTaskUnblockTime+0x26>
    216c:	8f ef       	ldi	r24, 0xFF	; 255
    216e:	9f ef       	ldi	r25, 0xFF	; 255
    2170:	dc 01       	movw	r26, r24
    2172:	80 93 98 11 	sts	0x1198, r24	; 0x801198 <xNextTaskUnblockTime>
    2176:	90 93 99 11 	sts	0x1199, r25	; 0x801199 <xNextTaskUnblockTime+0x1>
    217a:	a0 93 9a 11 	sts	0x119A, r26	; 0x80119a <xNextTaskUnblockTime+0x2>
    217e:	b0 93 9b 11 	sts	0x119B, r27	; 0x80119b <xNextTaskUnblockTime+0x3>
    2182:	08 95       	ret
    2184:	e0 91 ce 11 	lds	r30, 0x11CE	; 0x8011ce <pxDelayedTaskList>
    2188:	f0 91 cf 11 	lds	r31, 0x11CF	; 0x8011cf <pxDelayedTaskList+0x1>
    218c:	07 80       	ldd	r0, Z+7	; 0x07
    218e:	f0 85       	ldd	r31, Z+8	; 0x08
    2190:	e0 2d       	mov	r30, r0
    2192:	80 81       	ld	r24, Z
    2194:	91 81       	ldd	r25, Z+1	; 0x01
    2196:	a2 81       	ldd	r26, Z+2	; 0x02
    2198:	b3 81       	ldd	r27, Z+3	; 0x03
    219a:	80 93 98 11 	sts	0x1198, r24	; 0x801198 <xNextTaskUnblockTime>
    219e:	90 93 99 11 	sts	0x1199, r25	; 0x801199 <xNextTaskUnblockTime+0x1>
    21a2:	a0 93 9a 11 	sts	0x119A, r26	; 0x80119a <xNextTaskUnblockTime+0x2>
    21a6:	b0 93 9b 11 	sts	0x119B, r27	; 0x80119b <xNextTaskUnblockTime+0x3>
    21aa:	08 95       	ret

000021ac <prvDeleteTCB>:
    21ac:	cf 93       	push	r28
    21ae:	df 93       	push	r29
    21b0:	ec 01       	movw	r28, r24
    21b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21b6:	0e 94 14 08 	call	0x1028	; 0x1028 <vPortFree>
    21ba:	ce 01       	movw	r24, r28
    21bc:	0e 94 14 08 	call	0x1028	; 0x1028 <vPortFree>
    21c0:	df 91       	pop	r29
    21c2:	cf 91       	pop	r28
    21c4:	08 95       	ret

000021c6 <prvInitialiseNewTask>:
    21c6:	4f 92       	push	r4
    21c8:	5f 92       	push	r5
    21ca:	6f 92       	push	r6
    21cc:	7f 92       	push	r7
    21ce:	8f 92       	push	r8
    21d0:	9f 92       	push	r9
    21d2:	af 92       	push	r10
    21d4:	bf 92       	push	r11
    21d6:	cf 92       	push	r12
    21d8:	df 92       	push	r13
    21da:	ef 92       	push	r14
    21dc:	ff 92       	push	r15
    21de:	0f 93       	push	r16
    21e0:	cf 93       	push	r28
    21e2:	df 93       	push	r29
    21e4:	2c 01       	movw	r4, r24
    21e6:	5b 01       	movw	r10, r22
    21e8:	4a 01       	movw	r8, r20
    21ea:	39 01       	movw	r6, r18
    21ec:	e6 01       	movw	r28, r12
    21ee:	65 ea       	ldi	r22, 0xA5	; 165
    21f0:	70 e0       	ldi	r23, 0x00	; 0
    21f2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21f4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21f6:	0e 94 d0 33 	call	0x67a0	; 0x67a0 <memset>
    21fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21fe:	21 e0       	ldi	r18, 0x01	; 1
    2200:	82 1a       	sub	r8, r18
    2202:	91 08       	sbc	r9, r1
    2204:	88 0e       	add	r8, r24
    2206:	99 1e       	adc	r9, r25
    2208:	a1 14       	cp	r10, r1
    220a:	b1 04       	cpc	r11, r1
    220c:	89 f4       	brne	.+34     	; 0x2230 <__stack+0x31>
    220e:	15 c0       	rjmp	.+42     	; 0x223a <__stack+0x3b>
    2210:	82 2f       	mov	r24, r18
    2212:	90 e0       	ldi	r25, 0x00	; 0
    2214:	f5 01       	movw	r30, r10
    2216:	e8 0f       	add	r30, r24
    2218:	f9 1f       	adc	r31, r25
    221a:	30 81       	ld	r19, Z
    221c:	de 01       	movw	r26, r28
    221e:	a8 0f       	add	r26, r24
    2220:	b9 1f       	adc	r27, r25
    2222:	5d 96       	adiw	r26, 0x1d	; 29
    2224:	3c 93       	st	X, r19
    2226:	80 81       	ld	r24, Z
    2228:	88 23       	and	r24, r24
    222a:	29 f0       	breq	.+10     	; 0x2236 <__stack+0x37>
    222c:	2f 5f       	subi	r18, 0xFF	; 255
    222e:	01 c0       	rjmp	.+2      	; 0x2232 <__stack+0x33>
    2230:	20 e0       	ldi	r18, 0x00	; 0
    2232:	20 31       	cpi	r18, 0x10	; 16
    2234:	68 f3       	brcs	.-38     	; 0x2210 <__stack+0x11>
    2236:	1c a6       	std	Y+44, r1	; 0x2c
    2238:	01 c0       	rjmp	.+2      	; 0x223c <__stack+0x3d>
    223a:	1d 8e       	std	Y+29, r1	; 0x1d
    223c:	0a 30       	cpi	r16, 0x0A	; 10
    223e:	08 f0       	brcs	.+2      	; 0x2242 <__stack+0x43>
    2240:	09 e0       	ldi	r16, 0x09	; 9
    2242:	0a 8f       	std	Y+26, r16	; 0x1a
    2244:	0d a7       	std	Y+45, r16	; 0x2d
    2246:	1e a6       	std	Y+46, r1	; 0x2e
    2248:	ce 01       	movw	r24, r28
    224a:	02 96       	adiw	r24, 0x02	; 2
    224c:	0e 94 62 08 	call	0x10c4	; 0x10c4 <vListInitialiseItem>
    2250:	ce 01       	movw	r24, r28
    2252:	0e 96       	adiw	r24, 0x0e	; 14
    2254:	0e 94 62 08 	call	0x10c4	; 0x10c4 <vListInitialiseItem>
    2258:	db 87       	std	Y+11, r29	; 0x0b
    225a:	ca 87       	std	Y+10, r28	; 0x0a
    225c:	8a e0       	ldi	r24, 0x0A	; 10
    225e:	90 e0       	ldi	r25, 0x00	; 0
    2260:	a0 e0       	ldi	r26, 0x00	; 0
    2262:	b0 e0       	ldi	r27, 0x00	; 0
    2264:	80 1b       	sub	r24, r16
    2266:	91 09       	sbc	r25, r1
    2268:	a1 09       	sbc	r26, r1
    226a:	b1 09       	sbc	r27, r1
    226c:	8e 87       	std	Y+14, r24	; 0x0e
    226e:	9f 87       	std	Y+15, r25	; 0x0f
    2270:	a8 8b       	std	Y+16, r26	; 0x10
    2272:	b9 8b       	std	Y+17, r27	; 0x11
    2274:	df 8b       	std	Y+23, r29	; 0x17
    2276:	ce 8b       	std	Y+22, r28	; 0x16
    2278:	84 e0       	ldi	r24, 0x04	; 4
    227a:	fe 01       	movw	r30, r28
    227c:	bf 96       	adiw	r30, 0x2f	; 47
    227e:	df 01       	movw	r26, r30
    2280:	1d 92       	st	X+, r1
    2282:	8a 95       	dec	r24
    2284:	e9 f7       	brne	.-6      	; 0x2280 <__stack+0x81>
    2286:	1b aa       	std	Y+51, r1	; 0x33
    2288:	a3 01       	movw	r20, r6
    228a:	b2 01       	movw	r22, r4
    228c:	c4 01       	movw	r24, r8
    228e:	0e 94 d6 08 	call	0x11ac	; 0x11ac <pxPortInitialiseStack>
    2292:	99 83       	std	Y+1, r25	; 0x01
    2294:	88 83       	st	Y, r24
    2296:	e1 14       	cp	r14, r1
    2298:	f1 04       	cpc	r15, r1
    229a:	19 f0       	breq	.+6      	; 0x22a2 <__stack+0xa3>
    229c:	f7 01       	movw	r30, r14
    229e:	d1 83       	std	Z+1, r29	; 0x01
    22a0:	c0 83       	st	Z, r28
    22a2:	df 91       	pop	r29
    22a4:	cf 91       	pop	r28
    22a6:	0f 91       	pop	r16
    22a8:	ff 90       	pop	r15
    22aa:	ef 90       	pop	r14
    22ac:	df 90       	pop	r13
    22ae:	cf 90       	pop	r12
    22b0:	bf 90       	pop	r11
    22b2:	af 90       	pop	r10
    22b4:	9f 90       	pop	r9
    22b6:	8f 90       	pop	r8
    22b8:	7f 90       	pop	r7
    22ba:	6f 90       	pop	r6
    22bc:	5f 90       	pop	r5
    22be:	4f 90       	pop	r4
    22c0:	08 95       	ret

000022c2 <prvInitialiseTaskLists>:
    22c2:	cf 93       	push	r28
    22c4:	c0 e0       	ldi	r28, 0x00	; 0
    22c6:	09 c0       	rjmp	.+18     	; 0x22da <prvInitialiseTaskLists+0x18>
    22c8:	2b e0       	ldi	r18, 0x0B	; 11
    22ca:	c2 9f       	mul	r28, r18
    22cc:	c0 01       	movw	r24, r0
    22ce:	11 24       	eor	r1, r1
    22d0:	8a 51       	subi	r24, 0x1A	; 26
    22d2:	9e 4e       	sbci	r25, 0xEE	; 238
    22d4:	0e 94 51 08 	call	0x10a2	; 0x10a2 <vListInitialise>
    22d8:	cf 5f       	subi	r28, 0xFF	; 255
    22da:	ca 30       	cpi	r28, 0x0A	; 10
    22dc:	a8 f3       	brcs	.-22     	; 0x22c8 <prvInitialiseTaskLists+0x6>
    22de:	8b ed       	ldi	r24, 0xDB	; 219
    22e0:	91 e1       	ldi	r25, 0x11	; 17
    22e2:	0e 94 51 08 	call	0x10a2	; 0x10a2 <vListInitialise>
    22e6:	80 ed       	ldi	r24, 0xD0	; 208
    22e8:	91 e1       	ldi	r25, 0x11	; 17
    22ea:	0e 94 51 08 	call	0x10a2	; 0x10a2 <vListInitialise>
    22ee:	81 ec       	ldi	r24, 0xC1	; 193
    22f0:	91 e1       	ldi	r25, 0x11	; 17
    22f2:	0e 94 51 08 	call	0x10a2	; 0x10a2 <vListInitialise>
    22f6:	86 eb       	ldi	r24, 0xB6	; 182
    22f8:	91 e1       	ldi	r25, 0x11	; 17
    22fa:	0e 94 51 08 	call	0x10a2	; 0x10a2 <vListInitialise>
    22fe:	8a ea       	ldi	r24, 0xAA	; 170
    2300:	91 e1       	ldi	r25, 0x11	; 17
    2302:	0e 94 51 08 	call	0x10a2	; 0x10a2 <vListInitialise>
    2306:	8b ed       	ldi	r24, 0xDB	; 219
    2308:	91 e1       	ldi	r25, 0x11	; 17
    230a:	90 93 cf 11 	sts	0x11CF, r25	; 0x8011cf <pxDelayedTaskList+0x1>
    230e:	80 93 ce 11 	sts	0x11CE, r24	; 0x8011ce <pxDelayedTaskList>
    2312:	80 ed       	ldi	r24, 0xD0	; 208
    2314:	91 e1       	ldi	r25, 0x11	; 17
    2316:	90 93 cd 11 	sts	0x11CD, r25	; 0x8011cd <pxOverflowDelayedTaskList+0x1>
    231a:	80 93 cc 11 	sts	0x11CC, r24	; 0x8011cc <pxOverflowDelayedTaskList>
    231e:	cf 91       	pop	r28
    2320:	08 95       	ret

00002322 <prvAddNewTaskToReadyList>:
    2322:	cf 93       	push	r28
    2324:	df 93       	push	r29
    2326:	ec 01       	movw	r28, r24
    2328:	0f b6       	in	r0, 0x3f	; 63
    232a:	f8 94       	cli
    232c:	0f 92       	push	r0
    232e:	80 91 a9 11 	lds	r24, 0x11A9	; 0x8011a9 <uxCurrentNumberOfTasks>
    2332:	8f 5f       	subi	r24, 0xFF	; 255
    2334:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <uxCurrentNumberOfTasks>
    2338:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    233c:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2340:	89 2b       	or	r24, r25
    2342:	51 f4       	brne	.+20     	; 0x2358 <prvAddNewTaskToReadyList+0x36>
    2344:	d0 93 55 12 	sts	0x1255, r29	; 0x801255 <pxCurrentTCB+0x1>
    2348:	c0 93 54 12 	sts	0x1254, r28	; 0x801254 <pxCurrentTCB>
    234c:	80 91 a9 11 	lds	r24, 0x11A9	; 0x8011a9 <uxCurrentNumberOfTasks>
    2350:	81 30       	cpi	r24, 0x01	; 1
    2352:	91 f4       	brne	.+36     	; 0x2378 <prvAddNewTaskToReadyList+0x56>
    2354:	b6 df       	rcall	.-148    	; 0x22c2 <prvInitialiseTaskLists>
    2356:	10 c0       	rjmp	.+32     	; 0x2378 <prvAddNewTaskToReadyList+0x56>
    2358:	80 91 a3 11 	lds	r24, 0x11A3	; 0x8011a3 <xSchedulerRunning>
    235c:	81 11       	cpse	r24, r1
    235e:	0c c0       	rjmp	.+24     	; 0x2378 <prvAddNewTaskToReadyList+0x56>
    2360:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    2364:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2368:	92 8d       	ldd	r25, Z+26	; 0x1a
    236a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    236c:	89 17       	cp	r24, r25
    236e:	20 f0       	brcs	.+8      	; 0x2378 <prvAddNewTaskToReadyList+0x56>
    2370:	d0 93 55 12 	sts	0x1255, r29	; 0x801255 <pxCurrentTCB+0x1>
    2374:	c0 93 54 12 	sts	0x1254, r28	; 0x801254 <pxCurrentTCB>
    2378:	80 91 9c 11 	lds	r24, 0x119C	; 0x80119c <uxTaskNumber>
    237c:	8f 5f       	subi	r24, 0xFF	; 255
    237e:	80 93 9c 11 	sts	0x119C, r24	; 0x80119c <uxTaskNumber>
    2382:	ea 8d       	ldd	r30, Y+26	; 0x1a
    2384:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    2388:	8e 17       	cp	r24, r30
    238a:	10 f4       	brcc	.+4      	; 0x2390 <prvAddNewTaskToReadyList+0x6e>
    238c:	e0 93 a4 11 	sts	0x11A4, r30	; 0x8011a4 <uxTopReadyPriority>
    2390:	8b e0       	ldi	r24, 0x0B	; 11
    2392:	8e 9f       	mul	r24, r30
    2394:	f0 01       	movw	r30, r0
    2396:	11 24       	eor	r1, r1
    2398:	ea 51       	subi	r30, 0x1A	; 26
    239a:	fe 4e       	sbci	r31, 0xEE	; 238
    239c:	01 80       	ldd	r0, Z+1	; 0x01
    239e:	f2 81       	ldd	r31, Z+2	; 0x02
    23a0:	e0 2d       	mov	r30, r0
    23a2:	ff 83       	std	Y+7, r31	; 0x07
    23a4:	ee 83       	std	Y+6, r30	; 0x06
    23a6:	26 81       	ldd	r18, Z+6	; 0x06
    23a8:	37 81       	ldd	r19, Z+7	; 0x07
    23aa:	39 87       	std	Y+9, r19	; 0x09
    23ac:	28 87       	std	Y+8, r18	; 0x08
    23ae:	a6 81       	ldd	r26, Z+6	; 0x06
    23b0:	b7 81       	ldd	r27, Z+7	; 0x07
    23b2:	9e 01       	movw	r18, r28
    23b4:	2e 5f       	subi	r18, 0xFE	; 254
    23b6:	3f 4f       	sbci	r19, 0xFF	; 255
    23b8:	15 96       	adiw	r26, 0x05	; 5
    23ba:	3c 93       	st	X, r19
    23bc:	2e 93       	st	-X, r18
    23be:	14 97       	sbiw	r26, 0x04	; 4
    23c0:	37 83       	std	Z+7, r19	; 0x07
    23c2:	26 83       	std	Z+6, r18	; 0x06
    23c4:	ea 8d       	ldd	r30, Y+26	; 0x1a
    23c6:	8e 9f       	mul	r24, r30
    23c8:	f0 01       	movw	r30, r0
    23ca:	11 24       	eor	r1, r1
    23cc:	ea 51       	subi	r30, 0x1A	; 26
    23ce:	fe 4e       	sbci	r31, 0xEE	; 238
    23d0:	fd 87       	std	Y+13, r31	; 0x0d
    23d2:	ec 87       	std	Y+12, r30	; 0x0c
    23d4:	80 81       	ld	r24, Z
    23d6:	8f 5f       	subi	r24, 0xFF	; 255
    23d8:	80 83       	st	Z, r24
    23da:	0f 90       	pop	r0
    23dc:	0f be       	out	0x3f, r0	; 63
    23de:	80 91 a3 11 	lds	r24, 0x11A3	; 0x8011a3 <xSchedulerRunning>
    23e2:	88 23       	and	r24, r24
    23e4:	51 f0       	breq	.+20     	; 0x23fa <prvAddNewTaskToReadyList+0xd8>
    23e6:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    23ea:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    23ee:	92 8d       	ldd	r25, Z+26	; 0x1a
    23f0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    23f2:	98 17       	cp	r25, r24
    23f4:	10 f4       	brcc	.+4      	; 0x23fa <prvAddNewTaskToReadyList+0xd8>
    23f6:	0e 94 1f 09 	call	0x123e	; 0x123e <vPortYield>
    23fa:	df 91       	pop	r29
    23fc:	cf 91       	pop	r28
    23fe:	08 95       	ret

00002400 <prvCheckTasksWaitingTermination>:
    2400:	cf 93       	push	r28
    2402:	df 93       	push	r29
    2404:	1b c0       	rjmp	.+54     	; 0x243c <prvCheckTasksWaitingTermination+0x3c>
    2406:	0f b6       	in	r0, 0x3f	; 63
    2408:	f8 94       	cli
    240a:	0f 92       	push	r0
    240c:	e0 91 bd 11 	lds	r30, 0x11BD	; 0x8011bd <xTasksWaitingTermination+0x7>
    2410:	f0 91 be 11 	lds	r31, 0x11BE	; 0x8011be <xTasksWaitingTermination+0x8>
    2414:	c0 85       	ldd	r28, Z+8	; 0x08
    2416:	d1 85       	ldd	r29, Z+9	; 0x09
    2418:	ce 01       	movw	r24, r28
    241a:	02 96       	adiw	r24, 0x02	; 2
    241c:	0e 94 a3 08 	call	0x1146	; 0x1146 <uxListRemove>
    2420:	80 91 a9 11 	lds	r24, 0x11A9	; 0x8011a9 <uxCurrentNumberOfTasks>
    2424:	81 50       	subi	r24, 0x01	; 1
    2426:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <uxCurrentNumberOfTasks>
    242a:	80 91 b5 11 	lds	r24, 0x11B5	; 0x8011b5 <uxDeletedTasksWaitingCleanUp>
    242e:	81 50       	subi	r24, 0x01	; 1
    2430:	80 93 b5 11 	sts	0x11B5, r24	; 0x8011b5 <uxDeletedTasksWaitingCleanUp>
    2434:	0f 90       	pop	r0
    2436:	0f be       	out	0x3f, r0	; 63
    2438:	ce 01       	movw	r24, r28
    243a:	b8 de       	rcall	.-656    	; 0x21ac <prvDeleteTCB>
    243c:	80 91 b5 11 	lds	r24, 0x11B5	; 0x8011b5 <uxDeletedTasksWaitingCleanUp>
    2440:	81 11       	cpse	r24, r1
    2442:	e1 cf       	rjmp	.-62     	; 0x2406 <prvCheckTasksWaitingTermination+0x6>
    2444:	df 91       	pop	r29
    2446:	cf 91       	pop	r28
    2448:	08 95       	ret

0000244a <prvAddCurrentTaskToDelayedList>:
    244a:	8f 92       	push	r8
    244c:	9f 92       	push	r9
    244e:	af 92       	push	r10
    2450:	bf 92       	push	r11
    2452:	cf 92       	push	r12
    2454:	df 92       	push	r13
    2456:	ef 92       	push	r14
    2458:	ff 92       	push	r15
    245a:	cf 93       	push	r28
    245c:	df 93       	push	r29
    245e:	6b 01       	movw	r12, r22
    2460:	7c 01       	movw	r14, r24
    2462:	c4 2f       	mov	r28, r20
    2464:	80 90 a5 11 	lds	r8, 0x11A5	; 0x8011a5 <xTickCount>
    2468:	90 90 a6 11 	lds	r9, 0x11A6	; 0x8011a6 <xTickCount+0x1>
    246c:	a0 90 a7 11 	lds	r10, 0x11A7	; 0x8011a7 <xTickCount+0x2>
    2470:	b0 90 a8 11 	lds	r11, 0x11A8	; 0x8011a8 <xTickCount+0x3>
    2474:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    2478:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    247c:	02 96       	adiw	r24, 0x02	; 2
    247e:	0e 94 a3 08 	call	0x1146	; 0x1146 <uxListRemove>
    2482:	8f ef       	ldi	r24, 0xFF	; 255
    2484:	c8 16       	cp	r12, r24
    2486:	d8 06       	cpc	r13, r24
    2488:	e8 06       	cpc	r14, r24
    248a:	f8 06       	cpc	r15, r24
    248c:	b1 f5       	brne	.+108    	; 0x24fa <prvAddCurrentTaskToDelayedList+0xb0>
    248e:	cc 23       	and	r28, r28
    2490:	a1 f1       	breq	.+104    	; 0x24fa <prvAddCurrentTaskToDelayedList+0xb0>
    2492:	ea ea       	ldi	r30, 0xAA	; 170
    2494:	f1 e1       	ldi	r31, 0x11	; 17
    2496:	a1 81       	ldd	r26, Z+1	; 0x01
    2498:	b2 81       	ldd	r27, Z+2	; 0x02
    249a:	c0 91 54 12 	lds	r28, 0x1254	; 0x801254 <pxCurrentTCB>
    249e:	d0 91 55 12 	lds	r29, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    24a2:	bf 83       	std	Y+7, r27	; 0x07
    24a4:	ae 83       	std	Y+6, r26	; 0x06
    24a6:	c0 91 54 12 	lds	r28, 0x1254	; 0x801254 <pxCurrentTCB>
    24aa:	d0 91 55 12 	lds	r29, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    24ae:	16 96       	adiw	r26, 0x06	; 6
    24b0:	8d 91       	ld	r24, X+
    24b2:	9c 91       	ld	r25, X
    24b4:	17 97       	sbiw	r26, 0x07	; 7
    24b6:	99 87       	std	Y+9, r25	; 0x09
    24b8:	88 87       	std	Y+8, r24	; 0x08
    24ba:	16 96       	adiw	r26, 0x06	; 6
    24bc:	cd 91       	ld	r28, X+
    24be:	dc 91       	ld	r29, X
    24c0:	17 97       	sbiw	r26, 0x07	; 7
    24c2:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    24c6:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    24ca:	02 96       	adiw	r24, 0x02	; 2
    24cc:	9d 83       	std	Y+5, r25	; 0x05
    24ce:	8c 83       	std	Y+4, r24	; 0x04
    24d0:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    24d4:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    24d8:	02 96       	adiw	r24, 0x02	; 2
    24da:	17 96       	adiw	r26, 0x07	; 7
    24dc:	9c 93       	st	X, r25
    24de:	8e 93       	st	-X, r24
    24e0:	16 97       	sbiw	r26, 0x06	; 6
    24e2:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    24e6:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    24ea:	1d 96       	adiw	r26, 0x0d	; 13
    24ec:	fc 93       	st	X, r31
    24ee:	ee 93       	st	-X, r30
    24f0:	1c 97       	sbiw	r26, 0x0c	; 12
    24f2:	80 81       	ld	r24, Z
    24f4:	8f 5f       	subi	r24, 0xFF	; 255
    24f6:	80 83       	st	Z, r24
    24f8:	3f c0       	rjmp	.+126    	; 0x2578 <prvAddCurrentTaskToDelayedList+0x12e>
    24fa:	c8 0c       	add	r12, r8
    24fc:	d9 1c       	adc	r13, r9
    24fe:	ea 1c       	adc	r14, r10
    2500:	fb 1c       	adc	r15, r11
    2502:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    2506:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    250a:	c2 82       	std	Z+2, r12	; 0x02
    250c:	d3 82       	std	Z+3, r13	; 0x03
    250e:	e4 82       	std	Z+4, r14	; 0x04
    2510:	f5 82       	std	Z+5, r15	; 0x05
    2512:	c8 14       	cp	r12, r8
    2514:	d9 04       	cpc	r13, r9
    2516:	ea 04       	cpc	r14, r10
    2518:	fb 04       	cpc	r15, r11
    251a:	68 f4       	brcc	.+26     	; 0x2536 <prvAddCurrentTaskToDelayedList+0xec>
    251c:	60 91 54 12 	lds	r22, 0x1254	; 0x801254 <pxCurrentTCB>
    2520:	70 91 55 12 	lds	r23, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2524:	80 91 cc 11 	lds	r24, 0x11CC	; 0x8011cc <pxOverflowDelayedTaskList>
    2528:	90 91 cd 11 	lds	r25, 0x11CD	; 0x8011cd <pxOverflowDelayedTaskList+0x1>
    252c:	6e 5f       	subi	r22, 0xFE	; 254
    252e:	7f 4f       	sbci	r23, 0xFF	; 255
    2530:	0e 94 66 08 	call	0x10cc	; 0x10cc <vListInsert>
    2534:	21 c0       	rjmp	.+66     	; 0x2578 <prvAddCurrentTaskToDelayedList+0x12e>
    2536:	60 91 54 12 	lds	r22, 0x1254	; 0x801254 <pxCurrentTCB>
    253a:	70 91 55 12 	lds	r23, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    253e:	80 91 ce 11 	lds	r24, 0x11CE	; 0x8011ce <pxDelayedTaskList>
    2542:	90 91 cf 11 	lds	r25, 0x11CF	; 0x8011cf <pxDelayedTaskList+0x1>
    2546:	6e 5f       	subi	r22, 0xFE	; 254
    2548:	7f 4f       	sbci	r23, 0xFF	; 255
    254a:	0e 94 66 08 	call	0x10cc	; 0x10cc <vListInsert>
    254e:	80 91 98 11 	lds	r24, 0x1198	; 0x801198 <xNextTaskUnblockTime>
    2552:	90 91 99 11 	lds	r25, 0x1199	; 0x801199 <xNextTaskUnblockTime+0x1>
    2556:	a0 91 9a 11 	lds	r26, 0x119A	; 0x80119a <xNextTaskUnblockTime+0x2>
    255a:	b0 91 9b 11 	lds	r27, 0x119B	; 0x80119b <xNextTaskUnblockTime+0x3>
    255e:	c8 16       	cp	r12, r24
    2560:	d9 06       	cpc	r13, r25
    2562:	ea 06       	cpc	r14, r26
    2564:	fb 06       	cpc	r15, r27
    2566:	40 f4       	brcc	.+16     	; 0x2578 <prvAddCurrentTaskToDelayedList+0x12e>
    2568:	c0 92 98 11 	sts	0x1198, r12	; 0x801198 <xNextTaskUnblockTime>
    256c:	d0 92 99 11 	sts	0x1199, r13	; 0x801199 <xNextTaskUnblockTime+0x1>
    2570:	e0 92 9a 11 	sts	0x119A, r14	; 0x80119a <xNextTaskUnblockTime+0x2>
    2574:	f0 92 9b 11 	sts	0x119B, r15	; 0x80119b <xNextTaskUnblockTime+0x3>
    2578:	df 91       	pop	r29
    257a:	cf 91       	pop	r28
    257c:	ff 90       	pop	r15
    257e:	ef 90       	pop	r14
    2580:	df 90       	pop	r13
    2582:	cf 90       	pop	r12
    2584:	bf 90       	pop	r11
    2586:	af 90       	pop	r10
    2588:	9f 90       	pop	r9
    258a:	8f 90       	pop	r8
    258c:	08 95       	ret

0000258e <xTaskCreate>:
    258e:	2f 92       	push	r2
    2590:	3f 92       	push	r3
    2592:	4f 92       	push	r4
    2594:	5f 92       	push	r5
    2596:	6f 92       	push	r6
    2598:	7f 92       	push	r7
    259a:	8f 92       	push	r8
    259c:	9f 92       	push	r9
    259e:	af 92       	push	r10
    25a0:	bf 92       	push	r11
    25a2:	cf 92       	push	r12
    25a4:	df 92       	push	r13
    25a6:	ef 92       	push	r14
    25a8:	ff 92       	push	r15
    25aa:	0f 93       	push	r16
    25ac:	cf 93       	push	r28
    25ae:	df 93       	push	r29
    25b0:	3c 01       	movw	r6, r24
    25b2:	1b 01       	movw	r2, r22
    25b4:	4a 01       	movw	r8, r20
    25b6:	29 01       	movw	r4, r18
    25b8:	ca 01       	movw	r24, r20
    25ba:	0e 94 6b 07 	call	0xed6	; 0xed6 <pvPortMalloc>
    25be:	6c 01       	movw	r12, r24
    25c0:	89 2b       	or	r24, r25
    25c2:	71 f0       	breq	.+28     	; 0x25e0 <xTaskCreate+0x52>
    25c4:	84 e3       	ldi	r24, 0x34	; 52
    25c6:	90 e0       	ldi	r25, 0x00	; 0
    25c8:	0e 94 6b 07 	call	0xed6	; 0xed6 <pvPortMalloc>
    25cc:	ec 01       	movw	r28, r24
    25ce:	89 2b       	or	r24, r25
    25d0:	19 f0       	breq	.+6      	; 0x25d8 <xTaskCreate+0x4a>
    25d2:	dc 8e       	std	Y+28, r13	; 0x1c
    25d4:	cb 8e       	std	Y+27, r12	; 0x1b
    25d6:	06 c0       	rjmp	.+12     	; 0x25e4 <xTaskCreate+0x56>
    25d8:	c6 01       	movw	r24, r12
    25da:	0e 94 14 08 	call	0x1028	; 0x1028 <vPortFree>
    25de:	02 c0       	rjmp	.+4      	; 0x25e4 <xTaskCreate+0x56>
    25e0:	c0 e0       	ldi	r28, 0x00	; 0
    25e2:	d0 e0       	ldi	r29, 0x00	; 0
    25e4:	20 97       	sbiw	r28, 0x00	; 0
    25e6:	61 f0       	breq	.+24     	; 0x2600 <xTaskCreate+0x72>
    25e8:	a1 2c       	mov	r10, r1
    25ea:	b1 2c       	mov	r11, r1
    25ec:	6e 01       	movw	r12, r28
    25ee:	92 01       	movw	r18, r4
    25f0:	a4 01       	movw	r20, r8
    25f2:	b1 01       	movw	r22, r2
    25f4:	c3 01       	movw	r24, r6
    25f6:	e7 dd       	rcall	.-1074   	; 0x21c6 <prvInitialiseNewTask>
    25f8:	ce 01       	movw	r24, r28
    25fa:	93 de       	rcall	.-730    	; 0x2322 <prvAddNewTaskToReadyList>
    25fc:	81 e0       	ldi	r24, 0x01	; 1
    25fe:	01 c0       	rjmp	.+2      	; 0x2602 <xTaskCreate+0x74>
    2600:	8f ef       	ldi	r24, 0xFF	; 255
    2602:	df 91       	pop	r29
    2604:	cf 91       	pop	r28
    2606:	0f 91       	pop	r16
    2608:	ff 90       	pop	r15
    260a:	ef 90       	pop	r14
    260c:	df 90       	pop	r13
    260e:	cf 90       	pop	r12
    2610:	bf 90       	pop	r11
    2612:	af 90       	pop	r10
    2614:	9f 90       	pop	r9
    2616:	8f 90       	pop	r8
    2618:	7f 90       	pop	r7
    261a:	6f 90       	pop	r6
    261c:	5f 90       	pop	r5
    261e:	4f 90       	pop	r4
    2620:	3f 90       	pop	r3
    2622:	2f 90       	pop	r2
    2624:	08 95       	ret

00002626 <vTaskStartScheduler>:
    2626:	ef 92       	push	r14
    2628:	ff 92       	push	r15
    262a:	0f 93       	push	r16
    262c:	0f 2e       	mov	r0, r31
    262e:	f6 e9       	ldi	r31, 0x96	; 150
    2630:	ef 2e       	mov	r14, r31
    2632:	f1 e1       	ldi	r31, 0x11	; 17
    2634:	ff 2e       	mov	r15, r31
    2636:	f0 2d       	mov	r31, r0
    2638:	00 e0       	ldi	r16, 0x00	; 0
    263a:	20 e0       	ldi	r18, 0x00	; 0
    263c:	30 e0       	ldi	r19, 0x00	; 0
    263e:	40 ec       	ldi	r20, 0xC0	; 192
    2640:	50 e0       	ldi	r21, 0x00	; 0
    2642:	60 e3       	ldi	r22, 0x30	; 48
    2644:	74 e0       	ldi	r23, 0x04	; 4
    2646:	8d ec       	ldi	r24, 0xCD	; 205
    2648:	90 e0       	ldi	r25, 0x00	; 0
    264a:	a1 df       	rcall	.-190    	; 0x258e <xTaskCreate>
    264c:	81 30       	cpi	r24, 0x01	; 1
    264e:	11 f4       	brne	.+4      	; 0x2654 <vTaskStartScheduler+0x2e>
    2650:	0e 94 c6 1d 	call	0x3b8c	; 0x3b8c <xTimerCreateTimerTask>
    2654:	81 30       	cpi	r24, 0x01	; 1
    2656:	c9 f4       	brne	.+50     	; 0x268a <vTaskStartScheduler+0x64>
    2658:	f8 94       	cli
    265a:	8f ef       	ldi	r24, 0xFF	; 255
    265c:	9f ef       	ldi	r25, 0xFF	; 255
    265e:	dc 01       	movw	r26, r24
    2660:	80 93 98 11 	sts	0x1198, r24	; 0x801198 <xNextTaskUnblockTime>
    2664:	90 93 99 11 	sts	0x1199, r25	; 0x801199 <xNextTaskUnblockTime+0x1>
    2668:	a0 93 9a 11 	sts	0x119A, r26	; 0x80119a <xNextTaskUnblockTime+0x2>
    266c:	b0 93 9b 11 	sts	0x119B, r27	; 0x80119b <xNextTaskUnblockTime+0x3>
    2670:	81 e0       	ldi	r24, 0x01	; 1
    2672:	80 93 a3 11 	sts	0x11A3, r24	; 0x8011a3 <xSchedulerRunning>
    2676:	10 92 a5 11 	sts	0x11A5, r1	; 0x8011a5 <xTickCount>
    267a:	10 92 a6 11 	sts	0x11A6, r1	; 0x8011a6 <xTickCount+0x1>
    267e:	10 92 a7 11 	sts	0x11A7, r1	; 0x8011a7 <xTickCount+0x2>
    2682:	10 92 a8 11 	sts	0x11A8, r1	; 0x8011a8 <xTickCount+0x3>
    2686:	0e 94 ed 08 	call	0x11da	; 0x11da <xPortStartScheduler>
    268a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <uxTopUsedPriority>
    268e:	0f 91       	pop	r16
    2690:	ff 90       	pop	r15
    2692:	ef 90       	pop	r14
    2694:	08 95       	ret

00002696 <vTaskSuspendAll>:
    2696:	80 91 95 11 	lds	r24, 0x1195	; 0x801195 <uxSchedulerSuspended>
    269a:	8f 5f       	subi	r24, 0xFF	; 255
    269c:	80 93 95 11 	sts	0x1195, r24	; 0x801195 <uxSchedulerSuspended>
    26a0:	08 95       	ret

000026a2 <xTaskGetTickCount>:
    26a2:	0f b6       	in	r0, 0x3f	; 63
    26a4:	f8 94       	cli
    26a6:	0f 92       	push	r0
    26a8:	60 91 a5 11 	lds	r22, 0x11A5	; 0x8011a5 <xTickCount>
    26ac:	70 91 a6 11 	lds	r23, 0x11A6	; 0x8011a6 <xTickCount+0x1>
    26b0:	80 91 a7 11 	lds	r24, 0x11A7	; 0x8011a7 <xTickCount+0x2>
    26b4:	90 91 a8 11 	lds	r25, 0x11A8	; 0x8011a8 <xTickCount+0x3>
    26b8:	0f 90       	pop	r0
    26ba:	0f be       	out	0x3f, r0	; 63
    26bc:	08 95       	ret

000026be <xTaskIncrementTick>:
    26be:	cf 92       	push	r12
    26c0:	df 92       	push	r13
    26c2:	ef 92       	push	r14
    26c4:	ff 92       	push	r15
    26c6:	cf 93       	push	r28
    26c8:	df 93       	push	r29
    26ca:	80 91 95 11 	lds	r24, 0x1195	; 0x801195 <uxSchedulerSuspended>
    26ce:	81 11       	cpse	r24, r1
    26d0:	05 c1       	rjmp	.+522    	; 0x28dc <xTaskIncrementTick+0x21e>
    26d2:	c0 90 a5 11 	lds	r12, 0x11A5	; 0x8011a5 <xTickCount>
    26d6:	d0 90 a6 11 	lds	r13, 0x11A6	; 0x8011a6 <xTickCount+0x1>
    26da:	e0 90 a7 11 	lds	r14, 0x11A7	; 0x8011a7 <xTickCount+0x2>
    26de:	f0 90 a8 11 	lds	r15, 0x11A8	; 0x8011a8 <xTickCount+0x3>
    26e2:	8f ef       	ldi	r24, 0xFF	; 255
    26e4:	c8 1a       	sub	r12, r24
    26e6:	d8 0a       	sbc	r13, r24
    26e8:	e8 0a       	sbc	r14, r24
    26ea:	f8 0a       	sbc	r15, r24
    26ec:	c0 92 a5 11 	sts	0x11A5, r12	; 0x8011a5 <xTickCount>
    26f0:	d0 92 a6 11 	sts	0x11A6, r13	; 0x8011a6 <xTickCount+0x1>
    26f4:	e0 92 a7 11 	sts	0x11A7, r14	; 0x8011a7 <xTickCount+0x2>
    26f8:	f0 92 a8 11 	sts	0x11A8, r15	; 0x8011a8 <xTickCount+0x3>
    26fc:	c1 14       	cp	r12, r1
    26fe:	d1 04       	cpc	r13, r1
    2700:	e1 04       	cpc	r14, r1
    2702:	f1 04       	cpc	r15, r1
    2704:	b1 f4       	brne	.+44     	; 0x2732 <xTaskIncrementTick+0x74>
    2706:	80 91 ce 11 	lds	r24, 0x11CE	; 0x8011ce <pxDelayedTaskList>
    270a:	90 91 cf 11 	lds	r25, 0x11CF	; 0x8011cf <pxDelayedTaskList+0x1>
    270e:	20 91 cc 11 	lds	r18, 0x11CC	; 0x8011cc <pxOverflowDelayedTaskList>
    2712:	30 91 cd 11 	lds	r19, 0x11CD	; 0x8011cd <pxOverflowDelayedTaskList+0x1>
    2716:	30 93 cf 11 	sts	0x11CF, r19	; 0x8011cf <pxDelayedTaskList+0x1>
    271a:	20 93 ce 11 	sts	0x11CE, r18	; 0x8011ce <pxDelayedTaskList>
    271e:	90 93 cd 11 	sts	0x11CD, r25	; 0x8011cd <pxOverflowDelayedTaskList+0x1>
    2722:	80 93 cc 11 	sts	0x11CC, r24	; 0x8011cc <pxOverflowDelayedTaskList>
    2726:	80 91 9d 11 	lds	r24, 0x119D	; 0x80119d <xNumOfOverflows>
    272a:	8f 5f       	subi	r24, 0xFF	; 255
    272c:	80 93 9d 11 	sts	0x119D, r24	; 0x80119d <xNumOfOverflows>
    2730:	16 dd       	rcall	.-1492   	; 0x215e <prvResetNextTaskUnblockTime>
    2732:	80 91 98 11 	lds	r24, 0x1198	; 0x801198 <xNextTaskUnblockTime>
    2736:	90 91 99 11 	lds	r25, 0x1199	; 0x801199 <xNextTaskUnblockTime+0x1>
    273a:	a0 91 9a 11 	lds	r26, 0x119A	; 0x80119a <xNextTaskUnblockTime+0x2>
    273e:	b0 91 9b 11 	lds	r27, 0x119B	; 0x80119b <xNextTaskUnblockTime+0x3>
    2742:	c8 16       	cp	r12, r24
    2744:	d9 06       	cpc	r13, r25
    2746:	ea 06       	cpc	r14, r26
    2748:	fb 06       	cpc	r15, r27
    274a:	20 f4       	brcc	.+8      	; 0x2754 <xTaskIncrementTick+0x96>
    274c:	80 e0       	ldi	r24, 0x00	; 0
    274e:	b2 c0       	rjmp	.+356    	; 0x28b4 <xTaskIncrementTick+0x1f6>
    2750:	81 e0       	ldi	r24, 0x01	; 1
    2752:	01 c0       	rjmp	.+2      	; 0x2756 <xTaskIncrementTick+0x98>
    2754:	80 e0       	ldi	r24, 0x00	; 0
    2756:	e0 91 ce 11 	lds	r30, 0x11CE	; 0x8011ce <pxDelayedTaskList>
    275a:	f0 91 cf 11 	lds	r31, 0x11CF	; 0x8011cf <pxDelayedTaskList+0x1>
    275e:	90 81       	ld	r25, Z
    2760:	91 11       	cpse	r25, r1
    2762:	0c c0       	rjmp	.+24     	; 0x277c <xTaskIncrementTick+0xbe>
    2764:	4f ef       	ldi	r20, 0xFF	; 255
    2766:	5f ef       	ldi	r21, 0xFF	; 255
    2768:	ba 01       	movw	r22, r20
    276a:	40 93 98 11 	sts	0x1198, r20	; 0x801198 <xNextTaskUnblockTime>
    276e:	50 93 99 11 	sts	0x1199, r21	; 0x801199 <xNextTaskUnblockTime+0x1>
    2772:	60 93 9a 11 	sts	0x119A, r22	; 0x80119a <xNextTaskUnblockTime+0x2>
    2776:	70 93 9b 11 	sts	0x119B, r23	; 0x80119b <xNextTaskUnblockTime+0x3>
    277a:	9c c0       	rjmp	.+312    	; 0x28b4 <xTaskIncrementTick+0x1f6>
    277c:	e0 91 ce 11 	lds	r30, 0x11CE	; 0x8011ce <pxDelayedTaskList>
    2780:	f0 91 cf 11 	lds	r31, 0x11CF	; 0x8011cf <pxDelayedTaskList+0x1>
    2784:	07 80       	ldd	r0, Z+7	; 0x07
    2786:	f0 85       	ldd	r31, Z+8	; 0x08
    2788:	e0 2d       	mov	r30, r0
    278a:	00 84       	ldd	r0, Z+8	; 0x08
    278c:	f1 85       	ldd	r31, Z+9	; 0x09
    278e:	e0 2d       	mov	r30, r0
    2790:	42 81       	ldd	r20, Z+2	; 0x02
    2792:	53 81       	ldd	r21, Z+3	; 0x03
    2794:	64 81       	ldd	r22, Z+4	; 0x04
    2796:	75 81       	ldd	r23, Z+5	; 0x05
    2798:	c4 16       	cp	r12, r20
    279a:	d5 06       	cpc	r13, r21
    279c:	e6 06       	cpc	r14, r22
    279e:	f7 06       	cpc	r15, r23
    27a0:	48 f4       	brcc	.+18     	; 0x27b4 <xTaskIncrementTick+0xf6>
    27a2:	40 93 98 11 	sts	0x1198, r20	; 0x801198 <xNextTaskUnblockTime>
    27a6:	50 93 99 11 	sts	0x1199, r21	; 0x801199 <xNextTaskUnblockTime+0x1>
    27aa:	60 93 9a 11 	sts	0x119A, r22	; 0x80119a <xNextTaskUnblockTime+0x2>
    27ae:	70 93 9b 11 	sts	0x119B, r23	; 0x80119b <xNextTaskUnblockTime+0x3>
    27b2:	80 c0       	rjmp	.+256    	; 0x28b4 <xTaskIncrementTick+0x1f6>
    27b4:	a4 85       	ldd	r26, Z+12	; 0x0c
    27b6:	b5 85       	ldd	r27, Z+13	; 0x0d
    27b8:	c6 81       	ldd	r28, Z+6	; 0x06
    27ba:	d7 81       	ldd	r29, Z+7	; 0x07
    27bc:	20 85       	ldd	r18, Z+8	; 0x08
    27be:	31 85       	ldd	r19, Z+9	; 0x09
    27c0:	3f 83       	std	Y+7, r19	; 0x07
    27c2:	2e 83       	std	Y+6, r18	; 0x06
    27c4:	c0 85       	ldd	r28, Z+8	; 0x08
    27c6:	d1 85       	ldd	r29, Z+9	; 0x09
    27c8:	26 81       	ldd	r18, Z+6	; 0x06
    27ca:	37 81       	ldd	r19, Z+7	; 0x07
    27cc:	3d 83       	std	Y+5, r19	; 0x05
    27ce:	2c 83       	std	Y+4, r18	; 0x04
    27d0:	11 96       	adiw	r26, 0x01	; 1
    27d2:	4d 91       	ld	r20, X+
    27d4:	5c 91       	ld	r21, X
    27d6:	12 97       	sbiw	r26, 0x02	; 2
    27d8:	9f 01       	movw	r18, r30
    27da:	2e 5f       	subi	r18, 0xFE	; 254
    27dc:	3f 4f       	sbci	r19, 0xFF	; 255
    27de:	42 17       	cp	r20, r18
    27e0:	53 07       	cpc	r21, r19
    27e2:	31 f4       	brne	.+12     	; 0x27f0 <xTaskIncrementTick+0x132>
    27e4:	40 85       	ldd	r20, Z+8	; 0x08
    27e6:	51 85       	ldd	r21, Z+9	; 0x09
    27e8:	12 96       	adiw	r26, 0x02	; 2
    27ea:	5c 93       	st	X, r21
    27ec:	4e 93       	st	-X, r20
    27ee:	11 97       	sbiw	r26, 0x01	; 1
    27f0:	15 86       	std	Z+13, r1	; 0x0d
    27f2:	14 86       	std	Z+12, r1	; 0x0c
    27f4:	9c 91       	ld	r25, X
    27f6:	91 50       	subi	r25, 0x01	; 1
    27f8:	9c 93       	st	X, r25
    27fa:	a0 8d       	ldd	r26, Z+24	; 0x18
    27fc:	b1 8d       	ldd	r27, Z+25	; 0x19
    27fe:	10 97       	sbiw	r26, 0x00	; 0
    2800:	09 f1       	breq	.+66     	; 0x2844 <xTaskIncrementTick+0x186>
    2802:	c2 89       	ldd	r28, Z+18	; 0x12
    2804:	d3 89       	ldd	r29, Z+19	; 0x13
    2806:	44 89       	ldd	r20, Z+20	; 0x14
    2808:	55 89       	ldd	r21, Z+21	; 0x15
    280a:	5f 83       	std	Y+7, r21	; 0x07
    280c:	4e 83       	std	Y+6, r20	; 0x06
    280e:	c4 89       	ldd	r28, Z+20	; 0x14
    2810:	d5 89       	ldd	r29, Z+21	; 0x15
    2812:	42 89       	ldd	r20, Z+18	; 0x12
    2814:	53 89       	ldd	r21, Z+19	; 0x13
    2816:	5d 83       	std	Y+5, r21	; 0x05
    2818:	4c 83       	std	Y+4, r20	; 0x04
    281a:	11 96       	adiw	r26, 0x01	; 1
    281c:	6d 91       	ld	r22, X+
    281e:	7c 91       	ld	r23, X
    2820:	12 97       	sbiw	r26, 0x02	; 2
    2822:	af 01       	movw	r20, r30
    2824:	42 5f       	subi	r20, 0xF2	; 242
    2826:	5f 4f       	sbci	r21, 0xFF	; 255
    2828:	64 17       	cp	r22, r20
    282a:	75 07       	cpc	r23, r21
    282c:	31 f4       	brne	.+12     	; 0x283a <xTaskIncrementTick+0x17c>
    282e:	44 89       	ldd	r20, Z+20	; 0x14
    2830:	55 89       	ldd	r21, Z+21	; 0x15
    2832:	12 96       	adiw	r26, 0x02	; 2
    2834:	5c 93       	st	X, r21
    2836:	4e 93       	st	-X, r20
    2838:	11 97       	sbiw	r26, 0x01	; 1
    283a:	11 8e       	std	Z+25, r1	; 0x19
    283c:	10 8e       	std	Z+24, r1	; 0x18
    283e:	9c 91       	ld	r25, X
    2840:	91 50       	subi	r25, 0x01	; 1
    2842:	9c 93       	st	X, r25
    2844:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2846:	90 91 a4 11 	lds	r25, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    284a:	9a 17       	cp	r25, r26
    284c:	10 f4       	brcc	.+4      	; 0x2852 <xTaskIncrementTick+0x194>
    284e:	a0 93 a4 11 	sts	0x11A4, r26	; 0x8011a4 <uxTopReadyPriority>
    2852:	9b e0       	ldi	r25, 0x0B	; 11
    2854:	9a 9f       	mul	r25, r26
    2856:	d0 01       	movw	r26, r0
    2858:	11 24       	eor	r1, r1
    285a:	aa 51       	subi	r26, 0x1A	; 26
    285c:	be 4e       	sbci	r27, 0xEE	; 238
    285e:	11 96       	adiw	r26, 0x01	; 1
    2860:	0d 90       	ld	r0, X+
    2862:	bc 91       	ld	r27, X
    2864:	a0 2d       	mov	r26, r0
    2866:	b7 83       	std	Z+7, r27	; 0x07
    2868:	a6 83       	std	Z+6, r26	; 0x06
    286a:	16 96       	adiw	r26, 0x06	; 6
    286c:	4d 91       	ld	r20, X+
    286e:	5c 91       	ld	r21, X
    2870:	17 97       	sbiw	r26, 0x07	; 7
    2872:	51 87       	std	Z+9, r21	; 0x09
    2874:	40 87       	std	Z+8, r20	; 0x08
    2876:	16 96       	adiw	r26, 0x06	; 6
    2878:	cd 91       	ld	r28, X+
    287a:	dc 91       	ld	r29, X
    287c:	17 97       	sbiw	r26, 0x07	; 7
    287e:	3d 83       	std	Y+5, r19	; 0x05
    2880:	2c 83       	std	Y+4, r18	; 0x04
    2882:	17 96       	adiw	r26, 0x07	; 7
    2884:	3c 93       	st	X, r19
    2886:	2e 93       	st	-X, r18
    2888:	16 97       	sbiw	r26, 0x06	; 6
    288a:	a2 8d       	ldd	r26, Z+26	; 0x1a
    288c:	9a 9f       	mul	r25, r26
    288e:	d0 01       	movw	r26, r0
    2890:	11 24       	eor	r1, r1
    2892:	aa 51       	subi	r26, 0x1A	; 26
    2894:	be 4e       	sbci	r27, 0xEE	; 238
    2896:	b5 87       	std	Z+13, r27	; 0x0d
    2898:	a4 87       	std	Z+12, r26	; 0x0c
    289a:	9c 91       	ld	r25, X
    289c:	9f 5f       	subi	r25, 0xFF	; 255
    289e:	9c 93       	st	X, r25
    28a0:	22 8d       	ldd	r18, Z+26	; 0x1a
    28a2:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    28a6:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    28aa:	92 8d       	ldd	r25, Z+26	; 0x1a
    28ac:	29 17       	cp	r18, r25
    28ae:	08 f0       	brcs	.+2      	; 0x28b2 <xTaskIncrementTick+0x1f4>
    28b0:	4f cf       	rjmp	.-354    	; 0x2750 <xTaskIncrementTick+0x92>
    28b2:	51 cf       	rjmp	.-350    	; 0x2756 <xTaskIncrementTick+0x98>
    28b4:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    28b8:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    28bc:	e2 8d       	ldd	r30, Z+26	; 0x1a
    28be:	9b e0       	ldi	r25, 0x0B	; 11
    28c0:	e9 9f       	mul	r30, r25
    28c2:	f0 01       	movw	r30, r0
    28c4:	11 24       	eor	r1, r1
    28c6:	ea 51       	subi	r30, 0x1A	; 26
    28c8:	fe 4e       	sbci	r31, 0xEE	; 238
    28ca:	90 81       	ld	r25, Z
    28cc:	92 30       	cpi	r25, 0x02	; 2
    28ce:	08 f0       	brcs	.+2      	; 0x28d2 <xTaskIncrementTick+0x214>
    28d0:	81 e0       	ldi	r24, 0x01	; 1
    28d2:	90 91 9e 11 	lds	r25, 0x119E	; 0x80119e <xYieldPending>
    28d6:	91 11       	cpse	r25, r1
    28d8:	16 c0       	rjmp	.+44     	; 0x2906 <xTaskIncrementTick+0x248>
    28da:	16 c0       	rjmp	.+44     	; 0x2908 <xTaskIncrementTick+0x24a>
    28dc:	80 91 9f 11 	lds	r24, 0x119F	; 0x80119f <xPendedTicks>
    28e0:	90 91 a0 11 	lds	r25, 0x11A0	; 0x8011a0 <xPendedTicks+0x1>
    28e4:	a0 91 a1 11 	lds	r26, 0x11A1	; 0x8011a1 <xPendedTicks+0x2>
    28e8:	b0 91 a2 11 	lds	r27, 0x11A2	; 0x8011a2 <xPendedTicks+0x3>
    28ec:	01 96       	adiw	r24, 0x01	; 1
    28ee:	a1 1d       	adc	r26, r1
    28f0:	b1 1d       	adc	r27, r1
    28f2:	80 93 9f 11 	sts	0x119F, r24	; 0x80119f <xPendedTicks>
    28f6:	90 93 a0 11 	sts	0x11A0, r25	; 0x8011a0 <xPendedTicks+0x1>
    28fa:	a0 93 a1 11 	sts	0x11A1, r26	; 0x8011a1 <xPendedTicks+0x2>
    28fe:	b0 93 a2 11 	sts	0x11A2, r27	; 0x8011a2 <xPendedTicks+0x3>
    2902:	80 e0       	ldi	r24, 0x00	; 0
    2904:	01 c0       	rjmp	.+2      	; 0x2908 <xTaskIncrementTick+0x24a>
    2906:	81 e0       	ldi	r24, 0x01	; 1
    2908:	df 91       	pop	r29
    290a:	cf 91       	pop	r28
    290c:	ff 90       	pop	r15
    290e:	ef 90       	pop	r14
    2910:	df 90       	pop	r13
    2912:	cf 90       	pop	r12
    2914:	08 95       	ret

00002916 <xTaskResumeAll>:
    2916:	cf 92       	push	r12
    2918:	df 92       	push	r13
    291a:	ef 92       	push	r14
    291c:	ff 92       	push	r15
    291e:	cf 93       	push	r28
    2920:	df 93       	push	r29
    2922:	0f b6       	in	r0, 0x3f	; 63
    2924:	f8 94       	cli
    2926:	0f 92       	push	r0
    2928:	80 91 95 11 	lds	r24, 0x1195	; 0x801195 <uxSchedulerSuspended>
    292c:	81 50       	subi	r24, 0x01	; 1
    292e:	80 93 95 11 	sts	0x1195, r24	; 0x801195 <uxSchedulerSuspended>
    2932:	80 91 95 11 	lds	r24, 0x1195	; 0x801195 <uxSchedulerSuspended>
    2936:	81 11       	cpse	r24, r1
    2938:	be c0       	rjmp	.+380    	; 0x2ab6 <xTaskResumeAll+0x1a0>
    293a:	80 91 a9 11 	lds	r24, 0x11A9	; 0x8011a9 <uxCurrentNumberOfTasks>
    293e:	81 11       	cpse	r24, r1
    2940:	88 c0       	rjmp	.+272    	; 0x2a52 <xTaskResumeAll+0x13c>
    2942:	bc c0       	rjmp	.+376    	; 0x2abc <xTaskResumeAll+0x1a6>
    2944:	e0 91 c8 11 	lds	r30, 0x11C8	; 0x8011c8 <xPendingReadyList+0x7>
    2948:	f0 91 c9 11 	lds	r31, 0x11C9	; 0x8011c9 <xPendingReadyList+0x8>
    294c:	00 84       	ldd	r0, Z+8	; 0x08
    294e:	f1 85       	ldd	r31, Z+9	; 0x09
    2950:	e0 2d       	mov	r30, r0
    2952:	a0 8d       	ldd	r26, Z+24	; 0x18
    2954:	b1 8d       	ldd	r27, Z+25	; 0x19
    2956:	c2 89       	ldd	r28, Z+18	; 0x12
    2958:	d3 89       	ldd	r29, Z+19	; 0x13
    295a:	84 89       	ldd	r24, Z+20	; 0x14
    295c:	95 89       	ldd	r25, Z+21	; 0x15
    295e:	9f 83       	std	Y+7, r25	; 0x07
    2960:	8e 83       	std	Y+6, r24	; 0x06
    2962:	c4 89       	ldd	r28, Z+20	; 0x14
    2964:	d5 89       	ldd	r29, Z+21	; 0x15
    2966:	82 89       	ldd	r24, Z+18	; 0x12
    2968:	93 89       	ldd	r25, Z+19	; 0x13
    296a:	9d 83       	std	Y+5, r25	; 0x05
    296c:	8c 83       	std	Y+4, r24	; 0x04
    296e:	11 96       	adiw	r26, 0x01	; 1
    2970:	2d 91       	ld	r18, X+
    2972:	3c 91       	ld	r19, X
    2974:	12 97       	sbiw	r26, 0x02	; 2
    2976:	cf 01       	movw	r24, r30
    2978:	0e 96       	adiw	r24, 0x0e	; 14
    297a:	28 17       	cp	r18, r24
    297c:	39 07       	cpc	r19, r25
    297e:	31 f4       	brne	.+12     	; 0x298c <xTaskResumeAll+0x76>
    2980:	84 89       	ldd	r24, Z+20	; 0x14
    2982:	95 89       	ldd	r25, Z+21	; 0x15
    2984:	12 96       	adiw	r26, 0x02	; 2
    2986:	9c 93       	st	X, r25
    2988:	8e 93       	st	-X, r24
    298a:	11 97       	sbiw	r26, 0x01	; 1
    298c:	11 8e       	std	Z+25, r1	; 0x19
    298e:	10 8e       	std	Z+24, r1	; 0x18
    2990:	8c 91       	ld	r24, X
    2992:	81 50       	subi	r24, 0x01	; 1
    2994:	8c 93       	st	X, r24
    2996:	a4 85       	ldd	r26, Z+12	; 0x0c
    2998:	b5 85       	ldd	r27, Z+13	; 0x0d
    299a:	c6 81       	ldd	r28, Z+6	; 0x06
    299c:	d7 81       	ldd	r29, Z+7	; 0x07
    299e:	80 85       	ldd	r24, Z+8	; 0x08
    29a0:	91 85       	ldd	r25, Z+9	; 0x09
    29a2:	9f 83       	std	Y+7, r25	; 0x07
    29a4:	8e 83       	std	Y+6, r24	; 0x06
    29a6:	c0 85       	ldd	r28, Z+8	; 0x08
    29a8:	d1 85       	ldd	r29, Z+9	; 0x09
    29aa:	86 81       	ldd	r24, Z+6	; 0x06
    29ac:	97 81       	ldd	r25, Z+7	; 0x07
    29ae:	9d 83       	std	Y+5, r25	; 0x05
    29b0:	8c 83       	std	Y+4, r24	; 0x04
    29b2:	11 96       	adiw	r26, 0x01	; 1
    29b4:	8d 91       	ld	r24, X+
    29b6:	9c 91       	ld	r25, X
    29b8:	12 97       	sbiw	r26, 0x02	; 2
    29ba:	9f 01       	movw	r18, r30
    29bc:	2e 5f       	subi	r18, 0xFE	; 254
    29be:	3f 4f       	sbci	r19, 0xFF	; 255
    29c0:	82 17       	cp	r24, r18
    29c2:	93 07       	cpc	r25, r19
    29c4:	31 f4       	brne	.+12     	; 0x29d2 <xTaskResumeAll+0xbc>
    29c6:	80 85       	ldd	r24, Z+8	; 0x08
    29c8:	91 85       	ldd	r25, Z+9	; 0x09
    29ca:	12 96       	adiw	r26, 0x02	; 2
    29cc:	9c 93       	st	X, r25
    29ce:	8e 93       	st	-X, r24
    29d0:	11 97       	sbiw	r26, 0x01	; 1
    29d2:	15 86       	std	Z+13, r1	; 0x0d
    29d4:	14 86       	std	Z+12, r1	; 0x0c
    29d6:	8c 91       	ld	r24, X
    29d8:	81 50       	subi	r24, 0x01	; 1
    29da:	8c 93       	st	X, r24
    29dc:	a2 8d       	ldd	r26, Z+26	; 0x1a
    29de:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    29e2:	8a 17       	cp	r24, r26
    29e4:	10 f4       	brcc	.+4      	; 0x29ea <xTaskResumeAll+0xd4>
    29e6:	a0 93 a4 11 	sts	0x11A4, r26	; 0x8011a4 <uxTopReadyPriority>
    29ea:	8b e0       	ldi	r24, 0x0B	; 11
    29ec:	8a 9f       	mul	r24, r26
    29ee:	d0 01       	movw	r26, r0
    29f0:	11 24       	eor	r1, r1
    29f2:	aa 51       	subi	r26, 0x1A	; 26
    29f4:	be 4e       	sbci	r27, 0xEE	; 238
    29f6:	11 96       	adiw	r26, 0x01	; 1
    29f8:	0d 90       	ld	r0, X+
    29fa:	bc 91       	ld	r27, X
    29fc:	a0 2d       	mov	r26, r0
    29fe:	b7 83       	std	Z+7, r27	; 0x07
    2a00:	a6 83       	std	Z+6, r26	; 0x06
    2a02:	16 96       	adiw	r26, 0x06	; 6
    2a04:	4d 91       	ld	r20, X+
    2a06:	5c 91       	ld	r21, X
    2a08:	17 97       	sbiw	r26, 0x07	; 7
    2a0a:	51 87       	std	Z+9, r21	; 0x09
    2a0c:	40 87       	std	Z+8, r20	; 0x08
    2a0e:	16 96       	adiw	r26, 0x06	; 6
    2a10:	cd 91       	ld	r28, X+
    2a12:	dc 91       	ld	r29, X
    2a14:	17 97       	sbiw	r26, 0x07	; 7
    2a16:	3d 83       	std	Y+5, r19	; 0x05
    2a18:	2c 83       	std	Y+4, r18	; 0x04
    2a1a:	17 96       	adiw	r26, 0x07	; 7
    2a1c:	3c 93       	st	X, r19
    2a1e:	2e 93       	st	-X, r18
    2a20:	16 97       	sbiw	r26, 0x06	; 6
    2a22:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2a24:	8a 9f       	mul	r24, r26
    2a26:	d0 01       	movw	r26, r0
    2a28:	11 24       	eor	r1, r1
    2a2a:	aa 51       	subi	r26, 0x1A	; 26
    2a2c:	be 4e       	sbci	r27, 0xEE	; 238
    2a2e:	b5 87       	std	Z+13, r27	; 0x0d
    2a30:	a4 87       	std	Z+12, r26	; 0x0c
    2a32:	8c 91       	ld	r24, X
    2a34:	8f 5f       	subi	r24, 0xFF	; 255
    2a36:	8c 93       	st	X, r24
    2a38:	92 8d       	ldd	r25, Z+26	; 0x1a
    2a3a:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    2a3e:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2a42:	5a 96       	adiw	r26, 0x1a	; 26
    2a44:	8c 91       	ld	r24, X
    2a46:	98 17       	cp	r25, r24
    2a48:	30 f0       	brcs	.+12     	; 0x2a56 <xTaskResumeAll+0x140>
    2a4a:	81 e0       	ldi	r24, 0x01	; 1
    2a4c:	80 93 9e 11 	sts	0x119E, r24	; 0x80119e <xYieldPending>
    2a50:	02 c0       	rjmp	.+4      	; 0x2a56 <xTaskResumeAll+0x140>
    2a52:	e0 e0       	ldi	r30, 0x00	; 0
    2a54:	f0 e0       	ldi	r31, 0x00	; 0
    2a56:	80 91 c1 11 	lds	r24, 0x11C1	; 0x8011c1 <xPendingReadyList>
    2a5a:	81 11       	cpse	r24, r1
    2a5c:	73 cf       	rjmp	.-282    	; 0x2944 <xTaskResumeAll+0x2e>
    2a5e:	ef 2b       	or	r30, r31
    2a60:	09 f0       	breq	.+2      	; 0x2a64 <xTaskResumeAll+0x14e>
    2a62:	7d db       	rcall	.-2310   	; 0x215e <prvResetNextTaskUnblockTime>
    2a64:	c0 90 9f 11 	lds	r12, 0x119F	; 0x80119f <xPendedTicks>
    2a68:	d0 90 a0 11 	lds	r13, 0x11A0	; 0x8011a0 <xPendedTicks+0x1>
    2a6c:	e0 90 a1 11 	lds	r14, 0x11A1	; 0x8011a1 <xPendedTicks+0x2>
    2a70:	f0 90 a2 11 	lds	r15, 0x11A2	; 0x8011a2 <xPendedTicks+0x3>
    2a74:	c1 14       	cp	r12, r1
    2a76:	d1 04       	cpc	r13, r1
    2a78:	e1 04       	cpc	r14, r1
    2a7a:	f1 04       	cpc	r15, r1
    2a7c:	a1 f0       	breq	.+40     	; 0x2aa6 <xTaskResumeAll+0x190>
    2a7e:	1f de       	rcall	.-962    	; 0x26be <xTaskIncrementTick>
    2a80:	88 23       	and	r24, r24
    2a82:	19 f0       	breq	.+6      	; 0x2a8a <xTaskResumeAll+0x174>
    2a84:	81 e0       	ldi	r24, 0x01	; 1
    2a86:	80 93 9e 11 	sts	0x119E, r24	; 0x80119e <xYieldPending>
    2a8a:	81 e0       	ldi	r24, 0x01	; 1
    2a8c:	c8 1a       	sub	r12, r24
    2a8e:	d1 08       	sbc	r13, r1
    2a90:	e1 08       	sbc	r14, r1
    2a92:	f1 08       	sbc	r15, r1
    2a94:	a1 f7       	brne	.-24     	; 0x2a7e <xTaskResumeAll+0x168>
    2a96:	10 92 9f 11 	sts	0x119F, r1	; 0x80119f <xPendedTicks>
    2a9a:	10 92 a0 11 	sts	0x11A0, r1	; 0x8011a0 <xPendedTicks+0x1>
    2a9e:	10 92 a1 11 	sts	0x11A1, r1	; 0x8011a1 <xPendedTicks+0x2>
    2aa2:	10 92 a2 11 	sts	0x11A2, r1	; 0x8011a2 <xPendedTicks+0x3>
    2aa6:	80 91 9e 11 	lds	r24, 0x119E	; 0x80119e <xYieldPending>
    2aaa:	88 23       	and	r24, r24
    2aac:	31 f0       	breq	.+12     	; 0x2aba <xTaskResumeAll+0x1a4>
    2aae:	0e 94 1f 09 	call	0x123e	; 0x123e <vPortYield>
    2ab2:	81 e0       	ldi	r24, 0x01	; 1
    2ab4:	03 c0       	rjmp	.+6      	; 0x2abc <xTaskResumeAll+0x1a6>
    2ab6:	80 e0       	ldi	r24, 0x00	; 0
    2ab8:	01 c0       	rjmp	.+2      	; 0x2abc <xTaskResumeAll+0x1a6>
    2aba:	80 e0       	ldi	r24, 0x00	; 0
    2abc:	0f 90       	pop	r0
    2abe:	0f be       	out	0x3f, r0	; 63
    2ac0:	df 91       	pop	r29
    2ac2:	cf 91       	pop	r28
    2ac4:	ff 90       	pop	r15
    2ac6:	ef 90       	pop	r14
    2ac8:	df 90       	pop	r13
    2aca:	cf 90       	pop	r12
    2acc:	08 95       	ret

00002ace <xTaskDelayUntil>:
    2ace:	8f 92       	push	r8
    2ad0:	9f 92       	push	r9
    2ad2:	af 92       	push	r10
    2ad4:	bf 92       	push	r11
    2ad6:	cf 92       	push	r12
    2ad8:	df 92       	push	r13
    2ada:	ef 92       	push	r14
    2adc:	ff 92       	push	r15
    2ade:	1f 93       	push	r17
    2ae0:	cf 93       	push	r28
    2ae2:	df 93       	push	r29
    2ae4:	ec 01       	movw	r28, r24
    2ae6:	6a 01       	movw	r12, r20
    2ae8:	7b 01       	movw	r14, r22
    2aea:	d5 dd       	rcall	.-1110   	; 0x2696 <vTaskSuspendAll>
    2aec:	80 90 a5 11 	lds	r8, 0x11A5	; 0x8011a5 <xTickCount>
    2af0:	90 90 a6 11 	lds	r9, 0x11A6	; 0x8011a6 <xTickCount+0x1>
    2af4:	a0 90 a7 11 	lds	r10, 0x11A7	; 0x8011a7 <xTickCount+0x2>
    2af8:	b0 90 a8 11 	lds	r11, 0x11A8	; 0x8011a8 <xTickCount+0x3>
    2afc:	88 81       	ld	r24, Y
    2afe:	99 81       	ldd	r25, Y+1	; 0x01
    2b00:	aa 81       	ldd	r26, Y+2	; 0x02
    2b02:	bb 81       	ldd	r27, Y+3	; 0x03
    2b04:	ac 01       	movw	r20, r24
    2b06:	bd 01       	movw	r22, r26
    2b08:	4c 0d       	add	r20, r12
    2b0a:	5d 1d       	adc	r21, r13
    2b0c:	6e 1d       	adc	r22, r14
    2b0e:	7f 1d       	adc	r23, r15
    2b10:	88 16       	cp	r8, r24
    2b12:	99 06       	cpc	r9, r25
    2b14:	aa 06       	cpc	r10, r26
    2b16:	bb 06       	cpc	r11, r27
    2b18:	60 f4       	brcc	.+24     	; 0x2b32 <xTaskDelayUntil+0x64>
    2b1a:	48 17       	cp	r20, r24
    2b1c:	59 07       	cpc	r21, r25
    2b1e:	6a 07       	cpc	r22, r26
    2b20:	7b 07       	cpc	r23, r27
    2b22:	98 f4       	brcc	.+38     	; 0x2b4a <xTaskDelayUntil+0x7c>
    2b24:	84 16       	cp	r8, r20
    2b26:	95 06       	cpc	r9, r21
    2b28:	a6 06       	cpc	r10, r22
    2b2a:	b7 06       	cpc	r11, r23
    2b2c:	80 f0       	brcs	.+32     	; 0x2b4e <xTaskDelayUntil+0x80>
    2b2e:	10 e0       	ldi	r17, 0x00	; 0
    2b30:	13 c0       	rjmp	.+38     	; 0x2b58 <xTaskDelayUntil+0x8a>
    2b32:	48 17       	cp	r20, r24
    2b34:	59 07       	cpc	r21, r25
    2b36:	6a 07       	cpc	r22, r26
    2b38:	7b 07       	cpc	r23, r27
    2b3a:	58 f0       	brcs	.+22     	; 0x2b52 <xTaskDelayUntil+0x84>
    2b3c:	84 16       	cp	r8, r20
    2b3e:	95 06       	cpc	r9, r21
    2b40:	a6 06       	cpc	r10, r22
    2b42:	b7 06       	cpc	r11, r23
    2b44:	40 f0       	brcs	.+16     	; 0x2b56 <xTaskDelayUntil+0x88>
    2b46:	10 e0       	ldi	r17, 0x00	; 0
    2b48:	07 c0       	rjmp	.+14     	; 0x2b58 <xTaskDelayUntil+0x8a>
    2b4a:	10 e0       	ldi	r17, 0x00	; 0
    2b4c:	05 c0       	rjmp	.+10     	; 0x2b58 <xTaskDelayUntil+0x8a>
    2b4e:	11 e0       	ldi	r17, 0x01	; 1
    2b50:	03 c0       	rjmp	.+6      	; 0x2b58 <xTaskDelayUntil+0x8a>
    2b52:	11 e0       	ldi	r17, 0x01	; 1
    2b54:	01 c0       	rjmp	.+2      	; 0x2b58 <xTaskDelayUntil+0x8a>
    2b56:	11 e0       	ldi	r17, 0x01	; 1
    2b58:	48 83       	st	Y, r20
    2b5a:	59 83       	std	Y+1, r21	; 0x01
    2b5c:	6a 83       	std	Y+2, r22	; 0x02
    2b5e:	7b 83       	std	Y+3, r23	; 0x03
    2b60:	11 23       	and	r17, r17
    2b62:	41 f0       	breq	.+16     	; 0x2b74 <xTaskDelayUntil+0xa6>
    2b64:	cb 01       	movw	r24, r22
    2b66:	ba 01       	movw	r22, r20
    2b68:	68 19       	sub	r22, r8
    2b6a:	79 09       	sbc	r23, r9
    2b6c:	8a 09       	sbc	r24, r10
    2b6e:	9b 09       	sbc	r25, r11
    2b70:	40 e0       	ldi	r20, 0x00	; 0
    2b72:	6b dc       	rcall	.-1834   	; 0x244a <prvAddCurrentTaskToDelayedList>
    2b74:	d0 de       	rcall	.-608    	; 0x2916 <xTaskResumeAll>
    2b76:	81 11       	cpse	r24, r1
    2b78:	02 c0       	rjmp	.+4      	; 0x2b7e <xTaskDelayUntil+0xb0>
    2b7a:	0e 94 1f 09 	call	0x123e	; 0x123e <vPortYield>
    2b7e:	81 2f       	mov	r24, r17
    2b80:	df 91       	pop	r29
    2b82:	cf 91       	pop	r28
    2b84:	1f 91       	pop	r17
    2b86:	ff 90       	pop	r15
    2b88:	ef 90       	pop	r14
    2b8a:	df 90       	pop	r13
    2b8c:	cf 90       	pop	r12
    2b8e:	bf 90       	pop	r11
    2b90:	af 90       	pop	r10
    2b92:	9f 90       	pop	r9
    2b94:	8f 90       	pop	r8
    2b96:	08 95       	ret

00002b98 <vTaskDelay>:
    2b98:	cf 92       	push	r12
    2b9a:	df 92       	push	r13
    2b9c:	ef 92       	push	r14
    2b9e:	ff 92       	push	r15
    2ba0:	6b 01       	movw	r12, r22
    2ba2:	7c 01       	movw	r14, r24
    2ba4:	67 2b       	or	r22, r23
    2ba6:	68 2b       	or	r22, r24
    2ba8:	69 2b       	or	r22, r25
    2baa:	39 f0       	breq	.+14     	; 0x2bba <vTaskDelay+0x22>
    2bac:	74 dd       	rcall	.-1304   	; 0x2696 <vTaskSuspendAll>
    2bae:	40 e0       	ldi	r20, 0x00	; 0
    2bb0:	c7 01       	movw	r24, r14
    2bb2:	b6 01       	movw	r22, r12
    2bb4:	4a dc       	rcall	.-1900   	; 0x244a <prvAddCurrentTaskToDelayedList>
    2bb6:	af de       	rcall	.-674    	; 0x2916 <xTaskResumeAll>
    2bb8:	01 c0       	rjmp	.+2      	; 0x2bbc <vTaskDelay+0x24>
    2bba:	80 e0       	ldi	r24, 0x00	; 0
    2bbc:	81 11       	cpse	r24, r1
    2bbe:	02 c0       	rjmp	.+4      	; 0x2bc4 <vTaskDelay+0x2c>
    2bc0:	0e 94 1f 09 	call	0x123e	; 0x123e <vPortYield>
    2bc4:	ff 90       	pop	r15
    2bc6:	ef 90       	pop	r14
    2bc8:	df 90       	pop	r13
    2bca:	cf 90       	pop	r12
    2bcc:	08 95       	ret

00002bce <vTaskSwitchContext>:
    2bce:	80 91 95 11 	lds	r24, 0x1195	; 0x801195 <uxSchedulerSuspended>
    2bd2:	88 23       	and	r24, r24
    2bd4:	21 f0       	breq	.+8      	; 0x2bde <vTaskSwitchContext+0x10>
    2bd6:	81 e0       	ldi	r24, 0x01	; 1
    2bd8:	80 93 9e 11 	sts	0x119E, r24	; 0x80119e <xYieldPending>
    2bdc:	08 95       	ret
    2bde:	10 92 9e 11 	sts	0x119E, r1	; 0x80119e <xYieldPending>
    2be2:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    2be6:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2bea:	20 81       	ld	r18, Z
    2bec:	31 81       	ldd	r19, Z+1	; 0x01
    2bee:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    2bf2:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2bf6:	83 8d       	ldd	r24, Z+27	; 0x1b
    2bf8:	94 8d       	ldd	r25, Z+28	; 0x1c
    2bfa:	82 17       	cp	r24, r18
    2bfc:	93 07       	cpc	r25, r19
    2bfe:	60 f0       	brcs	.+24     	; 0x2c18 <vTaskSwitchContext+0x4a>
    2c00:	60 91 54 12 	lds	r22, 0x1254	; 0x801254 <pxCurrentTCB>
    2c04:	70 91 55 12 	lds	r23, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2c08:	63 5e       	subi	r22, 0xE3	; 227
    2c0a:	7f 4f       	sbci	r23, 0xFF	; 255
    2c0c:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    2c10:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2c14:	0e 94 54 20 	call	0x40a8	; 0x40a8 <vApplicationStackOverflowHook>
    2c18:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    2c1c:	01 c0       	rjmp	.+2      	; 0x2c20 <vTaskSwitchContext+0x52>
    2c1e:	81 50       	subi	r24, 0x01	; 1
    2c20:	28 2f       	mov	r18, r24
    2c22:	30 e0       	ldi	r19, 0x00	; 0
    2c24:	9b e0       	ldi	r25, 0x0B	; 11
    2c26:	92 9f       	mul	r25, r18
    2c28:	f0 01       	movw	r30, r0
    2c2a:	93 9f       	mul	r25, r19
    2c2c:	f0 0d       	add	r31, r0
    2c2e:	11 24       	eor	r1, r1
    2c30:	ea 51       	subi	r30, 0x1A	; 26
    2c32:	fe 4e       	sbci	r31, 0xEE	; 238
    2c34:	90 81       	ld	r25, Z
    2c36:	99 23       	and	r25, r25
    2c38:	91 f3       	breq	.-28     	; 0x2c1e <vTaskSwitchContext+0x50>
    2c3a:	9b e0       	ldi	r25, 0x0B	; 11
    2c3c:	92 9f       	mul	r25, r18
    2c3e:	a0 01       	movw	r20, r0
    2c40:	93 9f       	mul	r25, r19
    2c42:	50 0d       	add	r21, r0
    2c44:	11 24       	eor	r1, r1
    2c46:	df 01       	movw	r26, r30
    2c48:	01 80       	ldd	r0, Z+1	; 0x01
    2c4a:	f2 81       	ldd	r31, Z+2	; 0x02
    2c4c:	e0 2d       	mov	r30, r0
    2c4e:	04 80       	ldd	r0, Z+4	; 0x04
    2c50:	f5 81       	ldd	r31, Z+5	; 0x05
    2c52:	e0 2d       	mov	r30, r0
    2c54:	12 96       	adiw	r26, 0x02	; 2
    2c56:	fc 93       	st	X, r31
    2c58:	ee 93       	st	-X, r30
    2c5a:	11 97       	sbiw	r26, 0x01	; 1
    2c5c:	47 51       	subi	r20, 0x17	; 23
    2c5e:	5e 4e       	sbci	r21, 0xEE	; 238
    2c60:	e4 17       	cp	r30, r20
    2c62:	f5 07       	cpc	r31, r21
    2c64:	29 f4       	brne	.+10     	; 0x2c70 <vTaskSwitchContext+0xa2>
    2c66:	44 81       	ldd	r20, Z+4	; 0x04
    2c68:	55 81       	ldd	r21, Z+5	; 0x05
    2c6a:	fd 01       	movw	r30, r26
    2c6c:	52 83       	std	Z+2, r21	; 0x02
    2c6e:	41 83       	std	Z+1, r20	; 0x01
    2c70:	9b e0       	ldi	r25, 0x0B	; 11
    2c72:	92 9f       	mul	r25, r18
    2c74:	f0 01       	movw	r30, r0
    2c76:	93 9f       	mul	r25, r19
    2c78:	f0 0d       	add	r31, r0
    2c7a:	11 24       	eor	r1, r1
    2c7c:	ea 51       	subi	r30, 0x1A	; 26
    2c7e:	fe 4e       	sbci	r31, 0xEE	; 238
    2c80:	01 80       	ldd	r0, Z+1	; 0x01
    2c82:	f2 81       	ldd	r31, Z+2	; 0x02
    2c84:	e0 2d       	mov	r30, r0
    2c86:	20 85       	ldd	r18, Z+8	; 0x08
    2c88:	31 85       	ldd	r19, Z+9	; 0x09
    2c8a:	30 93 55 12 	sts	0x1255, r19	; 0x801255 <pxCurrentTCB+0x1>
    2c8e:	20 93 54 12 	sts	0x1254, r18	; 0x801254 <pxCurrentTCB>
    2c92:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <uxTopReadyPriority>
    2c96:	08 95       	ret

00002c98 <vTaskPlaceOnEventList>:
    2c98:	cf 92       	push	r12
    2c9a:	df 92       	push	r13
    2c9c:	ef 92       	push	r14
    2c9e:	ff 92       	push	r15
    2ca0:	6a 01       	movw	r12, r20
    2ca2:	7b 01       	movw	r14, r22
    2ca4:	60 91 54 12 	lds	r22, 0x1254	; 0x801254 <pxCurrentTCB>
    2ca8:	70 91 55 12 	lds	r23, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2cac:	62 5f       	subi	r22, 0xF2	; 242
    2cae:	7f 4f       	sbci	r23, 0xFF	; 255
    2cb0:	0e 94 66 08 	call	0x10cc	; 0x10cc <vListInsert>
    2cb4:	41 e0       	ldi	r20, 0x01	; 1
    2cb6:	c7 01       	movw	r24, r14
    2cb8:	b6 01       	movw	r22, r12
    2cba:	c7 db       	rcall	.-2162   	; 0x244a <prvAddCurrentTaskToDelayedList>
    2cbc:	ff 90       	pop	r15
    2cbe:	ef 90       	pop	r14
    2cc0:	df 90       	pop	r13
    2cc2:	cf 90       	pop	r12
    2cc4:	08 95       	ret

00002cc6 <vTaskPlaceOnUnorderedEventList>:
    2cc6:	0f 93       	push	r16
    2cc8:	1f 93       	push	r17
    2cca:	cf 93       	push	r28
    2ccc:	df 93       	push	r29
    2cce:	fc 01       	movw	r30, r24
    2cd0:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    2cd4:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2cd8:	70 68       	ori	r23, 0x80	; 128
    2cda:	1e 96       	adiw	r26, 0x0e	; 14
    2cdc:	4d 93       	st	X+, r20
    2cde:	5d 93       	st	X+, r21
    2ce0:	6d 93       	st	X+, r22
    2ce2:	7c 93       	st	X, r23
    2ce4:	51 97       	sbiw	r26, 0x11	; 17
    2ce6:	a1 81       	ldd	r26, Z+1	; 0x01
    2ce8:	b2 81       	ldd	r27, Z+2	; 0x02
    2cea:	c0 91 54 12 	lds	r28, 0x1254	; 0x801254 <pxCurrentTCB>
    2cee:	d0 91 55 12 	lds	r29, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2cf2:	bb 8b       	std	Y+19, r27	; 0x13
    2cf4:	aa 8b       	std	Y+18, r26	; 0x12
    2cf6:	c0 91 54 12 	lds	r28, 0x1254	; 0x801254 <pxCurrentTCB>
    2cfa:	d0 91 55 12 	lds	r29, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2cfe:	16 96       	adiw	r26, 0x06	; 6
    2d00:	8d 91       	ld	r24, X+
    2d02:	9c 91       	ld	r25, X
    2d04:	17 97       	sbiw	r26, 0x07	; 7
    2d06:	9d 8b       	std	Y+21, r25	; 0x15
    2d08:	8c 8b       	std	Y+20, r24	; 0x14
    2d0a:	16 96       	adiw	r26, 0x06	; 6
    2d0c:	cd 91       	ld	r28, X+
    2d0e:	dc 91       	ld	r29, X
    2d10:	17 97       	sbiw	r26, 0x07	; 7
    2d12:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    2d16:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2d1a:	0e 96       	adiw	r24, 0x0e	; 14
    2d1c:	9d 83       	std	Y+5, r25	; 0x05
    2d1e:	8c 83       	std	Y+4, r24	; 0x04
    2d20:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    2d24:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2d28:	0e 96       	adiw	r24, 0x0e	; 14
    2d2a:	17 96       	adiw	r26, 0x07	; 7
    2d2c:	9c 93       	st	X, r25
    2d2e:	8e 93       	st	-X, r24
    2d30:	16 97       	sbiw	r26, 0x06	; 6
    2d32:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    2d36:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2d3a:	59 96       	adiw	r26, 0x19	; 25
    2d3c:	fc 93       	st	X, r31
    2d3e:	ee 93       	st	-X, r30
    2d40:	58 97       	sbiw	r26, 0x18	; 24
    2d42:	80 81       	ld	r24, Z
    2d44:	8f 5f       	subi	r24, 0xFF	; 255
    2d46:	80 83       	st	Z, r24
    2d48:	41 e0       	ldi	r20, 0x01	; 1
    2d4a:	c9 01       	movw	r24, r18
    2d4c:	b8 01       	movw	r22, r16
    2d4e:	7d db       	rcall	.-2310   	; 0x244a <prvAddCurrentTaskToDelayedList>
    2d50:	df 91       	pop	r29
    2d52:	cf 91       	pop	r28
    2d54:	1f 91       	pop	r17
    2d56:	0f 91       	pop	r16
    2d58:	08 95       	ret

00002d5a <vTaskPlaceOnEventListRestricted>:
    2d5a:	cf 93       	push	r28
    2d5c:	df 93       	push	r29
    2d5e:	fc 01       	movw	r30, r24
    2d60:	cb 01       	movw	r24, r22
    2d62:	ba 01       	movw	r22, r20
    2d64:	a1 81       	ldd	r26, Z+1	; 0x01
    2d66:	b2 81       	ldd	r27, Z+2	; 0x02
    2d68:	c0 91 54 12 	lds	r28, 0x1254	; 0x801254 <pxCurrentTCB>
    2d6c:	d0 91 55 12 	lds	r29, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2d70:	bb 8b       	std	Y+19, r27	; 0x13
    2d72:	aa 8b       	std	Y+18, r26	; 0x12
    2d74:	c0 91 54 12 	lds	r28, 0x1254	; 0x801254 <pxCurrentTCB>
    2d78:	d0 91 55 12 	lds	r29, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2d7c:	16 96       	adiw	r26, 0x06	; 6
    2d7e:	4d 91       	ld	r20, X+
    2d80:	5c 91       	ld	r21, X
    2d82:	17 97       	sbiw	r26, 0x07	; 7
    2d84:	5d 8b       	std	Y+21, r21	; 0x15
    2d86:	4c 8b       	std	Y+20, r20	; 0x14
    2d88:	16 96       	adiw	r26, 0x06	; 6
    2d8a:	cd 91       	ld	r28, X+
    2d8c:	dc 91       	ld	r29, X
    2d8e:	17 97       	sbiw	r26, 0x07	; 7
    2d90:	40 91 54 12 	lds	r20, 0x1254	; 0x801254 <pxCurrentTCB>
    2d94:	50 91 55 12 	lds	r21, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2d98:	42 5f       	subi	r20, 0xF2	; 242
    2d9a:	5f 4f       	sbci	r21, 0xFF	; 255
    2d9c:	5d 83       	std	Y+5, r21	; 0x05
    2d9e:	4c 83       	std	Y+4, r20	; 0x04
    2da0:	40 91 54 12 	lds	r20, 0x1254	; 0x801254 <pxCurrentTCB>
    2da4:	50 91 55 12 	lds	r21, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2da8:	42 5f       	subi	r20, 0xF2	; 242
    2daa:	5f 4f       	sbci	r21, 0xFF	; 255
    2dac:	17 96       	adiw	r26, 0x07	; 7
    2dae:	5c 93       	st	X, r21
    2db0:	4e 93       	st	-X, r20
    2db2:	16 97       	sbiw	r26, 0x06	; 6
    2db4:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    2db8:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2dbc:	59 96       	adiw	r26, 0x19	; 25
    2dbe:	fc 93       	st	X, r31
    2dc0:	ee 93       	st	-X, r30
    2dc2:	58 97       	sbiw	r26, 0x18	; 24
    2dc4:	30 81       	ld	r19, Z
    2dc6:	3f 5f       	subi	r19, 0xFF	; 255
    2dc8:	30 83       	st	Z, r19
    2dca:	22 23       	and	r18, r18
    2dcc:	19 f0       	breq	.+6      	; 0x2dd4 <vTaskPlaceOnEventListRestricted+0x7a>
    2dce:	6f ef       	ldi	r22, 0xFF	; 255
    2dd0:	7f ef       	ldi	r23, 0xFF	; 255
    2dd2:	cb 01       	movw	r24, r22
    2dd4:	42 2f       	mov	r20, r18
    2dd6:	39 db       	rcall	.-2446   	; 0x244a <prvAddCurrentTaskToDelayedList>
    2dd8:	df 91       	pop	r29
    2dda:	cf 91       	pop	r28
    2ddc:	08 95       	ret

00002dde <xTaskRemoveFromEventList>:
    2dde:	cf 93       	push	r28
    2de0:	df 93       	push	r29
    2de2:	dc 01       	movw	r26, r24
    2de4:	17 96       	adiw	r26, 0x07	; 7
    2de6:	ed 91       	ld	r30, X+
    2de8:	fc 91       	ld	r31, X
    2dea:	18 97       	sbiw	r26, 0x08	; 8
    2dec:	00 84       	ldd	r0, Z+8	; 0x08
    2dee:	f1 85       	ldd	r31, Z+9	; 0x09
    2df0:	e0 2d       	mov	r30, r0
    2df2:	a0 8d       	ldd	r26, Z+24	; 0x18
    2df4:	b1 8d       	ldd	r27, Z+25	; 0x19
    2df6:	c2 89       	ldd	r28, Z+18	; 0x12
    2df8:	d3 89       	ldd	r29, Z+19	; 0x13
    2dfa:	84 89       	ldd	r24, Z+20	; 0x14
    2dfc:	95 89       	ldd	r25, Z+21	; 0x15
    2dfe:	9f 83       	std	Y+7, r25	; 0x07
    2e00:	8e 83       	std	Y+6, r24	; 0x06
    2e02:	c4 89       	ldd	r28, Z+20	; 0x14
    2e04:	d5 89       	ldd	r29, Z+21	; 0x15
    2e06:	82 89       	ldd	r24, Z+18	; 0x12
    2e08:	93 89       	ldd	r25, Z+19	; 0x13
    2e0a:	9d 83       	std	Y+5, r25	; 0x05
    2e0c:	8c 83       	std	Y+4, r24	; 0x04
    2e0e:	11 96       	adiw	r26, 0x01	; 1
    2e10:	8d 91       	ld	r24, X+
    2e12:	9c 91       	ld	r25, X
    2e14:	12 97       	sbiw	r26, 0x02	; 2
    2e16:	9f 01       	movw	r18, r30
    2e18:	22 5f       	subi	r18, 0xF2	; 242
    2e1a:	3f 4f       	sbci	r19, 0xFF	; 255
    2e1c:	82 17       	cp	r24, r18
    2e1e:	93 07       	cpc	r25, r19
    2e20:	31 f4       	brne	.+12     	; 0x2e2e <xTaskRemoveFromEventList+0x50>
    2e22:	84 89       	ldd	r24, Z+20	; 0x14
    2e24:	95 89       	ldd	r25, Z+21	; 0x15
    2e26:	12 96       	adiw	r26, 0x02	; 2
    2e28:	9c 93       	st	X, r25
    2e2a:	8e 93       	st	-X, r24
    2e2c:	11 97       	sbiw	r26, 0x01	; 1
    2e2e:	11 8e       	std	Z+25, r1	; 0x19
    2e30:	10 8e       	std	Z+24, r1	; 0x18
    2e32:	8c 91       	ld	r24, X
    2e34:	81 50       	subi	r24, 0x01	; 1
    2e36:	8c 93       	st	X, r24
    2e38:	80 91 95 11 	lds	r24, 0x1195	; 0x801195 <uxSchedulerSuspended>
    2e3c:	81 11       	cpse	r24, r1
    2e3e:	52 c0       	rjmp	.+164    	; 0x2ee4 <xTaskRemoveFromEventList+0x106>
    2e40:	a4 85       	ldd	r26, Z+12	; 0x0c
    2e42:	b5 85       	ldd	r27, Z+13	; 0x0d
    2e44:	c6 81       	ldd	r28, Z+6	; 0x06
    2e46:	d7 81       	ldd	r29, Z+7	; 0x07
    2e48:	80 85       	ldd	r24, Z+8	; 0x08
    2e4a:	91 85       	ldd	r25, Z+9	; 0x09
    2e4c:	9f 83       	std	Y+7, r25	; 0x07
    2e4e:	8e 83       	std	Y+6, r24	; 0x06
    2e50:	c0 85       	ldd	r28, Z+8	; 0x08
    2e52:	d1 85       	ldd	r29, Z+9	; 0x09
    2e54:	86 81       	ldd	r24, Z+6	; 0x06
    2e56:	97 81       	ldd	r25, Z+7	; 0x07
    2e58:	9d 83       	std	Y+5, r25	; 0x05
    2e5a:	8c 83       	std	Y+4, r24	; 0x04
    2e5c:	11 96       	adiw	r26, 0x01	; 1
    2e5e:	8d 91       	ld	r24, X+
    2e60:	9c 91       	ld	r25, X
    2e62:	12 97       	sbiw	r26, 0x02	; 2
    2e64:	9f 01       	movw	r18, r30
    2e66:	2e 5f       	subi	r18, 0xFE	; 254
    2e68:	3f 4f       	sbci	r19, 0xFF	; 255
    2e6a:	82 17       	cp	r24, r18
    2e6c:	93 07       	cpc	r25, r19
    2e6e:	31 f4       	brne	.+12     	; 0x2e7c <xTaskRemoveFromEventList+0x9e>
    2e70:	80 85       	ldd	r24, Z+8	; 0x08
    2e72:	91 85       	ldd	r25, Z+9	; 0x09
    2e74:	12 96       	adiw	r26, 0x02	; 2
    2e76:	9c 93       	st	X, r25
    2e78:	8e 93       	st	-X, r24
    2e7a:	11 97       	sbiw	r26, 0x01	; 1
    2e7c:	15 86       	std	Z+13, r1	; 0x0d
    2e7e:	14 86       	std	Z+12, r1	; 0x0c
    2e80:	8c 91       	ld	r24, X
    2e82:	81 50       	subi	r24, 0x01	; 1
    2e84:	8c 93       	st	X, r24
    2e86:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2e88:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    2e8c:	8a 17       	cp	r24, r26
    2e8e:	10 f4       	brcc	.+4      	; 0x2e94 <xTaskRemoveFromEventList+0xb6>
    2e90:	a0 93 a4 11 	sts	0x11A4, r26	; 0x8011a4 <uxTopReadyPriority>
    2e94:	8b e0       	ldi	r24, 0x0B	; 11
    2e96:	8a 9f       	mul	r24, r26
    2e98:	d0 01       	movw	r26, r0
    2e9a:	11 24       	eor	r1, r1
    2e9c:	aa 51       	subi	r26, 0x1A	; 26
    2e9e:	be 4e       	sbci	r27, 0xEE	; 238
    2ea0:	11 96       	adiw	r26, 0x01	; 1
    2ea2:	0d 90       	ld	r0, X+
    2ea4:	bc 91       	ld	r27, X
    2ea6:	a0 2d       	mov	r26, r0
    2ea8:	b7 83       	std	Z+7, r27	; 0x07
    2eaa:	a6 83       	std	Z+6, r26	; 0x06
    2eac:	16 96       	adiw	r26, 0x06	; 6
    2eae:	4d 91       	ld	r20, X+
    2eb0:	5c 91       	ld	r21, X
    2eb2:	17 97       	sbiw	r26, 0x07	; 7
    2eb4:	51 87       	std	Z+9, r21	; 0x09
    2eb6:	40 87       	std	Z+8, r20	; 0x08
    2eb8:	16 96       	adiw	r26, 0x06	; 6
    2eba:	cd 91       	ld	r28, X+
    2ebc:	dc 91       	ld	r29, X
    2ebe:	17 97       	sbiw	r26, 0x07	; 7
    2ec0:	3d 83       	std	Y+5, r19	; 0x05
    2ec2:	2c 83       	std	Y+4, r18	; 0x04
    2ec4:	17 96       	adiw	r26, 0x07	; 7
    2ec6:	3c 93       	st	X, r19
    2ec8:	2e 93       	st	-X, r18
    2eca:	16 97       	sbiw	r26, 0x06	; 6
    2ecc:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2ece:	8a 9f       	mul	r24, r26
    2ed0:	d0 01       	movw	r26, r0
    2ed2:	11 24       	eor	r1, r1
    2ed4:	aa 51       	subi	r26, 0x1A	; 26
    2ed6:	be 4e       	sbci	r27, 0xEE	; 238
    2ed8:	b5 87       	std	Z+13, r27	; 0x0d
    2eda:	a4 87       	std	Z+12, r26	; 0x0c
    2edc:	8c 91       	ld	r24, X
    2ede:	8f 5f       	subi	r24, 0xFF	; 255
    2ee0:	8c 93       	st	X, r24
    2ee2:	1c c0       	rjmp	.+56     	; 0x2f1c <xTaskRemoveFromEventList+0x13e>
    2ee4:	41 ec       	ldi	r20, 0xC1	; 193
    2ee6:	51 e1       	ldi	r21, 0x11	; 17
    2ee8:	da 01       	movw	r26, r20
    2eea:	11 96       	adiw	r26, 0x01	; 1
    2eec:	cd 91       	ld	r28, X+
    2eee:	dc 91       	ld	r29, X
    2ef0:	12 97       	sbiw	r26, 0x02	; 2
    2ef2:	d3 8b       	std	Z+19, r29	; 0x13
    2ef4:	c2 8b       	std	Z+18, r28	; 0x12
    2ef6:	8e 81       	ldd	r24, Y+6	; 0x06
    2ef8:	9f 81       	ldd	r25, Y+7	; 0x07
    2efa:	95 8b       	std	Z+21, r25	; 0x15
    2efc:	84 8b       	std	Z+20, r24	; 0x14
    2efe:	8e 81       	ldd	r24, Y+6	; 0x06
    2f00:	9f 81       	ldd	r25, Y+7	; 0x07
    2f02:	dc 01       	movw	r26, r24
    2f04:	15 96       	adiw	r26, 0x05	; 5
    2f06:	3c 93       	st	X, r19
    2f08:	2e 93       	st	-X, r18
    2f0a:	14 97       	sbiw	r26, 0x04	; 4
    2f0c:	3f 83       	std	Y+7, r19	; 0x07
    2f0e:	2e 83       	std	Y+6, r18	; 0x06
    2f10:	51 8f       	std	Z+25, r21	; 0x19
    2f12:	40 8f       	std	Z+24, r20	; 0x18
    2f14:	da 01       	movw	r26, r20
    2f16:	8c 91       	ld	r24, X
    2f18:	8f 5f       	subi	r24, 0xFF	; 255
    2f1a:	8c 93       	st	X, r24
    2f1c:	92 8d       	ldd	r25, Z+26	; 0x1a
    2f1e:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    2f22:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    2f26:	82 8d       	ldd	r24, Z+26	; 0x1a
    2f28:	89 17       	cp	r24, r25
    2f2a:	20 f4       	brcc	.+8      	; 0x2f34 <xTaskRemoveFromEventList+0x156>
    2f2c:	81 e0       	ldi	r24, 0x01	; 1
    2f2e:	80 93 9e 11 	sts	0x119E, r24	; 0x80119e <xYieldPending>
    2f32:	01 c0       	rjmp	.+2      	; 0x2f36 <xTaskRemoveFromEventList+0x158>
    2f34:	80 e0       	ldi	r24, 0x00	; 0
    2f36:	df 91       	pop	r29
    2f38:	cf 91       	pop	r28
    2f3a:	08 95       	ret

00002f3c <vTaskRemoveFromUnorderedEventList>:
    2f3c:	cf 93       	push	r28
    2f3e:	df 93       	push	r29
    2f40:	dc 01       	movw	r26, r24
    2f42:	70 68       	ori	r23, 0x80	; 128
    2f44:	4d 93       	st	X+, r20
    2f46:	5d 93       	st	X+, r21
    2f48:	6d 93       	st	X+, r22
    2f4a:	7c 93       	st	X, r23
    2f4c:	13 97       	sbiw	r26, 0x03	; 3
    2f4e:	18 96       	adiw	r26, 0x08	; 8
    2f50:	ed 91       	ld	r30, X+
    2f52:	fc 91       	ld	r31, X
    2f54:	19 97       	sbiw	r26, 0x09	; 9
    2f56:	1a 96       	adiw	r26, 0x0a	; 10
    2f58:	4d 91       	ld	r20, X+
    2f5a:	5c 91       	ld	r21, X
    2f5c:	1b 97       	sbiw	r26, 0x0b	; 11
    2f5e:	14 96       	adiw	r26, 0x04	; 4
    2f60:	8d 91       	ld	r24, X+
    2f62:	9c 91       	ld	r25, X
    2f64:	15 97       	sbiw	r26, 0x05	; 5
    2f66:	16 96       	adiw	r26, 0x06	; 6
    2f68:	2d 91       	ld	r18, X+
    2f6a:	3c 91       	ld	r19, X
    2f6c:	17 97       	sbiw	r26, 0x07	; 7
    2f6e:	ec 01       	movw	r28, r24
    2f70:	3f 83       	std	Y+7, r19	; 0x07
    2f72:	2e 83       	std	Y+6, r18	; 0x06
    2f74:	16 96       	adiw	r26, 0x06	; 6
    2f76:	8d 91       	ld	r24, X+
    2f78:	9c 91       	ld	r25, X
    2f7a:	17 97       	sbiw	r26, 0x07	; 7
    2f7c:	14 96       	adiw	r26, 0x04	; 4
    2f7e:	2d 91       	ld	r18, X+
    2f80:	3c 91       	ld	r19, X
    2f82:	15 97       	sbiw	r26, 0x05	; 5
    2f84:	ec 01       	movw	r28, r24
    2f86:	3d 83       	std	Y+5, r19	; 0x05
    2f88:	2c 83       	std	Y+4, r18	; 0x04
    2f8a:	ea 01       	movw	r28, r20
    2f8c:	89 81       	ldd	r24, Y+1	; 0x01
    2f8e:	9a 81       	ldd	r25, Y+2	; 0x02
    2f90:	a8 17       	cp	r26, r24
    2f92:	b9 07       	cpc	r27, r25
    2f94:	31 f4       	brne	.+12     	; 0x2fa2 <vTaskRemoveFromUnorderedEventList+0x66>
    2f96:	16 96       	adiw	r26, 0x06	; 6
    2f98:	8d 91       	ld	r24, X+
    2f9a:	9c 91       	ld	r25, X
    2f9c:	17 97       	sbiw	r26, 0x07	; 7
    2f9e:	9a 83       	std	Y+2, r25	; 0x02
    2fa0:	89 83       	std	Y+1, r24	; 0x01
    2fa2:	1b 96       	adiw	r26, 0x0b	; 11
    2fa4:	1c 92       	st	X, r1
    2fa6:	1e 92       	st	-X, r1
    2fa8:	1a 97       	sbiw	r26, 0x0a	; 10
    2faa:	da 01       	movw	r26, r20
    2fac:	8c 91       	ld	r24, X
    2fae:	81 50       	subi	r24, 0x01	; 1
    2fb0:	8c 93       	st	X, r24
    2fb2:	a4 85       	ldd	r26, Z+12	; 0x0c
    2fb4:	b5 85       	ldd	r27, Z+13	; 0x0d
    2fb6:	c6 81       	ldd	r28, Z+6	; 0x06
    2fb8:	d7 81       	ldd	r29, Z+7	; 0x07
    2fba:	80 85       	ldd	r24, Z+8	; 0x08
    2fbc:	91 85       	ldd	r25, Z+9	; 0x09
    2fbe:	9f 83       	std	Y+7, r25	; 0x07
    2fc0:	8e 83       	std	Y+6, r24	; 0x06
    2fc2:	c0 85       	ldd	r28, Z+8	; 0x08
    2fc4:	d1 85       	ldd	r29, Z+9	; 0x09
    2fc6:	86 81       	ldd	r24, Z+6	; 0x06
    2fc8:	97 81       	ldd	r25, Z+7	; 0x07
    2fca:	9d 83       	std	Y+5, r25	; 0x05
    2fcc:	8c 83       	std	Y+4, r24	; 0x04
    2fce:	11 96       	adiw	r26, 0x01	; 1
    2fd0:	8d 91       	ld	r24, X+
    2fd2:	9c 91       	ld	r25, X
    2fd4:	12 97       	sbiw	r26, 0x02	; 2
    2fd6:	9f 01       	movw	r18, r30
    2fd8:	2e 5f       	subi	r18, 0xFE	; 254
    2fda:	3f 4f       	sbci	r19, 0xFF	; 255
    2fdc:	82 17       	cp	r24, r18
    2fde:	93 07       	cpc	r25, r19
    2fe0:	31 f4       	brne	.+12     	; 0x2fee <vTaskRemoveFromUnorderedEventList+0xb2>
    2fe2:	80 85       	ldd	r24, Z+8	; 0x08
    2fe4:	91 85       	ldd	r25, Z+9	; 0x09
    2fe6:	12 96       	adiw	r26, 0x02	; 2
    2fe8:	9c 93       	st	X, r25
    2fea:	8e 93       	st	-X, r24
    2fec:	11 97       	sbiw	r26, 0x01	; 1
    2fee:	15 86       	std	Z+13, r1	; 0x0d
    2ff0:	14 86       	std	Z+12, r1	; 0x0c
    2ff2:	8c 91       	ld	r24, X
    2ff4:	81 50       	subi	r24, 0x01	; 1
    2ff6:	8c 93       	st	X, r24
    2ff8:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2ffa:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    2ffe:	8a 17       	cp	r24, r26
    3000:	10 f4       	brcc	.+4      	; 0x3006 <vTaskRemoveFromUnorderedEventList+0xca>
    3002:	a0 93 a4 11 	sts	0x11A4, r26	; 0x8011a4 <uxTopReadyPriority>
    3006:	8b e0       	ldi	r24, 0x0B	; 11
    3008:	8a 9f       	mul	r24, r26
    300a:	d0 01       	movw	r26, r0
    300c:	11 24       	eor	r1, r1
    300e:	aa 51       	subi	r26, 0x1A	; 26
    3010:	be 4e       	sbci	r27, 0xEE	; 238
    3012:	11 96       	adiw	r26, 0x01	; 1
    3014:	0d 90       	ld	r0, X+
    3016:	bc 91       	ld	r27, X
    3018:	a0 2d       	mov	r26, r0
    301a:	b7 83       	std	Z+7, r27	; 0x07
    301c:	a6 83       	std	Z+6, r26	; 0x06
    301e:	16 96       	adiw	r26, 0x06	; 6
    3020:	4d 91       	ld	r20, X+
    3022:	5c 91       	ld	r21, X
    3024:	17 97       	sbiw	r26, 0x07	; 7
    3026:	51 87       	std	Z+9, r21	; 0x09
    3028:	40 87       	std	Z+8, r20	; 0x08
    302a:	16 96       	adiw	r26, 0x06	; 6
    302c:	cd 91       	ld	r28, X+
    302e:	dc 91       	ld	r29, X
    3030:	17 97       	sbiw	r26, 0x07	; 7
    3032:	3d 83       	std	Y+5, r19	; 0x05
    3034:	2c 83       	std	Y+4, r18	; 0x04
    3036:	17 96       	adiw	r26, 0x07	; 7
    3038:	3c 93       	st	X, r19
    303a:	2e 93       	st	-X, r18
    303c:	16 97       	sbiw	r26, 0x06	; 6
    303e:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3040:	8a 9f       	mul	r24, r26
    3042:	d0 01       	movw	r26, r0
    3044:	11 24       	eor	r1, r1
    3046:	aa 51       	subi	r26, 0x1A	; 26
    3048:	be 4e       	sbci	r27, 0xEE	; 238
    304a:	b5 87       	std	Z+13, r27	; 0x0d
    304c:	a4 87       	std	Z+12, r26	; 0x0c
    304e:	8c 91       	ld	r24, X
    3050:	8f 5f       	subi	r24, 0xFF	; 255
    3052:	8c 93       	st	X, r24
    3054:	92 8d       	ldd	r25, Z+26	; 0x1a
    3056:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    305a:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    305e:	82 8d       	ldd	r24, Z+26	; 0x1a
    3060:	89 17       	cp	r24, r25
    3062:	18 f4       	brcc	.+6      	; 0x306a <vTaskRemoveFromUnorderedEventList+0x12e>
    3064:	81 e0       	ldi	r24, 0x01	; 1
    3066:	80 93 9e 11 	sts	0x119E, r24	; 0x80119e <xYieldPending>
    306a:	df 91       	pop	r29
    306c:	cf 91       	pop	r28
    306e:	08 95       	ret

00003070 <vTaskSetTimeOutState>:
    3070:	0f b6       	in	r0, 0x3f	; 63
    3072:	f8 94       	cli
    3074:	0f 92       	push	r0
    3076:	20 91 9d 11 	lds	r18, 0x119D	; 0x80119d <xNumOfOverflows>
    307a:	fc 01       	movw	r30, r24
    307c:	20 83       	st	Z, r18
    307e:	40 91 a5 11 	lds	r20, 0x11A5	; 0x8011a5 <xTickCount>
    3082:	50 91 a6 11 	lds	r21, 0x11A6	; 0x8011a6 <xTickCount+0x1>
    3086:	60 91 a7 11 	lds	r22, 0x11A7	; 0x8011a7 <xTickCount+0x2>
    308a:	70 91 a8 11 	lds	r23, 0x11A8	; 0x8011a8 <xTickCount+0x3>
    308e:	41 83       	std	Z+1, r20	; 0x01
    3090:	52 83       	std	Z+2, r21	; 0x02
    3092:	63 83       	std	Z+3, r22	; 0x03
    3094:	74 83       	std	Z+4, r23	; 0x04
    3096:	0f 90       	pop	r0
    3098:	0f be       	out	0x3f, r0	; 63
    309a:	08 95       	ret

0000309c <vTaskInternalSetTimeOutState>:
    309c:	20 91 9d 11 	lds	r18, 0x119D	; 0x80119d <xNumOfOverflows>
    30a0:	fc 01       	movw	r30, r24
    30a2:	20 83       	st	Z, r18
    30a4:	40 91 a5 11 	lds	r20, 0x11A5	; 0x8011a5 <xTickCount>
    30a8:	50 91 a6 11 	lds	r21, 0x11A6	; 0x8011a6 <xTickCount+0x1>
    30ac:	60 91 a7 11 	lds	r22, 0x11A7	; 0x8011a7 <xTickCount+0x2>
    30b0:	70 91 a8 11 	lds	r23, 0x11A8	; 0x8011a8 <xTickCount+0x3>
    30b4:	41 83       	std	Z+1, r20	; 0x01
    30b6:	52 83       	std	Z+2, r21	; 0x02
    30b8:	63 83       	std	Z+3, r22	; 0x03
    30ba:	74 83       	std	Z+4, r23	; 0x04
    30bc:	08 95       	ret

000030be <xTaskCheckForTimeOut>:
    30be:	8f 92       	push	r8
    30c0:	9f 92       	push	r9
    30c2:	af 92       	push	r10
    30c4:	bf 92       	push	r11
    30c6:	cf 92       	push	r12
    30c8:	df 92       	push	r13
    30ca:	ef 92       	push	r14
    30cc:	ff 92       	push	r15
    30ce:	0f 93       	push	r16
    30d0:	1f 93       	push	r17
    30d2:	cf 93       	push	r28
    30d4:	df 93       	push	r29
    30d6:	fb 01       	movw	r30, r22
    30d8:	0f b6       	in	r0, 0x3f	; 63
    30da:	f8 94       	cli
    30dc:	0f 92       	push	r0
    30de:	c0 90 a5 11 	lds	r12, 0x11A5	; 0x8011a5 <xTickCount>
    30e2:	d0 90 a6 11 	lds	r13, 0x11A6	; 0x8011a6 <xTickCount+0x1>
    30e6:	e0 90 a7 11 	lds	r14, 0x11A7	; 0x8011a7 <xTickCount+0x2>
    30ea:	f0 90 a8 11 	lds	r15, 0x11A8	; 0x8011a8 <xTickCount+0x3>
    30ee:	dc 01       	movw	r26, r24
    30f0:	11 96       	adiw	r26, 0x01	; 1
    30f2:	0d 91       	ld	r16, X+
    30f4:	1d 91       	ld	r17, X+
    30f6:	2d 91       	ld	r18, X+
    30f8:	3c 91       	ld	r19, X
    30fa:	14 97       	sbiw	r26, 0x04	; 4
    30fc:	46 01       	movw	r8, r12
    30fe:	57 01       	movw	r10, r14
    3100:	80 1a       	sub	r8, r16
    3102:	91 0a       	sbc	r9, r17
    3104:	a2 0a       	sbc	r10, r18
    3106:	b3 0a       	sbc	r11, r19
    3108:	40 81       	ld	r20, Z
    310a:	51 81       	ldd	r21, Z+1	; 0x01
    310c:	62 81       	ldd	r22, Z+2	; 0x02
    310e:	73 81       	ldd	r23, Z+3	; 0x03
    3110:	4f 3f       	cpi	r20, 0xFF	; 255
    3112:	bf ef       	ldi	r27, 0xFF	; 255
    3114:	5b 07       	cpc	r21, r27
    3116:	6b 07       	cpc	r22, r27
    3118:	7b 07       	cpc	r23, r27
    311a:	39 f1       	breq	.+78     	; 0x316a <xTaskCheckForTimeOut+0xac>
    311c:	ec 01       	movw	r28, r24
    311e:	b8 81       	ld	r27, Y
    3120:	a0 91 9d 11 	lds	r26, 0x119D	; 0x80119d <xNumOfOverflows>
    3124:	ba 17       	cp	r27, r26
    3126:	59 f0       	breq	.+22     	; 0x313e <xTaskCheckForTimeOut+0x80>
    3128:	c0 16       	cp	r12, r16
    312a:	d1 06       	cpc	r13, r17
    312c:	e2 06       	cpc	r14, r18
    312e:	f3 06       	cpc	r15, r19
    3130:	30 f0       	brcs	.+12     	; 0x313e <xTaskCheckForTimeOut+0x80>
    3132:	10 82       	st	Z, r1
    3134:	11 82       	std	Z+1, r1	; 0x01
    3136:	12 82       	std	Z+2, r1	; 0x02
    3138:	13 82       	std	Z+3, r1	; 0x03
    313a:	81 e0       	ldi	r24, 0x01	; 1
    313c:	17 c0       	rjmp	.+46     	; 0x316c <xTaskCheckForTimeOut+0xae>
    313e:	84 16       	cp	r8, r20
    3140:	95 06       	cpc	r9, r21
    3142:	a6 06       	cpc	r10, r22
    3144:	b7 06       	cpc	r11, r23
    3146:	58 f4       	brcc	.+22     	; 0x315e <xTaskCheckForTimeOut+0xa0>
    3148:	48 19       	sub	r20, r8
    314a:	59 09       	sbc	r21, r9
    314c:	6a 09       	sbc	r22, r10
    314e:	7b 09       	sbc	r23, r11
    3150:	40 83       	st	Z, r20
    3152:	51 83       	std	Z+1, r21	; 0x01
    3154:	62 83       	std	Z+2, r22	; 0x02
    3156:	73 83       	std	Z+3, r23	; 0x03
    3158:	a1 df       	rcall	.-190    	; 0x309c <vTaskInternalSetTimeOutState>
    315a:	80 e0       	ldi	r24, 0x00	; 0
    315c:	07 c0       	rjmp	.+14     	; 0x316c <xTaskCheckForTimeOut+0xae>
    315e:	10 82       	st	Z, r1
    3160:	11 82       	std	Z+1, r1	; 0x01
    3162:	12 82       	std	Z+2, r1	; 0x02
    3164:	13 82       	std	Z+3, r1	; 0x03
    3166:	81 e0       	ldi	r24, 0x01	; 1
    3168:	01 c0       	rjmp	.+2      	; 0x316c <xTaskCheckForTimeOut+0xae>
    316a:	80 e0       	ldi	r24, 0x00	; 0
    316c:	0f 90       	pop	r0
    316e:	0f be       	out	0x3f, r0	; 63
    3170:	df 91       	pop	r29
    3172:	cf 91       	pop	r28
    3174:	1f 91       	pop	r17
    3176:	0f 91       	pop	r16
    3178:	ff 90       	pop	r15
    317a:	ef 90       	pop	r14
    317c:	df 90       	pop	r13
    317e:	cf 90       	pop	r12
    3180:	bf 90       	pop	r11
    3182:	af 90       	pop	r10
    3184:	9f 90       	pop	r9
    3186:	8f 90       	pop	r8
    3188:	08 95       	ret

0000318a <vTaskMissedYield>:
    318a:	81 e0       	ldi	r24, 0x01	; 1
    318c:	80 93 9e 11 	sts	0x119E, r24	; 0x80119e <xYieldPending>
    3190:	08 95       	ret

00003192 <xTaskGetCurrentTaskHandle>:
    3192:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    3196:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    319a:	08 95       	ret

0000319c <xTaskGetSchedulerState>:
    319c:	80 91 a3 11 	lds	r24, 0x11A3	; 0x8011a3 <xSchedulerRunning>
    31a0:	88 23       	and	r24, r24
    31a2:	31 f0       	breq	.+12     	; 0x31b0 <xTaskGetSchedulerState+0x14>
    31a4:	80 91 95 11 	lds	r24, 0x1195	; 0x801195 <uxSchedulerSuspended>
    31a8:	81 11       	cpse	r24, r1
    31aa:	04 c0       	rjmp	.+8      	; 0x31b4 <xTaskGetSchedulerState+0x18>
    31ac:	82 e0       	ldi	r24, 0x02	; 2
    31ae:	08 95       	ret
    31b0:	81 e0       	ldi	r24, 0x01	; 1
    31b2:	08 95       	ret
    31b4:	80 e0       	ldi	r24, 0x00	; 0
    31b6:	08 95       	ret

000031b8 <xTaskPriorityInherit>:
    31b8:	0f 93       	push	r16
    31ba:	1f 93       	push	r17
    31bc:	cf 93       	push	r28
    31be:	df 93       	push	r29
    31c0:	fc 01       	movw	r30, r24
    31c2:	89 2b       	or	r24, r25
    31c4:	09 f4       	brne	.+2      	; 0x31c8 <xTaskPriorityInherit+0x10>
    31c6:	77 c0       	rjmp	.+238    	; 0x32b6 <xTaskPriorityInherit+0xfe>
    31c8:	82 8d       	ldd	r24, Z+26	; 0x1a
    31ca:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    31ce:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    31d2:	5a 96       	adiw	r26, 0x1a	; 26
    31d4:	9c 91       	ld	r25, X
    31d6:	89 17       	cp	r24, r25
    31d8:	08 f0       	brcs	.+2      	; 0x31dc <xTaskPriorityInherit+0x24>
    31da:	63 c0       	rjmp	.+198    	; 0x32a2 <xTaskPriorityInherit+0xea>
    31dc:	46 85       	ldd	r20, Z+14	; 0x0e
    31de:	57 85       	ldd	r21, Z+15	; 0x0f
    31e0:	60 89       	ldd	r22, Z+16	; 0x10
    31e2:	71 89       	ldd	r23, Z+17	; 0x11
    31e4:	77 23       	and	r23, r23
    31e6:	94 f0       	brlt	.+36     	; 0x320c <xTaskPriorityInherit+0x54>
    31e8:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    31ec:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    31f0:	5a 96       	adiw	r26, 0x1a	; 26
    31f2:	9c 91       	ld	r25, X
    31f4:	4a e0       	ldi	r20, 0x0A	; 10
    31f6:	50 e0       	ldi	r21, 0x00	; 0
    31f8:	60 e0       	ldi	r22, 0x00	; 0
    31fa:	70 e0       	ldi	r23, 0x00	; 0
    31fc:	49 1b       	sub	r20, r25
    31fe:	51 09       	sbc	r21, r1
    3200:	61 09       	sbc	r22, r1
    3202:	71 09       	sbc	r23, r1
    3204:	46 87       	std	Z+14, r20	; 0x0e
    3206:	57 87       	std	Z+15, r21	; 0x0f
    3208:	60 8b       	std	Z+16, r22	; 0x10
    320a:	71 8b       	std	Z+17, r23	; 0x11
    320c:	24 85       	ldd	r18, Z+12	; 0x0c
    320e:	35 85       	ldd	r19, Z+13	; 0x0d
    3210:	4b e0       	ldi	r20, 0x0B	; 11
    3212:	84 9f       	mul	r24, r20
    3214:	c0 01       	movw	r24, r0
    3216:	11 24       	eor	r1, r1
    3218:	8a 51       	subi	r24, 0x1A	; 26
    321a:	9e 4e       	sbci	r25, 0xEE	; 238
    321c:	28 17       	cp	r18, r24
    321e:	39 07       	cpc	r19, r25
    3220:	b9 f5       	brne	.+110    	; 0x3290 <xTaskPriorityInherit+0xd8>
    3222:	ef 01       	movw	r28, r30
    3224:	8f 01       	movw	r16, r30
    3226:	0e 5f       	subi	r16, 0xFE	; 254
    3228:	1f 4f       	sbci	r17, 0xFF	; 255
    322a:	c8 01       	movw	r24, r16
    322c:	0e 94 a3 08 	call	0x1146	; 0x1146 <uxListRemove>
    3230:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    3234:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    3238:	e2 8d       	ldd	r30, Z+26	; 0x1a
    323a:	ea 8f       	std	Y+26, r30	; 0x1a
    323c:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    3240:	8e 17       	cp	r24, r30
    3242:	10 f4       	brcc	.+4      	; 0x3248 <xTaskPriorityInherit+0x90>
    3244:	e0 93 a4 11 	sts	0x11A4, r30	; 0x8011a4 <uxTopReadyPriority>
    3248:	8b e0       	ldi	r24, 0x0B	; 11
    324a:	8e 9f       	mul	r24, r30
    324c:	f0 01       	movw	r30, r0
    324e:	11 24       	eor	r1, r1
    3250:	ea 51       	subi	r30, 0x1A	; 26
    3252:	fe 4e       	sbci	r31, 0xEE	; 238
    3254:	01 80       	ldd	r0, Z+1	; 0x01
    3256:	f2 81       	ldd	r31, Z+2	; 0x02
    3258:	e0 2d       	mov	r30, r0
    325a:	ff 83       	std	Y+7, r31	; 0x07
    325c:	ee 83       	std	Y+6, r30	; 0x06
    325e:	26 81       	ldd	r18, Z+6	; 0x06
    3260:	37 81       	ldd	r19, Z+7	; 0x07
    3262:	39 87       	std	Y+9, r19	; 0x09
    3264:	28 87       	std	Y+8, r18	; 0x08
    3266:	a6 81       	ldd	r26, Z+6	; 0x06
    3268:	b7 81       	ldd	r27, Z+7	; 0x07
    326a:	15 96       	adiw	r26, 0x05	; 5
    326c:	1c 93       	st	X, r17
    326e:	0e 93       	st	-X, r16
    3270:	14 97       	sbiw	r26, 0x04	; 4
    3272:	17 83       	std	Z+7, r17	; 0x07
    3274:	06 83       	std	Z+6, r16	; 0x06
    3276:	ea 8d       	ldd	r30, Y+26	; 0x1a
    3278:	8e 9f       	mul	r24, r30
    327a:	f0 01       	movw	r30, r0
    327c:	11 24       	eor	r1, r1
    327e:	ea 51       	subi	r30, 0x1A	; 26
    3280:	fe 4e       	sbci	r31, 0xEE	; 238
    3282:	fd 87       	std	Y+13, r31	; 0x0d
    3284:	ec 87       	std	Y+12, r30	; 0x0c
    3286:	80 81       	ld	r24, Z
    3288:	8f 5f       	subi	r24, 0xFF	; 255
    328a:	80 83       	st	Z, r24
    328c:	81 e0       	ldi	r24, 0x01	; 1
    328e:	16 c0       	rjmp	.+44     	; 0x32bc <xTaskPriorityInherit+0x104>
    3290:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    3294:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    3298:	5a 96       	adiw	r26, 0x1a	; 26
    329a:	8c 91       	ld	r24, X
    329c:	82 8f       	std	Z+26, r24	; 0x1a
    329e:	81 e0       	ldi	r24, 0x01	; 1
    32a0:	0d c0       	rjmp	.+26     	; 0x32bc <xTaskPriorityInherit+0x104>
    32a2:	95 a5       	ldd	r25, Z+45	; 0x2d
    32a4:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    32a8:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    32ac:	82 8d       	ldd	r24, Z+26	; 0x1a
    32ae:	98 17       	cp	r25, r24
    32b0:	20 f0       	brcs	.+8      	; 0x32ba <xTaskPriorityInherit+0x102>
    32b2:	80 e0       	ldi	r24, 0x00	; 0
    32b4:	03 c0       	rjmp	.+6      	; 0x32bc <xTaskPriorityInherit+0x104>
    32b6:	80 e0       	ldi	r24, 0x00	; 0
    32b8:	01 c0       	rjmp	.+2      	; 0x32bc <xTaskPriorityInherit+0x104>
    32ba:	81 e0       	ldi	r24, 0x01	; 1
    32bc:	df 91       	pop	r29
    32be:	cf 91       	pop	r28
    32c0:	1f 91       	pop	r17
    32c2:	0f 91       	pop	r16
    32c4:	08 95       	ret

000032c6 <xTaskPriorityDisinherit>:
    32c6:	0f 93       	push	r16
    32c8:	1f 93       	push	r17
    32ca:	cf 93       	push	r28
    32cc:	df 93       	push	r29
    32ce:	fc 01       	movw	r30, r24
    32d0:	89 2b       	or	r24, r25
    32d2:	09 f4       	brne	.+2      	; 0x32d6 <xTaskPriorityDisinherit+0x10>
    32d4:	49 c0       	rjmp	.+146    	; 0x3368 <xTaskPriorityDisinherit+0xa2>
    32d6:	86 a5       	ldd	r24, Z+46	; 0x2e
    32d8:	81 50       	subi	r24, 0x01	; 1
    32da:	86 a7       	std	Z+46, r24	; 0x2e
    32dc:	22 8d       	ldd	r18, Z+26	; 0x1a
    32de:	95 a5       	ldd	r25, Z+45	; 0x2d
    32e0:	29 17       	cp	r18, r25
    32e2:	09 f4       	brne	.+2      	; 0x32e6 <xTaskPriorityDisinherit+0x20>
    32e4:	43 c0       	rjmp	.+134    	; 0x336c <xTaskPriorityDisinherit+0xa6>
    32e6:	81 11       	cpse	r24, r1
    32e8:	43 c0       	rjmp	.+134    	; 0x3370 <xTaskPriorityDisinherit+0xaa>
    32ea:	ef 01       	movw	r28, r30
    32ec:	8f 01       	movw	r16, r30
    32ee:	0e 5f       	subi	r16, 0xFE	; 254
    32f0:	1f 4f       	sbci	r17, 0xFF	; 255
    32f2:	c8 01       	movw	r24, r16
    32f4:	0e 94 a3 08 	call	0x1146	; 0x1146 <uxListRemove>
    32f8:	ed a5       	ldd	r30, Y+45	; 0x2d
    32fa:	ea 8f       	std	Y+26, r30	; 0x1a
    32fc:	8a e0       	ldi	r24, 0x0A	; 10
    32fe:	90 e0       	ldi	r25, 0x00	; 0
    3300:	a0 e0       	ldi	r26, 0x00	; 0
    3302:	b0 e0       	ldi	r27, 0x00	; 0
    3304:	8e 1b       	sub	r24, r30
    3306:	91 09       	sbc	r25, r1
    3308:	a1 09       	sbc	r26, r1
    330a:	b1 09       	sbc	r27, r1
    330c:	8e 87       	std	Y+14, r24	; 0x0e
    330e:	9f 87       	std	Y+15, r25	; 0x0f
    3310:	a8 8b       	std	Y+16, r26	; 0x10
    3312:	b9 8b       	std	Y+17, r27	; 0x11
    3314:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    3318:	8e 17       	cp	r24, r30
    331a:	10 f4       	brcc	.+4      	; 0x3320 <xTaskPriorityDisinherit+0x5a>
    331c:	e0 93 a4 11 	sts	0x11A4, r30	; 0x8011a4 <uxTopReadyPriority>
    3320:	8b e0       	ldi	r24, 0x0B	; 11
    3322:	8e 9f       	mul	r24, r30
    3324:	f0 01       	movw	r30, r0
    3326:	11 24       	eor	r1, r1
    3328:	ea 51       	subi	r30, 0x1A	; 26
    332a:	fe 4e       	sbci	r31, 0xEE	; 238
    332c:	01 80       	ldd	r0, Z+1	; 0x01
    332e:	f2 81       	ldd	r31, Z+2	; 0x02
    3330:	e0 2d       	mov	r30, r0
    3332:	ff 83       	std	Y+7, r31	; 0x07
    3334:	ee 83       	std	Y+6, r30	; 0x06
    3336:	26 81       	ldd	r18, Z+6	; 0x06
    3338:	37 81       	ldd	r19, Z+7	; 0x07
    333a:	39 87       	std	Y+9, r19	; 0x09
    333c:	28 87       	std	Y+8, r18	; 0x08
    333e:	a6 81       	ldd	r26, Z+6	; 0x06
    3340:	b7 81       	ldd	r27, Z+7	; 0x07
    3342:	15 96       	adiw	r26, 0x05	; 5
    3344:	1c 93       	st	X, r17
    3346:	0e 93       	st	-X, r16
    3348:	14 97       	sbiw	r26, 0x04	; 4
    334a:	17 83       	std	Z+7, r17	; 0x07
    334c:	06 83       	std	Z+6, r16	; 0x06
    334e:	ea 8d       	ldd	r30, Y+26	; 0x1a
    3350:	8e 9f       	mul	r24, r30
    3352:	f0 01       	movw	r30, r0
    3354:	11 24       	eor	r1, r1
    3356:	ea 51       	subi	r30, 0x1A	; 26
    3358:	fe 4e       	sbci	r31, 0xEE	; 238
    335a:	fd 87       	std	Y+13, r31	; 0x0d
    335c:	ec 87       	std	Y+12, r30	; 0x0c
    335e:	80 81       	ld	r24, Z
    3360:	8f 5f       	subi	r24, 0xFF	; 255
    3362:	80 83       	st	Z, r24
    3364:	81 e0       	ldi	r24, 0x01	; 1
    3366:	05 c0       	rjmp	.+10     	; 0x3372 <xTaskPriorityDisinherit+0xac>
    3368:	80 e0       	ldi	r24, 0x00	; 0
    336a:	03 c0       	rjmp	.+6      	; 0x3372 <xTaskPriorityDisinherit+0xac>
    336c:	80 e0       	ldi	r24, 0x00	; 0
    336e:	01 c0       	rjmp	.+2      	; 0x3372 <xTaskPriorityDisinherit+0xac>
    3370:	80 e0       	ldi	r24, 0x00	; 0
    3372:	df 91       	pop	r29
    3374:	cf 91       	pop	r28
    3376:	1f 91       	pop	r17
    3378:	0f 91       	pop	r16
    337a:	08 95       	ret

0000337c <vTaskPriorityDisinheritAfterTimeout>:
    337c:	0f 93       	push	r16
    337e:	1f 93       	push	r17
    3380:	cf 93       	push	r28
    3382:	df 93       	push	r29
    3384:	fc 01       	movw	r30, r24
    3386:	89 2b       	or	r24, r25
    3388:	09 f4       	brne	.+2      	; 0x338c <vTaskPriorityDisinheritAfterTimeout+0x10>
    338a:	5a c0       	rjmp	.+180    	; 0x3440 <vTaskPriorityDisinheritAfterTimeout+0xc4>
    338c:	85 a5       	ldd	r24, Z+45	; 0x2d
    338e:	86 17       	cp	r24, r22
    3390:	08 f4       	brcc	.+2      	; 0x3394 <vTaskPriorityDisinheritAfterTimeout+0x18>
    3392:	86 2f       	mov	r24, r22
    3394:	92 8d       	ldd	r25, Z+26	; 0x1a
    3396:	89 17       	cp	r24, r25
    3398:	09 f4       	brne	.+2      	; 0x339c <vTaskPriorityDisinheritAfterTimeout+0x20>
    339a:	52 c0       	rjmp	.+164    	; 0x3440 <vTaskPriorityDisinheritAfterTimeout+0xc4>
    339c:	26 a5       	ldd	r18, Z+46	; 0x2e
    339e:	21 30       	cpi	r18, 0x01	; 1
    33a0:	09 f0       	breq	.+2      	; 0x33a4 <vTaskPriorityDisinheritAfterTimeout+0x28>
    33a2:	4e c0       	rjmp	.+156    	; 0x3440 <vTaskPriorityDisinheritAfterTimeout+0xc4>
    33a4:	82 8f       	std	Z+26, r24	; 0x1a
    33a6:	46 85       	ldd	r20, Z+14	; 0x0e
    33a8:	57 85       	ldd	r21, Z+15	; 0x0f
    33aa:	60 89       	ldd	r22, Z+16	; 0x10
    33ac:	71 89       	ldd	r23, Z+17	; 0x11
    33ae:	77 23       	and	r23, r23
    33b0:	64 f0       	brlt	.+24     	; 0x33ca <vTaskPriorityDisinheritAfterTimeout+0x4e>
    33b2:	4a e0       	ldi	r20, 0x0A	; 10
    33b4:	50 e0       	ldi	r21, 0x00	; 0
    33b6:	60 e0       	ldi	r22, 0x00	; 0
    33b8:	70 e0       	ldi	r23, 0x00	; 0
    33ba:	48 1b       	sub	r20, r24
    33bc:	51 09       	sbc	r21, r1
    33be:	61 09       	sbc	r22, r1
    33c0:	71 09       	sbc	r23, r1
    33c2:	46 87       	std	Z+14, r20	; 0x0e
    33c4:	57 87       	std	Z+15, r21	; 0x0f
    33c6:	60 8b       	std	Z+16, r22	; 0x10
    33c8:	71 8b       	std	Z+17, r23	; 0x11
    33ca:	24 85       	ldd	r18, Z+12	; 0x0c
    33cc:	35 85       	ldd	r19, Z+13	; 0x0d
    33ce:	4b e0       	ldi	r20, 0x0B	; 11
    33d0:	94 9f       	mul	r25, r20
    33d2:	c0 01       	movw	r24, r0
    33d4:	11 24       	eor	r1, r1
    33d6:	8a 51       	subi	r24, 0x1A	; 26
    33d8:	9e 4e       	sbci	r25, 0xEE	; 238
    33da:	28 17       	cp	r18, r24
    33dc:	39 07       	cpc	r19, r25
    33de:	81 f5       	brne	.+96     	; 0x3440 <vTaskPriorityDisinheritAfterTimeout+0xc4>
    33e0:	ef 01       	movw	r28, r30
    33e2:	8f 01       	movw	r16, r30
    33e4:	0e 5f       	subi	r16, 0xFE	; 254
    33e6:	1f 4f       	sbci	r17, 0xFF	; 255
    33e8:	c8 01       	movw	r24, r16
    33ea:	0e 94 a3 08 	call	0x1146	; 0x1146 <uxListRemove>
    33ee:	ea 8d       	ldd	r30, Y+26	; 0x1a
    33f0:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    33f4:	8e 17       	cp	r24, r30
    33f6:	10 f4       	brcc	.+4      	; 0x33fc <vTaskPriorityDisinheritAfterTimeout+0x80>
    33f8:	e0 93 a4 11 	sts	0x11A4, r30	; 0x8011a4 <uxTopReadyPriority>
    33fc:	8b e0       	ldi	r24, 0x0B	; 11
    33fe:	8e 9f       	mul	r24, r30
    3400:	f0 01       	movw	r30, r0
    3402:	11 24       	eor	r1, r1
    3404:	ea 51       	subi	r30, 0x1A	; 26
    3406:	fe 4e       	sbci	r31, 0xEE	; 238
    3408:	01 80       	ldd	r0, Z+1	; 0x01
    340a:	f2 81       	ldd	r31, Z+2	; 0x02
    340c:	e0 2d       	mov	r30, r0
    340e:	ff 83       	std	Y+7, r31	; 0x07
    3410:	ee 83       	std	Y+6, r30	; 0x06
    3412:	26 81       	ldd	r18, Z+6	; 0x06
    3414:	37 81       	ldd	r19, Z+7	; 0x07
    3416:	39 87       	std	Y+9, r19	; 0x09
    3418:	28 87       	std	Y+8, r18	; 0x08
    341a:	a6 81       	ldd	r26, Z+6	; 0x06
    341c:	b7 81       	ldd	r27, Z+7	; 0x07
    341e:	15 96       	adiw	r26, 0x05	; 5
    3420:	1c 93       	st	X, r17
    3422:	0e 93       	st	-X, r16
    3424:	14 97       	sbiw	r26, 0x04	; 4
    3426:	17 83       	std	Z+7, r17	; 0x07
    3428:	06 83       	std	Z+6, r16	; 0x06
    342a:	ea 8d       	ldd	r30, Y+26	; 0x1a
    342c:	8e 9f       	mul	r24, r30
    342e:	f0 01       	movw	r30, r0
    3430:	11 24       	eor	r1, r1
    3432:	ea 51       	subi	r30, 0x1A	; 26
    3434:	fe 4e       	sbci	r31, 0xEE	; 238
    3436:	fd 87       	std	Y+13, r31	; 0x0d
    3438:	ec 87       	std	Y+12, r30	; 0x0c
    343a:	80 81       	ld	r24, Z
    343c:	8f 5f       	subi	r24, 0xFF	; 255
    343e:	80 83       	st	Z, r24
    3440:	df 91       	pop	r29
    3442:	cf 91       	pop	r28
    3444:	1f 91       	pop	r17
    3446:	0f 91       	pop	r16
    3448:	08 95       	ret

0000344a <uxTaskResetEventItemValue>:
    344a:	cf 92       	push	r12
    344c:	df 92       	push	r13
    344e:	ef 92       	push	r14
    3450:	ff 92       	push	r15
    3452:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    3456:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    345a:	66 85       	ldd	r22, Z+14	; 0x0e
    345c:	77 85       	ldd	r23, Z+15	; 0x0f
    345e:	80 89       	ldd	r24, Z+16	; 0x10
    3460:	91 89       	ldd	r25, Z+17	; 0x11
    3462:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    3466:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    346a:	a0 91 54 12 	lds	r26, 0x1254	; 0x801254 <pxCurrentTCB>
    346e:	b0 91 55 12 	lds	r27, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    3472:	5a 96       	adiw	r26, 0x1a	; 26
    3474:	2c 91       	ld	r18, X
    3476:	0f 2e       	mov	r0, r31
    3478:	fa e0       	ldi	r31, 0x0A	; 10
    347a:	cf 2e       	mov	r12, r31
    347c:	d1 2c       	mov	r13, r1
    347e:	e1 2c       	mov	r14, r1
    3480:	f1 2c       	mov	r15, r1
    3482:	f0 2d       	mov	r31, r0
    3484:	c2 1a       	sub	r12, r18
    3486:	d1 08       	sbc	r13, r1
    3488:	e1 08       	sbc	r14, r1
    348a:	f1 08       	sbc	r15, r1
    348c:	c6 86       	std	Z+14, r12	; 0x0e
    348e:	d7 86       	std	Z+15, r13	; 0x0f
    3490:	e0 8a       	std	Z+16, r14	; 0x10
    3492:	f1 8a       	std	Z+17, r15	; 0x11
    3494:	ff 90       	pop	r15
    3496:	ef 90       	pop	r14
    3498:	df 90       	pop	r13
    349a:	cf 90       	pop	r12
    349c:	08 95       	ret

0000349e <pvTaskIncrementMutexHeldCount>:
    349e:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    34a2:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    34a6:	89 2b       	or	r24, r25
    34a8:	39 f0       	breq	.+14     	; 0x34b8 <pvTaskIncrementMutexHeldCount+0x1a>
    34aa:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    34ae:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    34b2:	86 a5       	ldd	r24, Z+46	; 0x2e
    34b4:	8f 5f       	subi	r24, 0xFF	; 255
    34b6:	86 a7       	std	Z+46, r24	; 0x2e
    34b8:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    34bc:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    34c0:	08 95       	ret

000034c2 <xTaskGenericNotifyWait>:
    34c2:	4f 92       	push	r4
    34c4:	5f 92       	push	r5
    34c6:	6f 92       	push	r6
    34c8:	7f 92       	push	r7
    34ca:	af 92       	push	r10
    34cc:	bf 92       	push	r11
    34ce:	cf 92       	push	r12
    34d0:	df 92       	push	r13
    34d2:	ef 92       	push	r14
    34d4:	ff 92       	push	r15
    34d6:	0f 93       	push	r16
    34d8:	1f 93       	push	r17
    34da:	cf 93       	push	r28
    34dc:	df 93       	push	r29
    34de:	28 01       	movw	r4, r16
    34e0:	39 01       	movw	r6, r18
    34e2:	0f b6       	in	r0, 0x3f	; 63
    34e4:	f8 94       	cli
    34e6:	0f 92       	push	r0
    34e8:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    34ec:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    34f0:	c8 2f       	mov	r28, r24
    34f2:	d0 e0       	ldi	r29, 0x00	; 0
    34f4:	ec 0f       	add	r30, r28
    34f6:	fd 1f       	adc	r31, r29
    34f8:	83 a9       	ldd	r24, Z+51	; 0x33
    34fa:	82 30       	cpi	r24, 0x02	; 2
    34fc:	79 f1       	breq	.+94     	; 0x355c <xTaskGenericNotifyWait+0x9a>
    34fe:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    3502:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    3506:	ce 01       	movw	r24, r28
    3508:	88 0f       	add	r24, r24
    350a:	99 1f       	adc	r25, r25
    350c:	88 0f       	add	r24, r24
    350e:	99 1f       	adc	r25, r25
    3510:	e8 0f       	add	r30, r24
    3512:	f9 1f       	adc	r31, r25
    3514:	87 a5       	ldd	r24, Z+47	; 0x2f
    3516:	90 a9       	ldd	r25, Z+48	; 0x30
    3518:	a1 a9       	ldd	r26, Z+49	; 0x31
    351a:	b2 a9       	ldd	r27, Z+50	; 0x32
    351c:	40 95       	com	r20
    351e:	50 95       	com	r21
    3520:	60 95       	com	r22
    3522:	70 95       	com	r23
    3524:	48 23       	and	r20, r24
    3526:	59 23       	and	r21, r25
    3528:	6a 23       	and	r22, r26
    352a:	7b 23       	and	r23, r27
    352c:	47 a7       	std	Z+47, r20	; 0x2f
    352e:	50 ab       	std	Z+48, r21	; 0x30
    3530:	61 ab       	std	Z+49, r22	; 0x31
    3532:	72 ab       	std	Z+50, r23	; 0x32
    3534:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    3538:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    353c:	ec 0f       	add	r30, r28
    353e:	fd 1f       	adc	r31, r29
    3540:	81 e0       	ldi	r24, 0x01	; 1
    3542:	83 ab       	std	Z+51, r24	; 0x33
    3544:	a1 14       	cp	r10, r1
    3546:	b1 04       	cpc	r11, r1
    3548:	c1 04       	cpc	r12, r1
    354a:	d1 04       	cpc	r13, r1
    354c:	39 f0       	breq	.+14     	; 0x355c <xTaskGenericNotifyWait+0x9a>
    354e:	41 e0       	ldi	r20, 0x01	; 1
    3550:	c6 01       	movw	r24, r12
    3552:	b5 01       	movw	r22, r10
    3554:	0e 94 25 12 	call	0x244a	; 0x244a <prvAddCurrentTaskToDelayedList>
    3558:	0e 94 1f 09 	call	0x123e	; 0x123e <vPortYield>
    355c:	0f 90       	pop	r0
    355e:	0f be       	out	0x3f, r0	; 63
    3560:	0f b6       	in	r0, 0x3f	; 63
    3562:	f8 94       	cli
    3564:	0f 92       	push	r0
    3566:	e1 14       	cp	r14, r1
    3568:	f1 04       	cpc	r15, r1
    356a:	a1 f0       	breq	.+40     	; 0x3594 <xTaskGenericNotifyWait+0xd2>
    356c:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    3570:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    3574:	ce 01       	movw	r24, r28
    3576:	88 0f       	add	r24, r24
    3578:	99 1f       	adc	r25, r25
    357a:	88 0f       	add	r24, r24
    357c:	99 1f       	adc	r25, r25
    357e:	e8 0f       	add	r30, r24
    3580:	f9 1f       	adc	r31, r25
    3582:	87 a5       	ldd	r24, Z+47	; 0x2f
    3584:	90 a9       	ldd	r25, Z+48	; 0x30
    3586:	a1 a9       	ldd	r26, Z+49	; 0x31
    3588:	b2 a9       	ldd	r27, Z+50	; 0x32
    358a:	f7 01       	movw	r30, r14
    358c:	80 83       	st	Z, r24
    358e:	91 83       	std	Z+1, r25	; 0x01
    3590:	a2 83       	std	Z+2, r26	; 0x02
    3592:	b3 83       	std	Z+3, r27	; 0x03
    3594:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    3598:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    359c:	ec 0f       	add	r30, r28
    359e:	fd 1f       	adc	r31, r29
    35a0:	83 a9       	ldd	r24, Z+51	; 0x33
    35a2:	82 30       	cpi	r24, 0x02	; 2
    35a4:	e9 f4       	brne	.+58     	; 0x35e0 <xTaskGenericNotifyWait+0x11e>
    35a6:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    35aa:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    35ae:	ce 01       	movw	r24, r28
    35b0:	88 0f       	add	r24, r24
    35b2:	99 1f       	adc	r25, r25
    35b4:	88 0f       	add	r24, r24
    35b6:	99 1f       	adc	r25, r25
    35b8:	e8 0f       	add	r30, r24
    35ba:	f9 1f       	adc	r31, r25
    35bc:	87 a5       	ldd	r24, Z+47	; 0x2f
    35be:	90 a9       	ldd	r25, Z+48	; 0x30
    35c0:	a1 a9       	ldd	r26, Z+49	; 0x31
    35c2:	b2 a9       	ldd	r27, Z+50	; 0x32
    35c4:	40 94       	com	r4
    35c6:	50 94       	com	r5
    35c8:	60 94       	com	r6
    35ca:	70 94       	com	r7
    35cc:	48 22       	and	r4, r24
    35ce:	59 22       	and	r5, r25
    35d0:	6a 22       	and	r6, r26
    35d2:	7b 22       	and	r7, r27
    35d4:	47 a6       	std	Z+47, r4	; 0x2f
    35d6:	50 aa       	std	Z+48, r5	; 0x30
    35d8:	61 aa       	std	Z+49, r6	; 0x31
    35da:	72 aa       	std	Z+50, r7	; 0x32
    35dc:	81 e0       	ldi	r24, 0x01	; 1
    35de:	01 c0       	rjmp	.+2      	; 0x35e2 <xTaskGenericNotifyWait+0x120>
    35e0:	80 e0       	ldi	r24, 0x00	; 0
    35e2:	20 91 54 12 	lds	r18, 0x1254	; 0x801254 <pxCurrentTCB>
    35e6:	30 91 55 12 	lds	r19, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    35ea:	c2 0f       	add	r28, r18
    35ec:	d3 1f       	adc	r29, r19
    35ee:	1b aa       	std	Y+51, r1	; 0x33
    35f0:	0f 90       	pop	r0
    35f2:	0f be       	out	0x3f, r0	; 63
    35f4:	df 91       	pop	r29
    35f6:	cf 91       	pop	r28
    35f8:	1f 91       	pop	r17
    35fa:	0f 91       	pop	r16
    35fc:	ff 90       	pop	r15
    35fe:	ef 90       	pop	r14
    3600:	df 90       	pop	r13
    3602:	cf 90       	pop	r12
    3604:	bf 90       	pop	r11
    3606:	af 90       	pop	r10
    3608:	7f 90       	pop	r7
    360a:	6f 90       	pop	r6
    360c:	5f 90       	pop	r5
    360e:	4f 90       	pop	r4
    3610:	08 95       	ret

00003612 <xTaskGenericNotify>:
    3612:	8f 92       	push	r8
    3614:	9f 92       	push	r9
    3616:	af 92       	push	r10
    3618:	bf 92       	push	r11
    361a:	ef 92       	push	r14
    361c:	ff 92       	push	r15
    361e:	0f 93       	push	r16
    3620:	cf 93       	push	r28
    3622:	df 93       	push	r29
    3624:	dc 01       	movw	r26, r24
    3626:	0f b6       	in	r0, 0x3f	; 63
    3628:	f8 94       	cli
    362a:	0f 92       	push	r0
    362c:	e1 14       	cp	r14, r1
    362e:	f1 04       	cpc	r15, r1
    3630:	89 f0       	breq	.+34     	; 0x3654 <xTaskGenericNotify+0x42>
    3632:	e6 2f       	mov	r30, r22
    3634:	f0 e0       	ldi	r31, 0x00	; 0
    3636:	ee 0f       	add	r30, r30
    3638:	ff 1f       	adc	r31, r31
    363a:	ee 0f       	add	r30, r30
    363c:	ff 1f       	adc	r31, r31
    363e:	e8 0f       	add	r30, r24
    3640:	f9 1f       	adc	r31, r25
    3642:	87 a4       	ldd	r8, Z+47	; 0x2f
    3644:	90 a8       	ldd	r9, Z+48	; 0x30
    3646:	a1 a8       	ldd	r10, Z+49	; 0x31
    3648:	b2 a8       	ldd	r11, Z+50	; 0x32
    364a:	f7 01       	movw	r30, r14
    364c:	80 82       	st	Z, r8
    364e:	91 82       	std	Z+1, r9	; 0x01
    3650:	a2 82       	std	Z+2, r10	; 0x02
    3652:	b3 82       	std	Z+3, r11	; 0x03
    3654:	70 e0       	ldi	r23, 0x00	; 0
    3656:	fd 01       	movw	r30, r26
    3658:	e6 0f       	add	r30, r22
    365a:	f7 1f       	adc	r31, r23
    365c:	83 a9       	ldd	r24, Z+51	; 0x33
    365e:	92 e0       	ldi	r25, 0x02	; 2
    3660:	93 ab       	std	Z+51, r25	; 0x33
    3662:	02 30       	cpi	r16, 0x02	; 2
    3664:	01 f1       	breq	.+64     	; 0x36a6 <xTaskGenericNotify+0x94>
    3666:	18 f4       	brcc	.+6      	; 0x366e <xTaskGenericNotify+0x5c>
    3668:	01 30       	cpi	r16, 0x01	; 1
    366a:	31 f0       	breq	.+12     	; 0x3678 <xTaskGenericNotify+0x66>
    366c:	4d c0       	rjmp	.+154    	; 0x3708 <xTaskGenericNotify+0xf6>
    366e:	03 30       	cpi	r16, 0x03	; 3
    3670:	79 f1       	breq	.+94     	; 0x36d0 <xTaskGenericNotify+0xbe>
    3672:	04 30       	cpi	r16, 0x04	; 4
    3674:	d1 f1       	breq	.+116    	; 0x36ea <xTaskGenericNotify+0xd8>
    3676:	48 c0       	rjmp	.+144    	; 0x3708 <xTaskGenericNotify+0xf6>
    3678:	66 0f       	add	r22, r22
    367a:	77 1f       	adc	r23, r23
    367c:	66 0f       	add	r22, r22
    367e:	77 1f       	adc	r23, r23
    3680:	fd 01       	movw	r30, r26
    3682:	e6 0f       	add	r30, r22
    3684:	f7 1f       	adc	r31, r23
    3686:	87 a4       	ldd	r8, Z+47	; 0x2f
    3688:	90 a8       	ldd	r9, Z+48	; 0x30
    368a:	a1 a8       	ldd	r10, Z+49	; 0x31
    368c:	b2 a8       	ldd	r11, Z+50	; 0x32
    368e:	ba 01       	movw	r22, r20
    3690:	a9 01       	movw	r20, r18
    3692:	48 29       	or	r20, r8
    3694:	59 29       	or	r21, r9
    3696:	6a 29       	or	r22, r10
    3698:	7b 29       	or	r23, r11
    369a:	47 a7       	std	Z+47, r20	; 0x2f
    369c:	50 ab       	std	Z+48, r21	; 0x30
    369e:	61 ab       	std	Z+49, r22	; 0x31
    36a0:	72 ab       	std	Z+50, r23	; 0x32
    36a2:	01 e0       	ldi	r16, 0x01	; 1
    36a4:	34 c0       	rjmp	.+104    	; 0x370e <xTaskGenericNotify+0xfc>
    36a6:	66 0f       	add	r22, r22
    36a8:	77 1f       	adc	r23, r23
    36aa:	66 0f       	add	r22, r22
    36ac:	77 1f       	adc	r23, r23
    36ae:	fd 01       	movw	r30, r26
    36b0:	e6 0f       	add	r30, r22
    36b2:	f7 1f       	adc	r31, r23
    36b4:	47 a5       	ldd	r20, Z+47	; 0x2f
    36b6:	50 a9       	ldd	r21, Z+48	; 0x30
    36b8:	61 a9       	ldd	r22, Z+49	; 0x31
    36ba:	72 a9       	ldd	r23, Z+50	; 0x32
    36bc:	4f 5f       	subi	r20, 0xFF	; 255
    36be:	5f 4f       	sbci	r21, 0xFF	; 255
    36c0:	6f 4f       	sbci	r22, 0xFF	; 255
    36c2:	7f 4f       	sbci	r23, 0xFF	; 255
    36c4:	47 a7       	std	Z+47, r20	; 0x2f
    36c6:	50 ab       	std	Z+48, r21	; 0x30
    36c8:	61 ab       	std	Z+49, r22	; 0x31
    36ca:	72 ab       	std	Z+50, r23	; 0x32
    36cc:	01 e0       	ldi	r16, 0x01	; 1
    36ce:	1f c0       	rjmp	.+62     	; 0x370e <xTaskGenericNotify+0xfc>
    36d0:	66 0f       	add	r22, r22
    36d2:	77 1f       	adc	r23, r23
    36d4:	66 0f       	add	r22, r22
    36d6:	77 1f       	adc	r23, r23
    36d8:	fd 01       	movw	r30, r26
    36da:	e6 0f       	add	r30, r22
    36dc:	f7 1f       	adc	r31, r23
    36de:	27 a7       	std	Z+47, r18	; 0x2f
    36e0:	30 ab       	std	Z+48, r19	; 0x30
    36e2:	41 ab       	std	Z+49, r20	; 0x31
    36e4:	52 ab       	std	Z+50, r21	; 0x32
    36e6:	01 e0       	ldi	r16, 0x01	; 1
    36e8:	12 c0       	rjmp	.+36     	; 0x370e <xTaskGenericNotify+0xfc>
    36ea:	82 30       	cpi	r24, 0x02	; 2
    36ec:	79 f0       	breq	.+30     	; 0x370c <xTaskGenericNotify+0xfa>
    36ee:	66 0f       	add	r22, r22
    36f0:	77 1f       	adc	r23, r23
    36f2:	66 0f       	add	r22, r22
    36f4:	77 1f       	adc	r23, r23
    36f6:	fd 01       	movw	r30, r26
    36f8:	e6 0f       	add	r30, r22
    36fa:	f7 1f       	adc	r31, r23
    36fc:	27 a7       	std	Z+47, r18	; 0x2f
    36fe:	30 ab       	std	Z+48, r19	; 0x30
    3700:	41 ab       	std	Z+49, r20	; 0x31
    3702:	52 ab       	std	Z+50, r21	; 0x32
    3704:	01 e0       	ldi	r16, 0x01	; 1
    3706:	03 c0       	rjmp	.+6      	; 0x370e <xTaskGenericNotify+0xfc>
    3708:	01 e0       	ldi	r16, 0x01	; 1
    370a:	01 c0       	rjmp	.+2      	; 0x370e <xTaskGenericNotify+0xfc>
    370c:	00 e0       	ldi	r16, 0x00	; 0
    370e:	81 30       	cpi	r24, 0x01	; 1
    3710:	09 f0       	breq	.+2      	; 0x3714 <xTaskGenericNotify+0x102>
    3712:	69 c0       	rjmp	.+210    	; 0x37e6 <xTaskGenericNotify+0x1d4>
    3714:	1c 96       	adiw	r26, 0x0c	; 12
    3716:	ed 91       	ld	r30, X+
    3718:	fc 91       	ld	r31, X
    371a:	1d 97       	sbiw	r26, 0x0d	; 13
    371c:	16 96       	adiw	r26, 0x06	; 6
    371e:	cd 91       	ld	r28, X+
    3720:	dc 91       	ld	r29, X
    3722:	17 97       	sbiw	r26, 0x07	; 7
    3724:	18 96       	adiw	r26, 0x08	; 8
    3726:	8d 91       	ld	r24, X+
    3728:	9c 91       	ld	r25, X
    372a:	19 97       	sbiw	r26, 0x09	; 9
    372c:	9f 83       	std	Y+7, r25	; 0x07
    372e:	8e 83       	std	Y+6, r24	; 0x06
    3730:	18 96       	adiw	r26, 0x08	; 8
    3732:	cd 91       	ld	r28, X+
    3734:	dc 91       	ld	r29, X
    3736:	19 97       	sbiw	r26, 0x09	; 9
    3738:	16 96       	adiw	r26, 0x06	; 6
    373a:	8d 91       	ld	r24, X+
    373c:	9c 91       	ld	r25, X
    373e:	17 97       	sbiw	r26, 0x07	; 7
    3740:	9d 83       	std	Y+5, r25	; 0x05
    3742:	8c 83       	std	Y+4, r24	; 0x04
    3744:	81 81       	ldd	r24, Z+1	; 0x01
    3746:	92 81       	ldd	r25, Z+2	; 0x02
    3748:	9d 01       	movw	r18, r26
    374a:	2e 5f       	subi	r18, 0xFE	; 254
    374c:	3f 4f       	sbci	r19, 0xFF	; 255
    374e:	82 17       	cp	r24, r18
    3750:	93 07       	cpc	r25, r19
    3752:	31 f4       	brne	.+12     	; 0x3760 <xTaskGenericNotify+0x14e>
    3754:	18 96       	adiw	r26, 0x08	; 8
    3756:	8d 91       	ld	r24, X+
    3758:	9c 91       	ld	r25, X
    375a:	19 97       	sbiw	r26, 0x09	; 9
    375c:	92 83       	std	Z+2, r25	; 0x02
    375e:	81 83       	std	Z+1, r24	; 0x01
    3760:	1d 96       	adiw	r26, 0x0d	; 13
    3762:	1c 92       	st	X, r1
    3764:	1e 92       	st	-X, r1
    3766:	1c 97       	sbiw	r26, 0x0c	; 12
    3768:	80 81       	ld	r24, Z
    376a:	81 50       	subi	r24, 0x01	; 1
    376c:	80 83       	st	Z, r24
    376e:	5a 96       	adiw	r26, 0x1a	; 26
    3770:	ec 91       	ld	r30, X
    3772:	5a 97       	sbiw	r26, 0x1a	; 26
    3774:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    3778:	8e 17       	cp	r24, r30
    377a:	10 f4       	brcc	.+4      	; 0x3780 <xTaskGenericNotify+0x16e>
    377c:	e0 93 a4 11 	sts	0x11A4, r30	; 0x8011a4 <uxTopReadyPriority>
    3780:	8b e0       	ldi	r24, 0x0B	; 11
    3782:	8e 9f       	mul	r24, r30
    3784:	f0 01       	movw	r30, r0
    3786:	11 24       	eor	r1, r1
    3788:	ea 51       	subi	r30, 0x1A	; 26
    378a:	fe 4e       	sbci	r31, 0xEE	; 238
    378c:	01 80       	ldd	r0, Z+1	; 0x01
    378e:	f2 81       	ldd	r31, Z+2	; 0x02
    3790:	e0 2d       	mov	r30, r0
    3792:	17 96       	adiw	r26, 0x07	; 7
    3794:	fc 93       	st	X, r31
    3796:	ee 93       	st	-X, r30
    3798:	16 97       	sbiw	r26, 0x06	; 6
    379a:	46 81       	ldd	r20, Z+6	; 0x06
    379c:	57 81       	ldd	r21, Z+7	; 0x07
    379e:	19 96       	adiw	r26, 0x09	; 9
    37a0:	5c 93       	st	X, r21
    37a2:	4e 93       	st	-X, r20
    37a4:	18 97       	sbiw	r26, 0x08	; 8
    37a6:	c6 81       	ldd	r28, Z+6	; 0x06
    37a8:	d7 81       	ldd	r29, Z+7	; 0x07
    37aa:	3d 83       	std	Y+5, r19	; 0x05
    37ac:	2c 83       	std	Y+4, r18	; 0x04
    37ae:	37 83       	std	Z+7, r19	; 0x07
    37b0:	26 83       	std	Z+6, r18	; 0x06
    37b2:	5a 96       	adiw	r26, 0x1a	; 26
    37b4:	ec 91       	ld	r30, X
    37b6:	5a 97       	sbiw	r26, 0x1a	; 26
    37b8:	8e 9f       	mul	r24, r30
    37ba:	f0 01       	movw	r30, r0
    37bc:	11 24       	eor	r1, r1
    37be:	ea 51       	subi	r30, 0x1A	; 26
    37c0:	fe 4e       	sbci	r31, 0xEE	; 238
    37c2:	1d 96       	adiw	r26, 0x0d	; 13
    37c4:	fc 93       	st	X, r31
    37c6:	ee 93       	st	-X, r30
    37c8:	1c 97       	sbiw	r26, 0x0c	; 12
    37ca:	80 81       	ld	r24, Z
    37cc:	8f 5f       	subi	r24, 0xFF	; 255
    37ce:	80 83       	st	Z, r24
    37d0:	5a 96       	adiw	r26, 0x1a	; 26
    37d2:	9c 91       	ld	r25, X
    37d4:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    37d8:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    37dc:	82 8d       	ldd	r24, Z+26	; 0x1a
    37de:	89 17       	cp	r24, r25
    37e0:	10 f4       	brcc	.+4      	; 0x37e6 <xTaskGenericNotify+0x1d4>
    37e2:	0e 94 1f 09 	call	0x123e	; 0x123e <vPortYield>
    37e6:	0f 90       	pop	r0
    37e8:	0f be       	out	0x3f, r0	; 63
    37ea:	80 2f       	mov	r24, r16
    37ec:	df 91       	pop	r29
    37ee:	cf 91       	pop	r28
    37f0:	0f 91       	pop	r16
    37f2:	ff 90       	pop	r15
    37f4:	ef 90       	pop	r14
    37f6:	bf 90       	pop	r11
    37f8:	af 90       	pop	r10
    37fa:	9f 90       	pop	r9
    37fc:	8f 90       	pop	r8
    37fe:	08 95       	ret

00003800 <xTaskGenericNotifyFromISR>:
    3800:	8f 92       	push	r8
    3802:	9f 92       	push	r9
    3804:	af 92       	push	r10
    3806:	bf 92       	push	r11
    3808:	cf 92       	push	r12
    380a:	df 92       	push	r13
    380c:	ef 92       	push	r14
    380e:	ff 92       	push	r15
    3810:	0f 93       	push	r16
    3812:	cf 93       	push	r28
    3814:	df 93       	push	r29
    3816:	dc 01       	movw	r26, r24
    3818:	e1 14       	cp	r14, r1
    381a:	f1 04       	cpc	r15, r1
    381c:	89 f0       	breq	.+34     	; 0x3840 <xTaskGenericNotifyFromISR+0x40>
    381e:	e6 2f       	mov	r30, r22
    3820:	f0 e0       	ldi	r31, 0x00	; 0
    3822:	ee 0f       	add	r30, r30
    3824:	ff 1f       	adc	r31, r31
    3826:	ee 0f       	add	r30, r30
    3828:	ff 1f       	adc	r31, r31
    382a:	e8 0f       	add	r30, r24
    382c:	f9 1f       	adc	r31, r25
    382e:	87 a4       	ldd	r8, Z+47	; 0x2f
    3830:	90 a8       	ldd	r9, Z+48	; 0x30
    3832:	a1 a8       	ldd	r10, Z+49	; 0x31
    3834:	b2 a8       	ldd	r11, Z+50	; 0x32
    3836:	f7 01       	movw	r30, r14
    3838:	80 82       	st	Z, r8
    383a:	91 82       	std	Z+1, r9	; 0x01
    383c:	a2 82       	std	Z+2, r10	; 0x02
    383e:	b3 82       	std	Z+3, r11	; 0x03
    3840:	70 e0       	ldi	r23, 0x00	; 0
    3842:	fd 01       	movw	r30, r26
    3844:	e6 0f       	add	r30, r22
    3846:	f7 1f       	adc	r31, r23
    3848:	93 a9       	ldd	r25, Z+51	; 0x33
    384a:	82 e0       	ldi	r24, 0x02	; 2
    384c:	83 ab       	std	Z+51, r24	; 0x33
    384e:	02 30       	cpi	r16, 0x02	; 2
    3850:	01 f1       	breq	.+64     	; 0x3892 <xTaskGenericNotifyFromISR+0x92>
    3852:	18 f4       	brcc	.+6      	; 0x385a <xTaskGenericNotifyFromISR+0x5a>
    3854:	01 30       	cpi	r16, 0x01	; 1
    3856:	31 f0       	breq	.+12     	; 0x3864 <xTaskGenericNotifyFromISR+0x64>
    3858:	4d c0       	rjmp	.+154    	; 0x38f4 <xTaskGenericNotifyFromISR+0xf4>
    385a:	03 30       	cpi	r16, 0x03	; 3
    385c:	79 f1       	breq	.+94     	; 0x38bc <xTaskGenericNotifyFromISR+0xbc>
    385e:	04 30       	cpi	r16, 0x04	; 4
    3860:	d1 f1       	breq	.+116    	; 0x38d6 <xTaskGenericNotifyFromISR+0xd6>
    3862:	48 c0       	rjmp	.+144    	; 0x38f4 <xTaskGenericNotifyFromISR+0xf4>
    3864:	66 0f       	add	r22, r22
    3866:	77 1f       	adc	r23, r23
    3868:	66 0f       	add	r22, r22
    386a:	77 1f       	adc	r23, r23
    386c:	fd 01       	movw	r30, r26
    386e:	e6 0f       	add	r30, r22
    3870:	f7 1f       	adc	r31, r23
    3872:	87 a4       	ldd	r8, Z+47	; 0x2f
    3874:	90 a8       	ldd	r9, Z+48	; 0x30
    3876:	a1 a8       	ldd	r10, Z+49	; 0x31
    3878:	b2 a8       	ldd	r11, Z+50	; 0x32
    387a:	ba 01       	movw	r22, r20
    387c:	a9 01       	movw	r20, r18
    387e:	48 29       	or	r20, r8
    3880:	59 29       	or	r21, r9
    3882:	6a 29       	or	r22, r10
    3884:	7b 29       	or	r23, r11
    3886:	47 a7       	std	Z+47, r20	; 0x2f
    3888:	50 ab       	std	Z+48, r21	; 0x30
    388a:	61 ab       	std	Z+49, r22	; 0x31
    388c:	72 ab       	std	Z+50, r23	; 0x32
    388e:	81 e0       	ldi	r24, 0x01	; 1
    3890:	34 c0       	rjmp	.+104    	; 0x38fa <xTaskGenericNotifyFromISR+0xfa>
    3892:	66 0f       	add	r22, r22
    3894:	77 1f       	adc	r23, r23
    3896:	66 0f       	add	r22, r22
    3898:	77 1f       	adc	r23, r23
    389a:	fd 01       	movw	r30, r26
    389c:	e6 0f       	add	r30, r22
    389e:	f7 1f       	adc	r31, r23
    38a0:	47 a5       	ldd	r20, Z+47	; 0x2f
    38a2:	50 a9       	ldd	r21, Z+48	; 0x30
    38a4:	61 a9       	ldd	r22, Z+49	; 0x31
    38a6:	72 a9       	ldd	r23, Z+50	; 0x32
    38a8:	4f 5f       	subi	r20, 0xFF	; 255
    38aa:	5f 4f       	sbci	r21, 0xFF	; 255
    38ac:	6f 4f       	sbci	r22, 0xFF	; 255
    38ae:	7f 4f       	sbci	r23, 0xFF	; 255
    38b0:	47 a7       	std	Z+47, r20	; 0x2f
    38b2:	50 ab       	std	Z+48, r21	; 0x30
    38b4:	61 ab       	std	Z+49, r22	; 0x31
    38b6:	72 ab       	std	Z+50, r23	; 0x32
    38b8:	81 e0       	ldi	r24, 0x01	; 1
    38ba:	1f c0       	rjmp	.+62     	; 0x38fa <xTaskGenericNotifyFromISR+0xfa>
    38bc:	66 0f       	add	r22, r22
    38be:	77 1f       	adc	r23, r23
    38c0:	66 0f       	add	r22, r22
    38c2:	77 1f       	adc	r23, r23
    38c4:	fd 01       	movw	r30, r26
    38c6:	e6 0f       	add	r30, r22
    38c8:	f7 1f       	adc	r31, r23
    38ca:	27 a7       	std	Z+47, r18	; 0x2f
    38cc:	30 ab       	std	Z+48, r19	; 0x30
    38ce:	41 ab       	std	Z+49, r20	; 0x31
    38d0:	52 ab       	std	Z+50, r21	; 0x32
    38d2:	81 e0       	ldi	r24, 0x01	; 1
    38d4:	12 c0       	rjmp	.+36     	; 0x38fa <xTaskGenericNotifyFromISR+0xfa>
    38d6:	92 30       	cpi	r25, 0x02	; 2
    38d8:	79 f0       	breq	.+30     	; 0x38f8 <xTaskGenericNotifyFromISR+0xf8>
    38da:	66 0f       	add	r22, r22
    38dc:	77 1f       	adc	r23, r23
    38de:	66 0f       	add	r22, r22
    38e0:	77 1f       	adc	r23, r23
    38e2:	fd 01       	movw	r30, r26
    38e4:	e6 0f       	add	r30, r22
    38e6:	f7 1f       	adc	r31, r23
    38e8:	27 a7       	std	Z+47, r18	; 0x2f
    38ea:	30 ab       	std	Z+48, r19	; 0x30
    38ec:	41 ab       	std	Z+49, r20	; 0x31
    38ee:	52 ab       	std	Z+50, r21	; 0x32
    38f0:	81 e0       	ldi	r24, 0x01	; 1
    38f2:	03 c0       	rjmp	.+6      	; 0x38fa <xTaskGenericNotifyFromISR+0xfa>
    38f4:	81 e0       	ldi	r24, 0x01	; 1
    38f6:	01 c0       	rjmp	.+2      	; 0x38fa <xTaskGenericNotifyFromISR+0xfa>
    38f8:	80 e0       	ldi	r24, 0x00	; 0
    38fa:	91 30       	cpi	r25, 0x01	; 1
    38fc:	09 f0       	breq	.+2      	; 0x3900 <xTaskGenericNotifyFromISR+0x100>
    38fe:	96 c0       	rjmp	.+300    	; 0x3a2c <xTaskGenericNotifyFromISR+0x22c>
    3900:	90 91 95 11 	lds	r25, 0x1195	; 0x801195 <uxSchedulerSuspended>
    3904:	91 11       	cpse	r25, r1
    3906:	5f c0       	rjmp	.+190    	; 0x39c6 <xTaskGenericNotifyFromISR+0x1c6>
    3908:	1c 96       	adiw	r26, 0x0c	; 12
    390a:	ed 91       	ld	r30, X+
    390c:	fc 91       	ld	r31, X
    390e:	1d 97       	sbiw	r26, 0x0d	; 13
    3910:	16 96       	adiw	r26, 0x06	; 6
    3912:	cd 91       	ld	r28, X+
    3914:	dc 91       	ld	r29, X
    3916:	17 97       	sbiw	r26, 0x07	; 7
    3918:	18 96       	adiw	r26, 0x08	; 8
    391a:	2d 91       	ld	r18, X+
    391c:	3c 91       	ld	r19, X
    391e:	19 97       	sbiw	r26, 0x09	; 9
    3920:	3f 83       	std	Y+7, r19	; 0x07
    3922:	2e 83       	std	Y+6, r18	; 0x06
    3924:	18 96       	adiw	r26, 0x08	; 8
    3926:	cd 91       	ld	r28, X+
    3928:	dc 91       	ld	r29, X
    392a:	19 97       	sbiw	r26, 0x09	; 9
    392c:	16 96       	adiw	r26, 0x06	; 6
    392e:	2d 91       	ld	r18, X+
    3930:	3c 91       	ld	r19, X
    3932:	17 97       	sbiw	r26, 0x07	; 7
    3934:	3d 83       	std	Y+5, r19	; 0x05
    3936:	2c 83       	std	Y+4, r18	; 0x04
    3938:	41 81       	ldd	r20, Z+1	; 0x01
    393a:	52 81       	ldd	r21, Z+2	; 0x02
    393c:	9d 01       	movw	r18, r26
    393e:	2e 5f       	subi	r18, 0xFE	; 254
    3940:	3f 4f       	sbci	r19, 0xFF	; 255
    3942:	42 17       	cp	r20, r18
    3944:	53 07       	cpc	r21, r19
    3946:	31 f4       	brne	.+12     	; 0x3954 <xTaskGenericNotifyFromISR+0x154>
    3948:	18 96       	adiw	r26, 0x08	; 8
    394a:	4d 91       	ld	r20, X+
    394c:	5c 91       	ld	r21, X
    394e:	19 97       	sbiw	r26, 0x09	; 9
    3950:	52 83       	std	Z+2, r21	; 0x02
    3952:	41 83       	std	Z+1, r20	; 0x01
    3954:	1d 96       	adiw	r26, 0x0d	; 13
    3956:	1c 92       	st	X, r1
    3958:	1e 92       	st	-X, r1
    395a:	1c 97       	sbiw	r26, 0x0c	; 12
    395c:	90 81       	ld	r25, Z
    395e:	91 50       	subi	r25, 0x01	; 1
    3960:	90 83       	st	Z, r25
    3962:	5a 96       	adiw	r26, 0x1a	; 26
    3964:	ec 91       	ld	r30, X
    3966:	5a 97       	sbiw	r26, 0x1a	; 26
    3968:	90 91 a4 11 	lds	r25, 0x11A4	; 0x8011a4 <uxTopReadyPriority>
    396c:	9e 17       	cp	r25, r30
    396e:	10 f4       	brcc	.+4      	; 0x3974 <xTaskGenericNotifyFromISR+0x174>
    3970:	e0 93 a4 11 	sts	0x11A4, r30	; 0x8011a4 <uxTopReadyPriority>
    3974:	9b e0       	ldi	r25, 0x0B	; 11
    3976:	9e 9f       	mul	r25, r30
    3978:	f0 01       	movw	r30, r0
    397a:	11 24       	eor	r1, r1
    397c:	ea 51       	subi	r30, 0x1A	; 26
    397e:	fe 4e       	sbci	r31, 0xEE	; 238
    3980:	01 80       	ldd	r0, Z+1	; 0x01
    3982:	f2 81       	ldd	r31, Z+2	; 0x02
    3984:	e0 2d       	mov	r30, r0
    3986:	17 96       	adiw	r26, 0x07	; 7
    3988:	fc 93       	st	X, r31
    398a:	ee 93       	st	-X, r30
    398c:	16 97       	sbiw	r26, 0x06	; 6
    398e:	46 81       	ldd	r20, Z+6	; 0x06
    3990:	57 81       	ldd	r21, Z+7	; 0x07
    3992:	19 96       	adiw	r26, 0x09	; 9
    3994:	5c 93       	st	X, r21
    3996:	4e 93       	st	-X, r20
    3998:	18 97       	sbiw	r26, 0x08	; 8
    399a:	c6 81       	ldd	r28, Z+6	; 0x06
    399c:	d7 81       	ldd	r29, Z+7	; 0x07
    399e:	3d 83       	std	Y+5, r19	; 0x05
    39a0:	2c 83       	std	Y+4, r18	; 0x04
    39a2:	37 83       	std	Z+7, r19	; 0x07
    39a4:	26 83       	std	Z+6, r18	; 0x06
    39a6:	5a 96       	adiw	r26, 0x1a	; 26
    39a8:	ec 91       	ld	r30, X
    39aa:	5a 97       	sbiw	r26, 0x1a	; 26
    39ac:	9e 9f       	mul	r25, r30
    39ae:	f0 01       	movw	r30, r0
    39b0:	11 24       	eor	r1, r1
    39b2:	ea 51       	subi	r30, 0x1A	; 26
    39b4:	fe 4e       	sbci	r31, 0xEE	; 238
    39b6:	1d 96       	adiw	r26, 0x0d	; 13
    39b8:	fc 93       	st	X, r31
    39ba:	ee 93       	st	-X, r30
    39bc:	1c 97       	sbiw	r26, 0x0c	; 12
    39be:	90 81       	ld	r25, Z
    39c0:	9f 5f       	subi	r25, 0xFF	; 255
    39c2:	90 83       	st	Z, r25
    39c4:	21 c0       	rjmp	.+66     	; 0x3a08 <xTaskGenericNotifyFromISR+0x208>
    39c6:	61 ec       	ldi	r22, 0xC1	; 193
    39c8:	71 e1       	ldi	r23, 0x11	; 17
    39ca:	fb 01       	movw	r30, r22
    39cc:	c1 81       	ldd	r28, Z+1	; 0x01
    39ce:	d2 81       	ldd	r29, Z+2	; 0x02
    39d0:	53 96       	adiw	r26, 0x13	; 19
    39d2:	dc 93       	st	X, r29
    39d4:	ce 93       	st	-X, r28
    39d6:	52 97       	sbiw	r26, 0x12	; 18
    39d8:	2e 81       	ldd	r18, Y+6	; 0x06
    39da:	3f 81       	ldd	r19, Y+7	; 0x07
    39dc:	55 96       	adiw	r26, 0x15	; 21
    39de:	3c 93       	st	X, r19
    39e0:	2e 93       	st	-X, r18
    39e2:	54 97       	sbiw	r26, 0x14	; 20
    39e4:	4e 81       	ldd	r20, Y+6	; 0x06
    39e6:	5f 81       	ldd	r21, Y+7	; 0x07
    39e8:	9d 01       	movw	r18, r26
    39ea:	22 5f       	subi	r18, 0xF2	; 242
    39ec:	3f 4f       	sbci	r19, 0xFF	; 255
    39ee:	fa 01       	movw	r30, r20
    39f0:	35 83       	std	Z+5, r19	; 0x05
    39f2:	24 83       	std	Z+4, r18	; 0x04
    39f4:	3f 83       	std	Y+7, r19	; 0x07
    39f6:	2e 83       	std	Y+6, r18	; 0x06
    39f8:	59 96       	adiw	r26, 0x19	; 25
    39fa:	7c 93       	st	X, r23
    39fc:	6e 93       	st	-X, r22
    39fe:	58 97       	sbiw	r26, 0x18	; 24
    3a00:	fb 01       	movw	r30, r22
    3a02:	90 81       	ld	r25, Z
    3a04:	9f 5f       	subi	r25, 0xFF	; 255
    3a06:	90 83       	st	Z, r25
    3a08:	5a 96       	adiw	r26, 0x1a	; 26
    3a0a:	2c 91       	ld	r18, X
    3a0c:	e0 91 54 12 	lds	r30, 0x1254	; 0x801254 <pxCurrentTCB>
    3a10:	f0 91 55 12 	lds	r31, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    3a14:	92 8d       	ldd	r25, Z+26	; 0x1a
    3a16:	92 17       	cp	r25, r18
    3a18:	48 f4       	brcc	.+18     	; 0x3a2c <xTaskGenericNotifyFromISR+0x22c>
    3a1a:	c1 14       	cp	r12, r1
    3a1c:	d1 04       	cpc	r13, r1
    3a1e:	19 f0       	breq	.+6      	; 0x3a26 <xTaskGenericNotifyFromISR+0x226>
    3a20:	91 e0       	ldi	r25, 0x01	; 1
    3a22:	f6 01       	movw	r30, r12
    3a24:	90 83       	st	Z, r25
    3a26:	91 e0       	ldi	r25, 0x01	; 1
    3a28:	90 93 9e 11 	sts	0x119E, r25	; 0x80119e <xYieldPending>
    3a2c:	df 91       	pop	r29
    3a2e:	cf 91       	pop	r28
    3a30:	0f 91       	pop	r16
    3a32:	ff 90       	pop	r15
    3a34:	ef 90       	pop	r14
    3a36:	df 90       	pop	r13
    3a38:	cf 90       	pop	r12
    3a3a:	bf 90       	pop	r11
    3a3c:	af 90       	pop	r10
    3a3e:	9f 90       	pop	r9
    3a40:	8f 90       	pop	r8
    3a42:	08 95       	ret

00003a44 <xTaskGenericNotifyStateClear>:
    3a44:	00 97       	sbiw	r24, 0x00	; 0
    3a46:	21 f4       	brne	.+8      	; 0x3a50 <xTaskGenericNotifyStateClear+0xc>
    3a48:	80 91 54 12 	lds	r24, 0x1254	; 0x801254 <pxCurrentTCB>
    3a4c:	90 91 55 12 	lds	r25, 0x1255	; 0x801255 <pxCurrentTCB+0x1>
    3a50:	0f b6       	in	r0, 0x3f	; 63
    3a52:	f8 94       	cli
    3a54:	0f 92       	push	r0
    3a56:	70 e0       	ldi	r23, 0x00	; 0
    3a58:	fc 01       	movw	r30, r24
    3a5a:	e6 0f       	add	r30, r22
    3a5c:	f7 1f       	adc	r31, r23
    3a5e:	23 a9       	ldd	r18, Z+51	; 0x33
    3a60:	22 30       	cpi	r18, 0x02	; 2
    3a62:	31 f4       	brne	.+12     	; 0x3a70 <xTaskGenericNotifyStateClear+0x2c>
    3a64:	fc 01       	movw	r30, r24
    3a66:	e6 0f       	add	r30, r22
    3a68:	f7 1f       	adc	r31, r23
    3a6a:	13 aa       	std	Z+51, r1	; 0x33
    3a6c:	81 e0       	ldi	r24, 0x01	; 1
    3a6e:	01 c0       	rjmp	.+2      	; 0x3a72 <xTaskGenericNotifyStateClear+0x2e>
    3a70:	80 e0       	ldi	r24, 0x00	; 0
    3a72:	0f 90       	pop	r0
    3a74:	0f be       	out	0x3f, r0	; 63
    3a76:	08 95       	ret

00003a78 <prvGetNextExpireTime>:
    3a78:	dc 01       	movw	r26, r24
    3a7a:	e0 91 60 12 	lds	r30, 0x1260	; 0x801260 <pxCurrentTimerList>
    3a7e:	f0 91 61 12 	lds	r31, 0x1261	; 0x801261 <pxCurrentTimerList+0x1>
    3a82:	80 81       	ld	r24, Z
    3a84:	91 e0       	ldi	r25, 0x01	; 1
    3a86:	81 11       	cpse	r24, r1
    3a88:	90 e0       	ldi	r25, 0x00	; 0
    3a8a:	9c 93       	st	X, r25
    3a8c:	91 11       	cpse	r25, r1
    3a8e:	08 c0       	rjmp	.+16     	; 0x3aa0 <prvGetNextExpireTime+0x28>
    3a90:	07 80       	ldd	r0, Z+7	; 0x07
    3a92:	f0 85       	ldd	r31, Z+8	; 0x08
    3a94:	e0 2d       	mov	r30, r0
    3a96:	60 81       	ld	r22, Z
    3a98:	71 81       	ldd	r23, Z+1	; 0x01
    3a9a:	82 81       	ldd	r24, Z+2	; 0x02
    3a9c:	93 81       	ldd	r25, Z+3	; 0x03
    3a9e:	08 95       	ret
    3aa0:	60 e0       	ldi	r22, 0x00	; 0
    3aa2:	70 e0       	ldi	r23, 0x00	; 0
    3aa4:	cb 01       	movw	r24, r22
    3aa6:	08 95       	ret

00003aa8 <prvInsertTimerInActiveList>:
    3aa8:	cf 92       	push	r12
    3aaa:	df 92       	push	r13
    3aac:	ef 92       	push	r14
    3aae:	ff 92       	push	r15
    3ab0:	0f 93       	push	r16
    3ab2:	1f 93       	push	r17
    3ab4:	fc 01       	movw	r30, r24
    3ab6:	42 83       	std	Z+2, r20	; 0x02
    3ab8:	53 83       	std	Z+3, r21	; 0x03
    3aba:	64 83       	std	Z+4, r22	; 0x04
    3abc:	75 83       	std	Z+5, r23	; 0x05
    3abe:	93 87       	std	Z+11, r25	; 0x0b
    3ac0:	82 87       	std	Z+10, r24	; 0x0a
    3ac2:	04 17       	cp	r16, r20
    3ac4:	15 07       	cpc	r17, r21
    3ac6:	26 07       	cpc	r18, r22
    3ac8:	37 07       	cpc	r19, r23
    3aca:	c0 f0       	brcs	.+48     	; 0x3afc <prvInsertTimerInActiveList+0x54>
    3acc:	0c 19       	sub	r16, r12
    3ace:	1d 09       	sbc	r17, r13
    3ad0:	2e 09       	sbc	r18, r14
    3ad2:	3f 09       	sbc	r19, r15
    3ad4:	86 85       	ldd	r24, Z+14	; 0x0e
    3ad6:	97 85       	ldd	r25, Z+15	; 0x0f
    3ad8:	a0 89       	ldd	r26, Z+16	; 0x10
    3ada:	b1 89       	ldd	r27, Z+17	; 0x11
    3adc:	08 17       	cp	r16, r24
    3ade:	19 07       	cpc	r17, r25
    3ae0:	2a 07       	cpc	r18, r26
    3ae2:	3b 07       	cpc	r19, r27
    3ae4:	00 f5       	brcc	.+64     	; 0x3b26 <prvInsertTimerInActiveList+0x7e>
    3ae6:	bf 01       	movw	r22, r30
    3ae8:	6e 5f       	subi	r22, 0xFE	; 254
    3aea:	7f 4f       	sbci	r23, 0xFF	; 255
    3aec:	80 91 5e 12 	lds	r24, 0x125E	; 0x80125e <pxOverflowTimerList>
    3af0:	90 91 5f 12 	lds	r25, 0x125F	; 0x80125f <pxOverflowTimerList+0x1>
    3af4:	0e 94 66 08 	call	0x10cc	; 0x10cc <vListInsert>
    3af8:	80 e0       	ldi	r24, 0x00	; 0
    3afa:	18 c0       	rjmp	.+48     	; 0x3b2c <prvInsertTimerInActiveList+0x84>
    3afc:	0c 15       	cp	r16, r12
    3afe:	1d 05       	cpc	r17, r13
    3b00:	2e 05       	cpc	r18, r14
    3b02:	3f 05       	cpc	r19, r15
    3b04:	28 f4       	brcc	.+10     	; 0x3b10 <prvInsertTimerInActiveList+0x68>
    3b06:	4c 15       	cp	r20, r12
    3b08:	5d 05       	cpc	r21, r13
    3b0a:	6e 05       	cpc	r22, r14
    3b0c:	7f 05       	cpc	r23, r15
    3b0e:	68 f4       	brcc	.+26     	; 0x3b2a <prvInsertTimerInActiveList+0x82>
    3b10:	bf 01       	movw	r22, r30
    3b12:	6e 5f       	subi	r22, 0xFE	; 254
    3b14:	7f 4f       	sbci	r23, 0xFF	; 255
    3b16:	80 91 60 12 	lds	r24, 0x1260	; 0x801260 <pxCurrentTimerList>
    3b1a:	90 91 61 12 	lds	r25, 0x1261	; 0x801261 <pxCurrentTimerList+0x1>
    3b1e:	0e 94 66 08 	call	0x10cc	; 0x10cc <vListInsert>
    3b22:	80 e0       	ldi	r24, 0x00	; 0
    3b24:	03 c0       	rjmp	.+6      	; 0x3b2c <prvInsertTimerInActiveList+0x84>
    3b26:	81 e0       	ldi	r24, 0x01	; 1
    3b28:	01 c0       	rjmp	.+2      	; 0x3b2c <prvInsertTimerInActiveList+0x84>
    3b2a:	81 e0       	ldi	r24, 0x01	; 1
    3b2c:	1f 91       	pop	r17
    3b2e:	0f 91       	pop	r16
    3b30:	ff 90       	pop	r15
    3b32:	ef 90       	pop	r14
    3b34:	df 90       	pop	r13
    3b36:	cf 90       	pop	r12
    3b38:	08 95       	ret

00003b3a <prvCheckForValidListAndQueue>:
    3b3a:	0f b6       	in	r0, 0x3f	; 63
    3b3c:	f8 94       	cli
    3b3e:	0f 92       	push	r0
    3b40:	80 91 5c 12 	lds	r24, 0x125C	; 0x80125c <xTimerQueue>
    3b44:	90 91 5d 12 	lds	r25, 0x125D	; 0x80125d <xTimerQueue+0x1>
    3b48:	89 2b       	or	r24, r25
    3b4a:	e9 f4       	brne	.+58     	; 0x3b86 <prvCheckForValidListAndQueue+0x4c>
    3b4c:	8d e6       	ldi	r24, 0x6D	; 109
    3b4e:	92 e1       	ldi	r25, 0x12	; 18
    3b50:	0e 94 51 08 	call	0x10a2	; 0x10a2 <vListInitialise>
    3b54:	82 e6       	ldi	r24, 0x62	; 98
    3b56:	92 e1       	ldi	r25, 0x12	; 18
    3b58:	0e 94 51 08 	call	0x10a2	; 0x10a2 <vListInitialise>
    3b5c:	8d e6       	ldi	r24, 0x6D	; 109
    3b5e:	92 e1       	ldi	r25, 0x12	; 18
    3b60:	90 93 61 12 	sts	0x1261, r25	; 0x801261 <pxCurrentTimerList+0x1>
    3b64:	80 93 60 12 	sts	0x1260, r24	; 0x801260 <pxCurrentTimerList>
    3b68:	82 e6       	ldi	r24, 0x62	; 98
    3b6a:	92 e1       	ldi	r25, 0x12	; 18
    3b6c:	90 93 5f 12 	sts	0x125F, r25	; 0x80125f <pxOverflowTimerList+0x1>
    3b70:	80 93 5e 12 	sts	0x125E, r24	; 0x80125e <pxOverflowTimerList>
    3b74:	40 e0       	ldi	r20, 0x00	; 0
    3b76:	67 e0       	ldi	r22, 0x07	; 7
    3b78:	8a e0       	ldi	r24, 0x0A	; 10
    3b7a:	0e 94 14 0b 	call	0x1628	; 0x1628 <xQueueGenericCreate>
    3b7e:	90 93 5d 12 	sts	0x125D, r25	; 0x80125d <xTimerQueue+0x1>
    3b82:	80 93 5c 12 	sts	0x125C, r24	; 0x80125c <xTimerQueue>
    3b86:	0f 90       	pop	r0
    3b88:	0f be       	out	0x3f, r0	; 63
    3b8a:	08 95       	ret

00003b8c <xTimerCreateTimerTask>:
    3b8c:	ef 92       	push	r14
    3b8e:	ff 92       	push	r15
    3b90:	0f 93       	push	r16
    3b92:	d3 df       	rcall	.-90     	; 0x3b3a <prvCheckForValidListAndQueue>
    3b94:	80 91 5c 12 	lds	r24, 0x125C	; 0x80125c <xTimerQueue>
    3b98:	90 91 5d 12 	lds	r25, 0x125D	; 0x80125d <xTimerQueue+0x1>
    3b9c:	89 2b       	or	r24, r25
    3b9e:	91 f0       	breq	.+36     	; 0x3bc4 <xTimerCreateTimerTask+0x38>
    3ba0:	0f 2e       	mov	r0, r31
    3ba2:	fa e5       	ldi	r31, 0x5A	; 90
    3ba4:	ef 2e       	mov	r14, r31
    3ba6:	f2 e1       	ldi	r31, 0x12	; 18
    3ba8:	ff 2e       	mov	r15, r31
    3baa:	f0 2d       	mov	r31, r0
    3bac:	03 e0       	ldi	r16, 0x03	; 3
    3bae:	20 e0       	ldi	r18, 0x00	; 0
    3bb0:	30 e0       	ldi	r19, 0x00	; 0
    3bb2:	40 ec       	ldi	r20, 0xC0	; 192
    3bb4:	50 e0       	ldi	r21, 0x00	; 0
    3bb6:	65 e3       	ldi	r22, 0x35	; 53
    3bb8:	74 e0       	ldi	r23, 0x04	; 4
    3bba:	88 ed       	ldi	r24, 0xD8	; 216
    3bbc:	90 e0       	ldi	r25, 0x00	; 0
    3bbe:	0e 94 c7 12 	call	0x258e	; 0x258e <xTaskCreate>
    3bc2:	01 c0       	rjmp	.+2      	; 0x3bc6 <xTimerCreateTimerTask+0x3a>
    3bc4:	80 e0       	ldi	r24, 0x00	; 0
    3bc6:	0f 91       	pop	r16
    3bc8:	ff 90       	pop	r15
    3bca:	ef 90       	pop	r14
    3bcc:	08 95       	ret

00003bce <xTimerGenericCommand>:
    3bce:	8f 92       	push	r8
    3bd0:	9f 92       	push	r9
    3bd2:	af 92       	push	r10
    3bd4:	bf 92       	push	r11
    3bd6:	cf 92       	push	r12
    3bd8:	df 92       	push	r13
    3bda:	ef 92       	push	r14
    3bdc:	ff 92       	push	r15
    3bde:	0f 93       	push	r16
    3be0:	1f 93       	push	r17
    3be2:	cf 93       	push	r28
    3be4:	df 93       	push	r29
    3be6:	cd b7       	in	r28, 0x3d	; 61
    3be8:	de b7       	in	r29, 0x3e	; 62
    3bea:	27 97       	sbiw	r28, 0x07	; 7
    3bec:	0f b6       	in	r0, 0x3f	; 63
    3bee:	f8 94       	cli
    3bf0:	de bf       	out	0x3e, r29	; 62
    3bf2:	0f be       	out	0x3f, r0	; 63
    3bf4:	cd bf       	out	0x3d, r28	; 61
    3bf6:	e0 91 5c 12 	lds	r30, 0x125C	; 0x80125c <xTimerQueue>
    3bfa:	f0 91 5d 12 	lds	r31, 0x125D	; 0x80125d <xTimerQueue+0x1>
    3bfe:	30 97       	sbiw	r30, 0x00	; 0
    3c00:	81 f1       	breq	.+96     	; 0x3c62 <xTimerGenericCommand+0x94>
    3c02:	69 83       	std	Y+1, r22	; 0x01
    3c04:	2a 83       	std	Y+2, r18	; 0x02
    3c06:	3b 83       	std	Y+3, r19	; 0x03
    3c08:	4c 83       	std	Y+4, r20	; 0x04
    3c0a:	5d 83       	std	Y+5, r21	; 0x05
    3c0c:	9f 83       	std	Y+7, r25	; 0x07
    3c0e:	8e 83       	std	Y+6, r24	; 0x06
    3c10:	66 30       	cpi	r22, 0x06	; 6
    3c12:	f4 f4       	brge	.+60     	; 0x3c50 <xTimerGenericCommand+0x82>
    3c14:	c3 da       	rcall	.-2682   	; 0x319c <xTaskGetSchedulerState>
    3c16:	82 30       	cpi	r24, 0x02	; 2
    3c18:	69 f4       	brne	.+26     	; 0x3c34 <xTimerGenericCommand+0x66>
    3c1a:	00 e0       	ldi	r16, 0x00	; 0
    3c1c:	a7 01       	movw	r20, r14
    3c1e:	96 01       	movw	r18, r12
    3c20:	be 01       	movw	r22, r28
    3c22:	6f 5f       	subi	r22, 0xFF	; 255
    3c24:	7f 4f       	sbci	r23, 0xFF	; 255
    3c26:	80 91 5c 12 	lds	r24, 0x125C	; 0x80125c <xTimerQueue>
    3c2a:	90 91 5d 12 	lds	r25, 0x125D	; 0x80125d <xTimerQueue+0x1>
    3c2e:	0e 94 37 0b 	call	0x166e	; 0x166e <xQueueGenericSend>
    3c32:	18 c0       	rjmp	.+48     	; 0x3c64 <xTimerGenericCommand+0x96>
    3c34:	00 e0       	ldi	r16, 0x00	; 0
    3c36:	20 e0       	ldi	r18, 0x00	; 0
    3c38:	30 e0       	ldi	r19, 0x00	; 0
    3c3a:	a9 01       	movw	r20, r18
    3c3c:	be 01       	movw	r22, r28
    3c3e:	6f 5f       	subi	r22, 0xFF	; 255
    3c40:	7f 4f       	sbci	r23, 0xFF	; 255
    3c42:	80 91 5c 12 	lds	r24, 0x125C	; 0x80125c <xTimerQueue>
    3c46:	90 91 5d 12 	lds	r25, 0x125D	; 0x80125d <xTimerQueue+0x1>
    3c4a:	0e 94 37 0b 	call	0x166e	; 0x166e <xQueueGenericSend>
    3c4e:	0a c0       	rjmp	.+20     	; 0x3c64 <xTimerGenericCommand+0x96>
    3c50:	20 e0       	ldi	r18, 0x00	; 0
    3c52:	a8 01       	movw	r20, r16
    3c54:	be 01       	movw	r22, r28
    3c56:	6f 5f       	subi	r22, 0xFF	; 255
    3c58:	7f 4f       	sbci	r23, 0xFF	; 255
    3c5a:	cf 01       	movw	r24, r30
    3c5c:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <xQueueGenericSendFromISR>
    3c60:	01 c0       	rjmp	.+2      	; 0x3c64 <xTimerGenericCommand+0x96>
    3c62:	80 e0       	ldi	r24, 0x00	; 0
    3c64:	27 96       	adiw	r28, 0x07	; 7
    3c66:	0f b6       	in	r0, 0x3f	; 63
    3c68:	f8 94       	cli
    3c6a:	de bf       	out	0x3e, r29	; 62
    3c6c:	0f be       	out	0x3f, r0	; 63
    3c6e:	cd bf       	out	0x3d, r28	; 61
    3c70:	df 91       	pop	r29
    3c72:	cf 91       	pop	r28
    3c74:	1f 91       	pop	r17
    3c76:	0f 91       	pop	r16
    3c78:	ff 90       	pop	r15
    3c7a:	ef 90       	pop	r14
    3c7c:	df 90       	pop	r13
    3c7e:	cf 90       	pop	r12
    3c80:	bf 90       	pop	r11
    3c82:	af 90       	pop	r10
    3c84:	9f 90       	pop	r9
    3c86:	8f 90       	pop	r8
    3c88:	08 95       	ret

00003c8a <prvSwitchTimerLists>:
    3c8a:	8f 92       	push	r8
    3c8c:	9f 92       	push	r9
    3c8e:	af 92       	push	r10
    3c90:	bf 92       	push	r11
    3c92:	cf 92       	push	r12
    3c94:	df 92       	push	r13
    3c96:	ef 92       	push	r14
    3c98:	ff 92       	push	r15
    3c9a:	0f 93       	push	r16
    3c9c:	1f 93       	push	r17
    3c9e:	cf 93       	push	r28
    3ca0:	df 93       	push	r29
    3ca2:	3b c0       	rjmp	.+118    	; 0x3d1a <prvSwitchTimerLists+0x90>
    3ca4:	07 80       	ldd	r0, Z+7	; 0x07
    3ca6:	f0 85       	ldd	r31, Z+8	; 0x08
    3ca8:	e0 2d       	mov	r30, r0
    3caa:	80 80       	ld	r8, Z
    3cac:	91 80       	ldd	r9, Z+1	; 0x01
    3cae:	a2 80       	ldd	r10, Z+2	; 0x02
    3cb0:	b3 80       	ldd	r11, Z+3	; 0x03
    3cb2:	c0 85       	ldd	r28, Z+8	; 0x08
    3cb4:	d1 85       	ldd	r29, Z+9	; 0x09
    3cb6:	8e 01       	movw	r16, r28
    3cb8:	0e 5f       	subi	r16, 0xFE	; 254
    3cba:	1f 4f       	sbci	r17, 0xFF	; 255
    3cbc:	c8 01       	movw	r24, r16
    3cbe:	0e 94 a3 08 	call	0x1146	; 0x1146 <uxListRemove>
    3cc2:	ec 89       	ldd	r30, Y+20	; 0x14
    3cc4:	fd 89       	ldd	r31, Y+21	; 0x15
    3cc6:	ce 01       	movw	r24, r28
    3cc8:	19 95       	eicall
    3cca:	8e 89       	ldd	r24, Y+22	; 0x16
    3ccc:	82 ff       	sbrs	r24, 2
    3cce:	25 c0       	rjmp	.+74     	; 0x3d1a <prvSwitchTimerLists+0x90>
    3cd0:	8e 85       	ldd	r24, Y+14	; 0x0e
    3cd2:	9f 85       	ldd	r25, Y+15	; 0x0f
    3cd4:	a8 89       	ldd	r26, Y+16	; 0x10
    3cd6:	b9 89       	ldd	r27, Y+17	; 0x11
    3cd8:	88 0d       	add	r24, r8
    3cda:	99 1d       	adc	r25, r9
    3cdc:	aa 1d       	adc	r26, r10
    3cde:	bb 1d       	adc	r27, r11
    3ce0:	88 16       	cp	r8, r24
    3ce2:	99 06       	cpc	r9, r25
    3ce4:	aa 06       	cpc	r10, r26
    3ce6:	bb 06       	cpc	r11, r27
    3ce8:	70 f4       	brcc	.+28     	; 0x3d06 <prvSwitchTimerLists+0x7c>
    3cea:	8a 83       	std	Y+2, r24	; 0x02
    3cec:	9b 83       	std	Y+3, r25	; 0x03
    3cee:	ac 83       	std	Y+4, r26	; 0x04
    3cf0:	bd 83       	std	Y+5, r27	; 0x05
    3cf2:	db 87       	std	Y+11, r29	; 0x0b
    3cf4:	ca 87       	std	Y+10, r28	; 0x0a
    3cf6:	b8 01       	movw	r22, r16
    3cf8:	80 91 60 12 	lds	r24, 0x1260	; 0x801260 <pxCurrentTimerList>
    3cfc:	90 91 61 12 	lds	r25, 0x1261	; 0x801261 <pxCurrentTimerList+0x1>
    3d00:	0e 94 66 08 	call	0x10cc	; 0x10cc <vListInsert>
    3d04:	0a c0       	rjmp	.+20     	; 0x3d1a <prvSwitchTimerLists+0x90>
    3d06:	c1 2c       	mov	r12, r1
    3d08:	d1 2c       	mov	r13, r1
    3d0a:	76 01       	movw	r14, r12
    3d0c:	00 e0       	ldi	r16, 0x00	; 0
    3d0e:	10 e0       	ldi	r17, 0x00	; 0
    3d10:	a5 01       	movw	r20, r10
    3d12:	94 01       	movw	r18, r8
    3d14:	60 e0       	ldi	r22, 0x00	; 0
    3d16:	ce 01       	movw	r24, r28
    3d18:	5a df       	rcall	.-332    	; 0x3bce <xTimerGenericCommand>
    3d1a:	e0 91 60 12 	lds	r30, 0x1260	; 0x801260 <pxCurrentTimerList>
    3d1e:	f0 91 61 12 	lds	r31, 0x1261	; 0x801261 <pxCurrentTimerList+0x1>
    3d22:	80 81       	ld	r24, Z
    3d24:	81 11       	cpse	r24, r1
    3d26:	be cf       	rjmp	.-132    	; 0x3ca4 <prvSwitchTimerLists+0x1a>
    3d28:	80 91 5e 12 	lds	r24, 0x125E	; 0x80125e <pxOverflowTimerList>
    3d2c:	90 91 5f 12 	lds	r25, 0x125F	; 0x80125f <pxOverflowTimerList+0x1>
    3d30:	90 93 61 12 	sts	0x1261, r25	; 0x801261 <pxCurrentTimerList+0x1>
    3d34:	80 93 60 12 	sts	0x1260, r24	; 0x801260 <pxCurrentTimerList>
    3d38:	f0 93 5f 12 	sts	0x125F, r31	; 0x80125f <pxOverflowTimerList+0x1>
    3d3c:	e0 93 5e 12 	sts	0x125E, r30	; 0x80125e <pxOverflowTimerList>
    3d40:	df 91       	pop	r29
    3d42:	cf 91       	pop	r28
    3d44:	1f 91       	pop	r17
    3d46:	0f 91       	pop	r16
    3d48:	ff 90       	pop	r15
    3d4a:	ef 90       	pop	r14
    3d4c:	df 90       	pop	r13
    3d4e:	cf 90       	pop	r12
    3d50:	bf 90       	pop	r11
    3d52:	af 90       	pop	r10
    3d54:	9f 90       	pop	r9
    3d56:	8f 90       	pop	r8
    3d58:	08 95       	ret

00003d5a <prvSampleTimeNow>:
    3d5a:	cf 92       	push	r12
    3d5c:	df 92       	push	r13
    3d5e:	ef 92       	push	r14
    3d60:	ff 92       	push	r15
    3d62:	cf 93       	push	r28
    3d64:	df 93       	push	r29
    3d66:	ec 01       	movw	r28, r24
    3d68:	0e 94 51 13 	call	0x26a2	; 0x26a2 <xTaskGetTickCount>
    3d6c:	6b 01       	movw	r12, r22
    3d6e:	7c 01       	movw	r14, r24
    3d70:	80 91 56 12 	lds	r24, 0x1256	; 0x801256 <xLastTime.2436>
    3d74:	90 91 57 12 	lds	r25, 0x1257	; 0x801257 <xLastTime.2436+0x1>
    3d78:	a0 91 58 12 	lds	r26, 0x1258	; 0x801258 <xLastTime.2436+0x2>
    3d7c:	b0 91 59 12 	lds	r27, 0x1259	; 0x801259 <xLastTime.2436+0x3>
    3d80:	c8 16       	cp	r12, r24
    3d82:	d9 06       	cpc	r13, r25
    3d84:	ea 06       	cpc	r14, r26
    3d86:	fb 06       	cpc	r15, r27
    3d88:	20 f4       	brcc	.+8      	; 0x3d92 <prvSampleTimeNow+0x38>
    3d8a:	7f df       	rcall	.-258    	; 0x3c8a <prvSwitchTimerLists>
    3d8c:	81 e0       	ldi	r24, 0x01	; 1
    3d8e:	88 83       	st	Y, r24
    3d90:	01 c0       	rjmp	.+2      	; 0x3d94 <prvSampleTimeNow+0x3a>
    3d92:	18 82       	st	Y, r1
    3d94:	c0 92 56 12 	sts	0x1256, r12	; 0x801256 <xLastTime.2436>
    3d98:	d0 92 57 12 	sts	0x1257, r13	; 0x801257 <xLastTime.2436+0x1>
    3d9c:	e0 92 58 12 	sts	0x1258, r14	; 0x801258 <xLastTime.2436+0x2>
    3da0:	f0 92 59 12 	sts	0x1259, r15	; 0x801259 <xLastTime.2436+0x3>
    3da4:	c7 01       	movw	r24, r14
    3da6:	b6 01       	movw	r22, r12
    3da8:	df 91       	pop	r29
    3daa:	cf 91       	pop	r28
    3dac:	ff 90       	pop	r15
    3dae:	ef 90       	pop	r14
    3db0:	df 90       	pop	r13
    3db2:	cf 90       	pop	r12
    3db4:	08 95       	ret

00003db6 <prvProcessExpiredTimer>:
    3db6:	4f 92       	push	r4
    3db8:	5f 92       	push	r5
    3dba:	6f 92       	push	r6
    3dbc:	7f 92       	push	r7
    3dbe:	8f 92       	push	r8
    3dc0:	9f 92       	push	r9
    3dc2:	af 92       	push	r10
    3dc4:	bf 92       	push	r11
    3dc6:	cf 92       	push	r12
    3dc8:	df 92       	push	r13
    3dca:	ef 92       	push	r14
    3dcc:	ff 92       	push	r15
    3dce:	0f 93       	push	r16
    3dd0:	1f 93       	push	r17
    3dd2:	cf 93       	push	r28
    3dd4:	df 93       	push	r29
    3dd6:	4b 01       	movw	r8, r22
    3dd8:	5c 01       	movw	r10, r24
    3dda:	29 01       	movw	r4, r18
    3ddc:	3a 01       	movw	r6, r20
    3dde:	e0 91 60 12 	lds	r30, 0x1260	; 0x801260 <pxCurrentTimerList>
    3de2:	f0 91 61 12 	lds	r31, 0x1261	; 0x801261 <pxCurrentTimerList+0x1>
    3de6:	07 80       	ldd	r0, Z+7	; 0x07
    3de8:	f0 85       	ldd	r31, Z+8	; 0x08
    3dea:	e0 2d       	mov	r30, r0
    3dec:	c0 85       	ldd	r28, Z+8	; 0x08
    3dee:	d1 85       	ldd	r29, Z+9	; 0x09
    3df0:	ce 01       	movw	r24, r28
    3df2:	02 96       	adiw	r24, 0x02	; 2
    3df4:	0e 94 a3 08 	call	0x1146	; 0x1146 <uxListRemove>
    3df8:	8e 89       	ldd	r24, Y+22	; 0x16
    3dfa:	82 ff       	sbrs	r24, 2
    3dfc:	1b c0       	rjmp	.+54     	; 0x3e34 <prvProcessExpiredTimer+0x7e>
    3dfe:	4e 85       	ldd	r20, Y+14	; 0x0e
    3e00:	5f 85       	ldd	r21, Y+15	; 0x0f
    3e02:	68 89       	ldd	r22, Y+16	; 0x10
    3e04:	79 89       	ldd	r23, Y+17	; 0x11
    3e06:	48 0d       	add	r20, r8
    3e08:	59 1d       	adc	r21, r9
    3e0a:	6a 1d       	adc	r22, r10
    3e0c:	7b 1d       	adc	r23, r11
    3e0e:	75 01       	movw	r14, r10
    3e10:	64 01       	movw	r12, r8
    3e12:	93 01       	movw	r18, r6
    3e14:	82 01       	movw	r16, r4
    3e16:	ce 01       	movw	r24, r28
    3e18:	47 de       	rcall	.-882    	; 0x3aa8 <prvInsertTimerInActiveList>
    3e1a:	88 23       	and	r24, r24
    3e1c:	69 f0       	breq	.+26     	; 0x3e38 <prvProcessExpiredTimer+0x82>
    3e1e:	c1 2c       	mov	r12, r1
    3e20:	d1 2c       	mov	r13, r1
    3e22:	76 01       	movw	r14, r12
    3e24:	00 e0       	ldi	r16, 0x00	; 0
    3e26:	10 e0       	ldi	r17, 0x00	; 0
    3e28:	a5 01       	movw	r20, r10
    3e2a:	94 01       	movw	r18, r8
    3e2c:	60 e0       	ldi	r22, 0x00	; 0
    3e2e:	ce 01       	movw	r24, r28
    3e30:	ce de       	rcall	.-612    	; 0x3bce <xTimerGenericCommand>
    3e32:	02 c0       	rjmp	.+4      	; 0x3e38 <prvProcessExpiredTimer+0x82>
    3e34:	8e 7f       	andi	r24, 0xFE	; 254
    3e36:	8e 8b       	std	Y+22, r24	; 0x16
    3e38:	ec 89       	ldd	r30, Y+20	; 0x14
    3e3a:	fd 89       	ldd	r31, Y+21	; 0x15
    3e3c:	ce 01       	movw	r24, r28
    3e3e:	19 95       	eicall
    3e40:	df 91       	pop	r29
    3e42:	cf 91       	pop	r28
    3e44:	1f 91       	pop	r17
    3e46:	0f 91       	pop	r16
    3e48:	ff 90       	pop	r15
    3e4a:	ef 90       	pop	r14
    3e4c:	df 90       	pop	r13
    3e4e:	cf 90       	pop	r12
    3e50:	bf 90       	pop	r11
    3e52:	af 90       	pop	r10
    3e54:	9f 90       	pop	r9
    3e56:	8f 90       	pop	r8
    3e58:	7f 90       	pop	r7
    3e5a:	6f 90       	pop	r6
    3e5c:	5f 90       	pop	r5
    3e5e:	4f 90       	pop	r4
    3e60:	08 95       	ret

00003e62 <prvProcessTimerOrBlockTask>:
    3e62:	8f 92       	push	r8
    3e64:	9f 92       	push	r9
    3e66:	af 92       	push	r10
    3e68:	bf 92       	push	r11
    3e6a:	cf 92       	push	r12
    3e6c:	df 92       	push	r13
    3e6e:	ef 92       	push	r14
    3e70:	ff 92       	push	r15
    3e72:	1f 93       	push	r17
    3e74:	cf 93       	push	r28
    3e76:	df 93       	push	r29
    3e78:	1f 92       	push	r1
    3e7a:	cd b7       	in	r28, 0x3d	; 61
    3e7c:	de b7       	in	r29, 0x3e	; 62
    3e7e:	6b 01       	movw	r12, r22
    3e80:	7c 01       	movw	r14, r24
    3e82:	14 2f       	mov	r17, r20
    3e84:	0e 94 4b 13 	call	0x2696	; 0x2696 <vTaskSuspendAll>
    3e88:	ce 01       	movw	r24, r28
    3e8a:	01 96       	adiw	r24, 0x01	; 1
    3e8c:	66 df       	rcall	.-308    	; 0x3d5a <prvSampleTimeNow>
    3e8e:	4b 01       	movw	r8, r22
    3e90:	5c 01       	movw	r10, r24
    3e92:	89 81       	ldd	r24, Y+1	; 0x01
    3e94:	81 11       	cpse	r24, r1
    3e96:	2d c0       	rjmp	.+90     	; 0x3ef2 <prvProcessTimerOrBlockTask+0x90>
    3e98:	11 11       	cpse	r17, r1
    3e9a:	0d c0       	rjmp	.+26     	; 0x3eb6 <prvProcessTimerOrBlockTask+0x54>
    3e9c:	8c 14       	cp	r8, r12
    3e9e:	9d 04       	cpc	r9, r13
    3ea0:	ae 04       	cpc	r10, r14
    3ea2:	bf 04       	cpc	r11, r15
    3ea4:	40 f0       	brcs	.+16     	; 0x3eb6 <prvProcessTimerOrBlockTask+0x54>
    3ea6:	0e 94 8b 14 	call	0x2916	; 0x2916 <xTaskResumeAll>
    3eaa:	a5 01       	movw	r20, r10
    3eac:	94 01       	movw	r18, r8
    3eae:	c7 01       	movw	r24, r14
    3eb0:	b6 01       	movw	r22, r12
    3eb2:	81 df       	rcall	.-254    	; 0x3db6 <prvProcessExpiredTimer>
    3eb4:	20 c0       	rjmp	.+64     	; 0x3ef6 <prvProcessTimerOrBlockTask+0x94>
    3eb6:	11 23       	and	r17, r17
    3eb8:	41 f0       	breq	.+16     	; 0x3eca <prvProcessTimerOrBlockTask+0x68>
    3eba:	e0 91 5e 12 	lds	r30, 0x125E	; 0x80125e <pxOverflowTimerList>
    3ebe:	f0 91 5f 12 	lds	r31, 0x125F	; 0x80125f <pxOverflowTimerList+0x1>
    3ec2:	80 81       	ld	r24, Z
    3ec4:	11 e0       	ldi	r17, 0x01	; 1
    3ec6:	81 11       	cpse	r24, r1
    3ec8:	10 e0       	ldi	r17, 0x00	; 0
    3eca:	b7 01       	movw	r22, r14
    3ecc:	a6 01       	movw	r20, r12
    3ece:	48 19       	sub	r20, r8
    3ed0:	59 09       	sbc	r21, r9
    3ed2:	6a 09       	sbc	r22, r10
    3ed4:	7b 09       	sbc	r23, r11
    3ed6:	21 2f       	mov	r18, r17
    3ed8:	80 91 5c 12 	lds	r24, 0x125C	; 0x80125c <xTimerQueue>
    3edc:	90 91 5d 12 	lds	r25, 0x125D	; 0x80125d <xTimerQueue+0x1>
    3ee0:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <vQueueWaitForMessageRestricted>
    3ee4:	0e 94 8b 14 	call	0x2916	; 0x2916 <xTaskResumeAll>
    3ee8:	81 11       	cpse	r24, r1
    3eea:	05 c0       	rjmp	.+10     	; 0x3ef6 <prvProcessTimerOrBlockTask+0x94>
    3eec:	0e 94 1f 09 	call	0x123e	; 0x123e <vPortYield>
    3ef0:	02 c0       	rjmp	.+4      	; 0x3ef6 <prvProcessTimerOrBlockTask+0x94>
    3ef2:	0e 94 8b 14 	call	0x2916	; 0x2916 <xTaskResumeAll>
    3ef6:	0f 90       	pop	r0
    3ef8:	df 91       	pop	r29
    3efa:	cf 91       	pop	r28
    3efc:	1f 91       	pop	r17
    3efe:	ff 90       	pop	r15
    3f00:	ef 90       	pop	r14
    3f02:	df 90       	pop	r13
    3f04:	cf 90       	pop	r12
    3f06:	bf 90       	pop	r11
    3f08:	af 90       	pop	r10
    3f0a:	9f 90       	pop	r9
    3f0c:	8f 90       	pop	r8
    3f0e:	08 95       	ret

00003f10 <prvProcessReceivedCommands>:
    3f10:	af 92       	push	r10
    3f12:	bf 92       	push	r11
    3f14:	cf 92       	push	r12
    3f16:	df 92       	push	r13
    3f18:	ef 92       	push	r14
    3f1a:	ff 92       	push	r15
    3f1c:	0f 93       	push	r16
    3f1e:	1f 93       	push	r17
    3f20:	cf 93       	push	r28
    3f22:	df 93       	push	r29
    3f24:	cd b7       	in	r28, 0x3d	; 61
    3f26:	de b7       	in	r29, 0x3e	; 62
    3f28:	28 97       	sbiw	r28, 0x08	; 8
    3f2a:	0f b6       	in	r0, 0x3f	; 63
    3f2c:	f8 94       	cli
    3f2e:	de bf       	out	0x3e, r29	; 62
    3f30:	0f be       	out	0x3f, r0	; 63
    3f32:	cd bf       	out	0x3d, r28	; 61
    3f34:	82 c0       	rjmp	.+260    	; 0x403a <prvProcessReceivedCommands+0x12a>
    3f36:	89 81       	ldd	r24, Y+1	; 0x01
    3f38:	88 23       	and	r24, r24
    3f3a:	0c f4       	brge	.+2      	; 0x3f3e <prvProcessReceivedCommands+0x2e>
    3f3c:	7e c0       	rjmp	.+252    	; 0x403a <prvProcessReceivedCommands+0x12a>
    3f3e:	ae 80       	ldd	r10, Y+6	; 0x06
    3f40:	bf 80       	ldd	r11, Y+7	; 0x07
    3f42:	d5 01       	movw	r26, r10
    3f44:	1c 96       	adiw	r26, 0x0c	; 12
    3f46:	8d 91       	ld	r24, X+
    3f48:	9c 91       	ld	r25, X
    3f4a:	1d 97       	sbiw	r26, 0x0d	; 13
    3f4c:	89 2b       	or	r24, r25
    3f4e:	21 f0       	breq	.+8      	; 0x3f58 <prvProcessReceivedCommands+0x48>
    3f50:	c5 01       	movw	r24, r10
    3f52:	02 96       	adiw	r24, 0x02	; 2
    3f54:	0e 94 a3 08 	call	0x1146	; 0x1146 <uxListRemove>
    3f58:	ce 01       	movw	r24, r28
    3f5a:	08 96       	adiw	r24, 0x08	; 8
    3f5c:	fe de       	rcall	.-516    	; 0x3d5a <prvSampleTimeNow>
    3f5e:	8b 01       	movw	r16, r22
    3f60:	9c 01       	movw	r18, r24
    3f62:	e9 81       	ldd	r30, Y+1	; 0x01
    3f64:	0e 2e       	mov	r0, r30
    3f66:	00 0c       	add	r0, r0
    3f68:	ff 0b       	sbc	r31, r31
    3f6a:	ea 30       	cpi	r30, 0x0A	; 10
    3f6c:	f1 05       	cpc	r31, r1
    3f6e:	08 f0       	brcs	.+2      	; 0x3f72 <prvProcessReceivedCommands+0x62>
    3f70:	64 c0       	rjmp	.+200    	; 0x403a <prvProcessReceivedCommands+0x12a>
    3f72:	88 27       	eor	r24, r24
    3f74:	ee 58       	subi	r30, 0x8E	; 142
    3f76:	ff 4f       	sbci	r31, 0xFF	; 255
    3f78:	8f 4f       	sbci	r24, 0xFF	; 255
    3f7a:	0c 94 9a 32 	jmp	0x6534	; 0x6534 <__tablejump2__>
    3f7e:	f5 01       	movw	r30, r10
    3f80:	86 89       	ldd	r24, Z+22	; 0x16
    3f82:	81 60       	ori	r24, 0x01	; 1
    3f84:	86 8b       	std	Z+22, r24	; 0x16
    3f86:	ca 80       	ldd	r12, Y+2	; 0x02
    3f88:	db 80       	ldd	r13, Y+3	; 0x03
    3f8a:	ec 80       	ldd	r14, Y+4	; 0x04
    3f8c:	fd 80       	ldd	r15, Y+5	; 0x05
    3f8e:	46 85       	ldd	r20, Z+14	; 0x0e
    3f90:	57 85       	ldd	r21, Z+15	; 0x0f
    3f92:	60 89       	ldd	r22, Z+16	; 0x10
    3f94:	71 89       	ldd	r23, Z+17	; 0x11
    3f96:	4c 0d       	add	r20, r12
    3f98:	5d 1d       	adc	r21, r13
    3f9a:	6e 1d       	adc	r22, r14
    3f9c:	7f 1d       	adc	r23, r15
    3f9e:	c5 01       	movw	r24, r10
    3fa0:	83 dd       	rcall	.-1274   	; 0x3aa8 <prvInsertTimerInActiveList>
    3fa2:	88 23       	and	r24, r24
    3fa4:	09 f4       	brne	.+2      	; 0x3fa8 <prvProcessReceivedCommands+0x98>
    3fa6:	49 c0       	rjmp	.+146    	; 0x403a <prvProcessReceivedCommands+0x12a>
    3fa8:	d5 01       	movw	r26, r10
    3faa:	54 96       	adiw	r26, 0x14	; 20
    3fac:	ed 91       	ld	r30, X+
    3fae:	fc 91       	ld	r31, X
    3fb0:	55 97       	sbiw	r26, 0x15	; 21
    3fb2:	c5 01       	movw	r24, r10
    3fb4:	19 95       	eicall
    3fb6:	f5 01       	movw	r30, r10
    3fb8:	86 89       	ldd	r24, Z+22	; 0x16
    3fba:	82 ff       	sbrs	r24, 2
    3fbc:	3e c0       	rjmp	.+124    	; 0x403a <prvProcessReceivedCommands+0x12a>
    3fbe:	4a 81       	ldd	r20, Y+2	; 0x02
    3fc0:	5b 81       	ldd	r21, Y+3	; 0x03
    3fc2:	6c 81       	ldd	r22, Y+4	; 0x04
    3fc4:	7d 81       	ldd	r23, Y+5	; 0x05
    3fc6:	86 85       	ldd	r24, Z+14	; 0x0e
    3fc8:	97 85       	ldd	r25, Z+15	; 0x0f
    3fca:	a0 89       	ldd	r26, Z+16	; 0x10
    3fcc:	b1 89       	ldd	r27, Z+17	; 0x11
    3fce:	9a 01       	movw	r18, r20
    3fd0:	ab 01       	movw	r20, r22
    3fd2:	28 0f       	add	r18, r24
    3fd4:	39 1f       	adc	r19, r25
    3fd6:	4a 1f       	adc	r20, r26
    3fd8:	5b 1f       	adc	r21, r27
    3fda:	c1 2c       	mov	r12, r1
    3fdc:	d1 2c       	mov	r13, r1
    3fde:	76 01       	movw	r14, r12
    3fe0:	00 e0       	ldi	r16, 0x00	; 0
    3fe2:	10 e0       	ldi	r17, 0x00	; 0
    3fe4:	60 e0       	ldi	r22, 0x00	; 0
    3fe6:	c5 01       	movw	r24, r10
    3fe8:	f2 dd       	rcall	.-1052   	; 0x3bce <xTimerGenericCommand>
    3fea:	27 c0       	rjmp	.+78     	; 0x403a <prvProcessReceivedCommands+0x12a>
    3fec:	d5 01       	movw	r26, r10
    3fee:	56 96       	adiw	r26, 0x16	; 22
    3ff0:	8c 91       	ld	r24, X
    3ff2:	56 97       	sbiw	r26, 0x16	; 22
    3ff4:	8e 7f       	andi	r24, 0xFE	; 254
    3ff6:	56 96       	adiw	r26, 0x16	; 22
    3ff8:	8c 93       	st	X, r24
    3ffa:	1f c0       	rjmp	.+62     	; 0x403a <prvProcessReceivedCommands+0x12a>
    3ffc:	f5 01       	movw	r30, r10
    3ffe:	86 89       	ldd	r24, Z+22	; 0x16
    4000:	81 60       	ori	r24, 0x01	; 1
    4002:	86 8b       	std	Z+22, r24	; 0x16
    4004:	4a 81       	ldd	r20, Y+2	; 0x02
    4006:	5b 81       	ldd	r21, Y+3	; 0x03
    4008:	6c 81       	ldd	r22, Y+4	; 0x04
    400a:	7d 81       	ldd	r23, Y+5	; 0x05
    400c:	46 87       	std	Z+14, r20	; 0x0e
    400e:	57 87       	std	Z+15, r21	; 0x0f
    4010:	60 8b       	std	Z+16, r22	; 0x10
    4012:	71 8b       	std	Z+17, r23	; 0x11
    4014:	40 0f       	add	r20, r16
    4016:	51 1f       	adc	r21, r17
    4018:	62 1f       	adc	r22, r18
    401a:	73 1f       	adc	r23, r19
    401c:	68 01       	movw	r12, r16
    401e:	79 01       	movw	r14, r18
    4020:	c5 01       	movw	r24, r10
    4022:	42 dd       	rcall	.-1404   	; 0x3aa8 <prvInsertTimerInActiveList>
    4024:	0a c0       	rjmp	.+20     	; 0x403a <prvProcessReceivedCommands+0x12a>
    4026:	f5 01       	movw	r30, r10
    4028:	86 89       	ldd	r24, Z+22	; 0x16
    402a:	81 fd       	sbrc	r24, 1
    402c:	04 c0       	rjmp	.+8      	; 0x4036 <prvProcessReceivedCommands+0x126>
    402e:	c5 01       	movw	r24, r10
    4030:	0e 94 14 08 	call	0x1028	; 0x1028 <vPortFree>
    4034:	02 c0       	rjmp	.+4      	; 0x403a <prvProcessReceivedCommands+0x12a>
    4036:	8e 7f       	andi	r24, 0xFE	; 254
    4038:	86 8b       	std	Z+22, r24	; 0x16
    403a:	20 e0       	ldi	r18, 0x00	; 0
    403c:	30 e0       	ldi	r19, 0x00	; 0
    403e:	a9 01       	movw	r20, r18
    4040:	be 01       	movw	r22, r28
    4042:	6f 5f       	subi	r22, 0xFF	; 255
    4044:	7f 4f       	sbci	r23, 0xFF	; 255
    4046:	80 91 5c 12 	lds	r24, 0x125C	; 0x80125c <xTimerQueue>
    404a:	90 91 5d 12 	lds	r25, 0x125D	; 0x80125d <xTimerQueue+0x1>
    404e:	0e 94 22 0c 	call	0x1844	; 0x1844 <xQueueReceive>
    4052:	81 11       	cpse	r24, r1
    4054:	70 cf       	rjmp	.-288    	; 0x3f36 <prvProcessReceivedCommands+0x26>
    4056:	28 96       	adiw	r28, 0x08	; 8
    4058:	0f b6       	in	r0, 0x3f	; 63
    405a:	f8 94       	cli
    405c:	de bf       	out	0x3e, r29	; 62
    405e:	0f be       	out	0x3f, r0	; 63
    4060:	cd bf       	out	0x3d, r28	; 61
    4062:	df 91       	pop	r29
    4064:	cf 91       	pop	r28
    4066:	1f 91       	pop	r17
    4068:	0f 91       	pop	r16
    406a:	ff 90       	pop	r15
    406c:	ef 90       	pop	r14
    406e:	df 90       	pop	r13
    4070:	cf 90       	pop	r12
    4072:	bf 90       	pop	r11
    4074:	af 90       	pop	r10
    4076:	08 95       	ret

00004078 <vApplicationIdleHook>:
    4078:	08 95       	ret

0000407a <prvSetMainLedOn>:
    407a:	84 b1       	in	r24, 0x04	; 4
    407c:	80 68       	ori	r24, 0x80	; 128
    407e:	84 b9       	out	0x04, r24	; 4
    4080:	85 b1       	in	r24, 0x05	; 5
    4082:	80 68       	ori	r24, 0x80	; 128
    4084:	85 b9       	out	0x05, r24	; 5
    4086:	08 95       	ret

00004088 <prvBlinkMainLed>:
    4088:	83 b1       	in	r24, 0x03	; 3
    408a:	80 68       	ori	r24, 0x80	; 128
    408c:	83 b9       	out	0x03, r24	; 3
    408e:	08 95       	ret

00004090 <vApplicationMallocFailedHook>:
    4090:	f4 df       	rcall	.-24     	; 0x407a <prvSetMainLedOn>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    4092:	2f ef       	ldi	r18, 0xFF	; 255
    4094:	80 e7       	ldi	r24, 0x70	; 112
    4096:	92 e0       	ldi	r25, 0x02	; 2
    4098:	21 50       	subi	r18, 0x01	; 1
    409a:	80 40       	sbci	r24, 0x00	; 0
    409c:	90 40       	sbci	r25, 0x00	; 0
    409e:	e1 f7       	brne	.-8      	; 0x4098 <vApplicationMallocFailedHook+0x8>
    40a0:	00 c0       	rjmp	.+0      	; 0x40a2 <vApplicationMallocFailedHook+0x12>
    40a2:	00 00       	nop
    40a4:	f1 df       	rcall	.-30     	; 0x4088 <prvBlinkMainLed>
    40a6:	f5 cf       	rjmp	.-22     	; 0x4092 <vApplicationMallocFailedHook+0x2>

000040a8 <vApplicationStackOverflowHook>:
    40a8:	e8 df       	rcall	.-48     	; 0x407a <prvSetMainLedOn>
    40aa:	2f ef       	ldi	r18, 0xFF	; 255
    40ac:	87 ea       	ldi	r24, 0xA7	; 167
    40ae:	91 e6       	ldi	r25, 0x61	; 97
    40b0:	21 50       	subi	r18, 0x01	; 1
    40b2:	80 40       	sbci	r24, 0x00	; 0
    40b4:	90 40       	sbci	r25, 0x00	; 0
    40b6:	e1 f7       	brne	.-8      	; 0x40b0 <vApplicationStackOverflowHook+0x8>
    40b8:	00 c0       	rjmp	.+0      	; 0x40ba <vApplicationStackOverflowHook+0x12>
    40ba:	00 00       	nop
    40bc:	e5 df       	rcall	.-54     	; 0x4088 <prvBlinkMainLed>
    40be:	f5 cf       	rjmp	.-22     	; 0x40aa <vApplicationStackOverflowHook+0x2>

000040c0 <humTempReader_create>:
void humTempReader_destroy(humTempReader_t self) {
	if (self == NULL)
	return;
	vTaskDelete(self->handleTask);
	vPortFree(self);
}
    40c0:	2f 92       	push	r2
    40c2:	3f 92       	push	r3
    40c4:	4f 92       	push	r4
    40c6:	5f 92       	push	r5
    40c8:	6f 92       	push	r6
    40ca:	7f 92       	push	r7
    40cc:	8f 92       	push	r8
    40ce:	9f 92       	push	r9
    40d0:	af 92       	push	r10
    40d2:	bf 92       	push	r11
    40d4:	cf 92       	push	r12
    40d6:	df 92       	push	r13
    40d8:	ef 92       	push	r14
    40da:	ff 92       	push	r15
    40dc:	0f 93       	push	r16
    40de:	1f 93       	push	r17
    40e0:	cf 93       	push	r28
    40e2:	df 93       	push	r29
    40e4:	88 2e       	mov	r8, r24
    40e6:	96 2e       	mov	r9, r22
    40e8:	1a 01       	movw	r2, r20
    40ea:	28 01       	movw	r4, r16
    40ec:	39 01       	movw	r6, r18
    40ee:	86 e0       	ldi	r24, 0x06	; 6
    40f0:	90 e0       	ldi	r25, 0x00	; 0
    40f2:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
    40f6:	ec 01       	movw	r28, r24
    40f8:	89 2b       	or	r24, r25
    40fa:	99 f1       	breq	.+102    	; 0x4162 <humTempReader_create+0xa2>
    40fc:	19 82       	std	Y+1, r1	; 0x01
    40fe:	18 82       	st	Y, r1
    4100:	1b 82       	std	Y+3, r1	; 0x03
    4102:	1a 82       	std	Y+2, r1	; 0x02
    4104:	30 92 83 12 	sts	0x1283, r3	; 0x801283 <_event_group_start_measure+0x1>
    4108:	20 92 82 12 	sts	0x1282, r2	; 0x801282 <_event_group_start_measure>
    410c:	40 92 7e 12 	sts	0x127E, r4	; 0x80127e <_bit_start_measure>
    4110:	50 92 7f 12 	sts	0x127F, r5	; 0x80127f <_bit_start_measure+0x1>
    4114:	60 92 80 12 	sts	0x1280, r6	; 0x801280 <_bit_start_measure+0x2>
    4118:	70 92 81 12 	sts	0x1281, r7	; 0x801281 <_bit_start_measure+0x3>
    411c:	f0 92 7d 12 	sts	0x127D, r15	; 0x80127d <_event_group_ready_measurment+0x1>
    4120:	e0 92 7c 12 	sts	0x127C, r14	; 0x80127c <_event_group_ready_measurment>
    4124:	a0 92 78 12 	sts	0x1278, r10	; 0x801278 <_bit_ready>
    4128:	b0 92 79 12 	sts	0x1279, r11	; 0x801279 <_bit_ready+0x1>
    412c:	c0 92 7a 12 	sts	0x127A, r12	; 0x80127a <_bit_ready+0x2>
    4130:	d0 92 7b 12 	sts	0x127B, r13	; 0x80127b <_bit_ready+0x3>
    4134:	b9 d2       	rcall	.+1394   	; 0x46a8 <hih8120_initialise>
    4136:	b8 d2       	rcall	.+1392   	; 0x46a8 <hih8120_initialise>
    4138:	81 11       	cpse	r24, r1
    413a:	16 c0       	rjmp	.+44     	; 0x4168 <humTempReader_create+0xa8>
    413c:	49 2d       	mov	r20, r9
    413e:	50 e0       	ldi	r21, 0x00	; 0
    4140:	48 53       	subi	r20, 0x38	; 56
    4142:	5f 4f       	sbci	r21, 0xFF	; 255
    4144:	7e 01       	movw	r14, r28
    4146:	84 e0       	ldi	r24, 0x04	; 4
    4148:	e8 0e       	add	r14, r24
    414a:	f1 1c       	adc	r15, r1
    414c:	08 2d       	mov	r16, r8
    414e:	9e 01       	movw	r18, r28
    4150:	6d e3       	ldi	r22, 0x3D	; 61
    4152:	74 e0       	ldi	r23, 0x04	; 4
    4154:	88 e3       	ldi	r24, 0x38	; 56
    4156:	91 e2       	ldi	r25, 0x21	; 33
    4158:	0e 94 c7 12 	call	0x258e	; 0x258e <xTaskCreate>
    415c:	8c 2f       	mov	r24, r28
    415e:	9d 2f       	mov	r25, r29
    4160:	05 c0       	rjmp	.+10     	; 0x416c <humTempReader_create+0xac>
    4162:	80 e0       	ldi	r24, 0x00	; 0
    4164:	90 e0       	ldi	r25, 0x00	; 0
    4166:	02 c0       	rjmp	.+4      	; 0x416c <humTempReader_create+0xac>
    4168:	8c 2f       	mov	r24, r28
    416a:	9d 2f       	mov	r25, r29
    416c:	df 91       	pop	r29
    416e:	cf 91       	pop	r28
    4170:	1f 91       	pop	r17
    4172:	0f 91       	pop	r16
    4174:	ff 90       	pop	r15
    4176:	ef 90       	pop	r14
    4178:	df 90       	pop	r13
    417a:	cf 90       	pop	r12
    417c:	bf 90       	pop	r11
    417e:	af 90       	pop	r10
    4180:	9f 90       	pop	r9
    4182:	8f 90       	pop	r8
    4184:	7f 90       	pop	r7
    4186:	6f 90       	pop	r6
    4188:	5f 90       	pop	r5
    418a:	4f 90       	pop	r4
    418c:	3f 90       	pop	r3
    418e:	2f 90       	pop	r2
    4190:	08 95       	ret

00004192 <humTempReader_measure>:
	for (;;) {
		humTempReader_measure((humTempReader_t)self);
	}
}

void humTempReader_measure(humTempReader_t self) {
    4192:	cf 92       	push	r12
    4194:	df 92       	push	r13
    4196:	ef 92       	push	r14
    4198:	ff 92       	push	r15
    419a:	0f 93       	push	r16
    419c:	1f 93       	push	r17
    419e:	cf 93       	push	r28
    41a0:	df 93       	push	r29
    41a2:	ec 01       	movw	r28, r24
	EventBits_t uxBits = xEventGroupWaitBits(_event_group_start_measure,
    41a4:	40 91 7e 12 	lds	r20, 0x127E	; 0x80127e <_bit_start_measure>
    41a8:	50 91 7f 12 	lds	r21, 0x127F	; 0x80127f <_bit_start_measure+0x1>
    41ac:	60 91 80 12 	lds	r22, 0x1280	; 0x801280 <_bit_start_measure+0x2>
    41b0:	70 91 81 12 	lds	r23, 0x1281	; 0x801281 <_bit_start_measure+0x3>
    41b4:	cc 24       	eor	r12, r12
    41b6:	ca 94       	dec	r12
    41b8:	dc 2c       	mov	r13, r12
    41ba:	76 01       	movw	r14, r12
    41bc:	01 e0       	ldi	r16, 0x01	; 1
    41be:	21 e0       	ldi	r18, 0x01	; 1
    41c0:	80 91 82 12 	lds	r24, 0x1282	; 0x801282 <_event_group_start_measure>
    41c4:	90 91 83 12 	lds	r25, 0x1283	; 0x801283 <_event_group_start_measure+0x1>
    41c8:	0e 94 ca 05 	call	0xb94	; 0xb94 <xEventGroupWaitBits>
	_bit_start_measure,
	pdTRUE,
	pdTRUE,
	portMAX_DELAY);

	if ((uxBits & (_bit_start_measure)) == (_bit_start_measure)) {
    41cc:	00 91 7e 12 	lds	r16, 0x127E	; 0x80127e <_bit_start_measure>
    41d0:	10 91 7f 12 	lds	r17, 0x127F	; 0x80127f <_bit_start_measure+0x1>
    41d4:	20 91 80 12 	lds	r18, 0x1280	; 0x801280 <_bit_start_measure+0x2>
    41d8:	30 91 81 12 	lds	r19, 0x1281	; 0x801281 <_bit_start_measure+0x3>
    41dc:	dc 01       	movw	r26, r24
    41de:	cb 01       	movw	r24, r22
    41e0:	80 23       	and	r24, r16
    41e2:	91 23       	and	r25, r17
    41e4:	a2 23       	and	r26, r18
    41e6:	b3 23       	and	r27, r19
    41e8:	08 17       	cp	r16, r24
    41ea:	19 07       	cpc	r17, r25
    41ec:	2a 07       	cpc	r18, r26
    41ee:	3b 07       	cpc	r19, r27
    41f0:	b1 f5       	brne	.+108    	; 0x425e <humTempReader_measure+0xcc>
		hih8120_wakeup();
    41f2:	75 d2       	rcall	.+1258   	; 0x46de <hih8120_wakeup>
		vTaskDelay(50);
    41f4:	62 e3       	ldi	r22, 0x32	; 50
    41f6:	70 e0       	ldi	r23, 0x00	; 0
    41f8:	80 e0       	ldi	r24, 0x00	; 0
    41fa:	90 e0       	ldi	r25, 0x00	; 0
    41fc:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
		if ( HIH8120_OK != hih8120_wakeup() )
    4200:	6e d2       	rcall	.+1244   	; 0x46de <hih8120_wakeup>
    4202:	88 23       	and	r24, r24
		{
			for(;;){
				hih8120_wakeup();
    4204:	41 f0       	breq	.+16     	; 0x4216 <humTempReader_measure+0x84>
    4206:	6b d2       	rcall	.+1238   	; 0x46de <hih8120_wakeup>
				vTaskDelay(50);
    4208:	62 e3       	ldi	r22, 0x32	; 50
    420a:	70 e0       	ldi	r23, 0x00	; 0
    420c:	80 e0       	ldi	r24, 0x00	; 0
    420e:	90 e0       	ldi	r25, 0x00	; 0
    4210:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
			}
		}	
		hih8120_measure();
    4214:	f8 cf       	rjmp	.-16     	; 0x4206 <humTempReader_measure+0x74>
    4216:	78 d2       	rcall	.+1264   	; 0x4708 <hih8120_measure>
		vTaskDelay(5);
    4218:	65 e0       	ldi	r22, 0x05	; 5
    421a:	70 e0       	ldi	r23, 0x00	; 0
    421c:	80 e0       	ldi	r24, 0x00	; 0
    421e:	90 e0       	ldi	r25, 0x00	; 0
    4220:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
		if(hih8120_isReady())
    4224:	59 d2       	rcall	.+1202   	; 0x46d8 <hih8120_isReady>
    4226:	88 23       	and	r24, r24
		{
			self->temperature = hih8120_getTemperature_x10();
    4228:	31 f0       	breq	.+12     	; 0x4236 <humTempReader_measure+0xa4>
    422a:	ba d2       	rcall	.+1396   	; 0x47a0 <hih8120_getTemperature_x10>
    422c:	9b 83       	std	Y+3, r25	; 0x03
    422e:	8a 83       	std	Y+2, r24	; 0x02
			self->humidity = hih8120_getHumidityPercent_x10();			
    4230:	91 d2       	rcall	.+1314   	; 0x4754 <hih8120_getHumidityPercent_x10>
    4232:	99 83       	std	Y+1, r25	; 0x01
    4234:	88 83       	st	Y, r24
    4236:	68 ee       	ldi	r22, 0xE8	; 232
		}
		vTaskDelay(1000);
    4238:	73 e0       	ldi	r23, 0x03	; 3
    423a:	80 e0       	ldi	r24, 0x00	; 0
    423c:	90 e0       	ldi	r25, 0x00	; 0
    423e:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
    4242:	40 91 78 12 	lds	r20, 0x1278	; 0x801278 <_bit_ready>
		xEventGroupSetBits(_event_group_ready_measurment, _bit_ready);
    4246:	50 91 79 12 	lds	r21, 0x1279	; 0x801279 <_bit_ready+0x1>
    424a:	60 91 7a 12 	lds	r22, 0x127A	; 0x80127a <_bit_ready+0x2>
    424e:	70 91 7b 12 	lds	r23, 0x127B	; 0x80127b <_bit_ready+0x3>
    4252:	80 91 7c 12 	lds	r24, 0x127C	; 0x80127c <_event_group_ready_measurment>
    4256:	90 91 7d 12 	lds	r25, 0x127D	; 0x80127d <_event_group_ready_measurment+0x1>
    425a:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <xEventGroupSetBits>
    425e:	df 91       	pop	r29
	}
}
    4260:	cf 91       	pop	r28
    4262:	1f 91       	pop	r17
    4264:	0f 91       	pop	r16
    4266:	ff 90       	pop	r15
    4268:	ef 90       	pop	r14
    426a:	df 90       	pop	r13
    426c:	cf 90       	pop	r12
    426e:	08 95       	ret

00004270 <humTempReader_executeTask>:
    4270:	ec 01       	movw	r28, r24
	vPortFree(self);
}

void humTempReader_executeTask(void* self) {
	for (;;) {
		humTempReader_measure((humTempReader_t)self);
    4272:	ce 01       	movw	r24, r28
    4274:	8e df       	rcall	.-228    	; 0x4192 <humTempReader_measure>
    4276:	fd cf       	rjmp	.-6      	; 0x4272 <humTempReader_executeTask+0x2>

00004278 <humTempReader_getHumidity>:
	}
}

uint16_t humTempReader_getHumidity(humTempReader_t self){
	return self->humidity;
}
    4278:	fc 01       	movw	r30, r24
    427a:	80 81       	ld	r24, Z
    427c:	91 81       	ldd	r25, Z+1	; 0x01
    427e:	08 95       	ret

00004280 <humTempReader_getTemperature>:

int16_t humTempReader_getTemperature(humTempReader_t self){
	return self->temperature;
}
    4280:	fc 01       	movw	r30, r24
    4282:	82 81       	ldd	r24, Z+2	; 0x02
    4284:	93 81       	ldd	r25, Z+3	; 0x03
    4286:	08 95       	ret

00004288 <_lora_setup>:
    4288:	0f 93       	push	r16
    428a:	1f 93       	push	r17
    428c:	cf 93       	push	r28
    428e:	df 93       	push	r29
    4290:	cd b7       	in	r28, 0x3d	; 61
    4292:	de b7       	in	r29, 0x3e	; 62
    4294:	64 97       	sbiw	r28, 0x14	; 20
    4296:	0f b6       	in	r0, 0x3f	; 63
    4298:	f8 94       	cli
    429a:	de bf       	out	0x3e, r29	; 62
    429c:	0f be       	out	0x3f, r0	; 63
    429e:	cd bf       	out	0x3d, r28	; 61
    42a0:	81 e0       	ldi	r24, 0x01	; 1
    42a2:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <status_leds_slowBlink>
    42a6:	f4 d3       	rcall	.+2024   	; 0x4a90 <lora_driver_rn2483FactoryReset>
    42a8:	70 d6       	rcall	.+3296   	; 0x4f8a <lora_driver_mapReturnCodeToText>
    42aa:	9f 93       	push	r25
    42ac:	8f 93       	push	r24
    42ae:	8e ee       	ldi	r24, 0xEE	; 238
    42b0:	92 e0       	ldi	r25, 0x02	; 2
    42b2:	9f 93       	push	r25
    42b4:	8f 93       	push	r24
    42b6:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
    42ba:	68 d5       	rcall	.+2768   	; 0x4d8c <lora_driver_configureToEu868>
    42bc:	66 d6       	rcall	.+3276   	; 0x4f8a <lora_driver_mapReturnCodeToText>
    42be:	9f 93       	push	r25
    42c0:	8f 93       	push	r24
    42c2:	81 e0       	ldi	r24, 0x01	; 1
    42c4:	93 e0       	ldi	r25, 0x03	; 3
    42c6:	9f 93       	push	r25
    42c8:	8f 93       	push	r24
    42ca:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
    42ce:	8e 01       	movw	r16, r28
    42d0:	0f 5f       	subi	r16, 0xFF	; 255
    42d2:	1f 4f       	sbci	r17, 0xFF	; 255
    42d4:	c8 01       	movw	r24, r16
    42d6:	ee d3       	rcall	.+2012   	; 0x4ab4 <lora_driver_getRn2483Hweui>
    42d8:	58 d6       	rcall	.+3248   	; 0x4f8a <lora_driver_mapReturnCodeToText>
    42da:	1f 93       	push	r17
    42dc:	0f 93       	push	r16
    42de:	9f 93       	push	r25
    42e0:	8f 93       	push	r24
    42e2:	8a e1       	ldi	r24, 0x1A	; 26
    42e4:	93 e0       	ldi	r25, 0x03	; 3
    42e6:	9f 93       	push	r25
    42e8:	8f 93       	push	r24
    42ea:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
    42ee:	c8 01       	movw	r24, r16
    42f0:	fd d3       	rcall	.+2042   	; 0x4aec <lora_driver_setDeviceIdentifier>
    42f2:	4b d6       	rcall	.+3222   	; 0x4f8a <lora_driver_mapReturnCodeToText>
    42f4:	9f 93       	push	r25
    42f6:	8f 93       	push	r24
    42f8:	1f 93       	push	r17
    42fa:	0f 93       	push	r16
    42fc:	8e e2       	ldi	r24, 0x2E	; 46
    42fe:	93 e0       	ldi	r25, 0x03	; 3
    4300:	9f 93       	push	r25
    4302:	8f 93       	push	r24
    4304:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
    4308:	a8 01       	movw	r20, r16
    430a:	63 e4       	ldi	r22, 0x43	; 67
    430c:	73 e0       	ldi	r23, 0x03	; 3
    430e:	84 e6       	ldi	r24, 0x64	; 100
    4310:	93 e0       	ldi	r25, 0x03	; 3
    4312:	1a d6       	rcall	.+3124   	; 0x4f48 <lora_driver_setOtaaIdentity>
    4314:	3a d6       	rcall	.+3188   	; 0x4f8a <lora_driver_mapReturnCodeToText>
    4316:	9f 93       	push	r25
    4318:	8f 93       	push	r24
    431a:	1f 93       	push	r17
    431c:	0f 93       	push	r16
    431e:	83 e4       	ldi	r24, 0x43	; 67
    4320:	93 e0       	ldi	r25, 0x03	; 3
    4322:	9f 93       	push	r25
    4324:	8f 93       	push	r24
    4326:	84 e6       	ldi	r24, 0x64	; 100
    4328:	93 e0       	ldi	r25, 0x03	; 3
    432a:	9f 93       	push	r25
    432c:	8f 93       	push	r24
    432e:	85 e7       	ldi	r24, 0x75	; 117
    4330:	93 e0       	ldi	r25, 0x03	; 3
    4332:	9f 93       	push	r25
    4334:	8f 93       	push	r24
    4336:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
    433a:	0b d4       	rcall	.+2070   	; 0x4b52 <lora_driver_saveMac>
    433c:	26 d6       	rcall	.+3148   	; 0x4f8a <lora_driver_mapReturnCodeToText>
    433e:	9f 93       	push	r25
    4340:	8f 93       	push	r24
    4342:	8b ea       	ldi	r24, 0xAB	; 171
    4344:	93 e0       	ldi	r25, 0x03	; 3
    4346:	9f 93       	push	r25
    4348:	8f 93       	push	r24
    434a:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
    434e:	0f b6       	in	r0, 0x3f	; 63
    4350:	f8 94       	cli
    4352:	de bf       	out	0x3e, r29	; 62
    4354:	0f be       	out	0x3f, r0	; 63
    4356:	cd bf       	out	0x3d, r28	; 61
    4358:	81 e0       	ldi	r24, 0x01	; 1
    435a:	f5 d4       	rcall	.+2538   	; 0x4d46 <lora_driver_setAdaptiveDataRate>
    435c:	16 d6       	rcall	.+3116   	; 0x4f8a <lora_driver_mapReturnCodeToText>
    435e:	9f 93       	push	r25
    4360:	8f 93       	push	r24
    4362:	8a eb       	ldi	r24, 0xBA	; 186
    4364:	93 e0       	ldi	r25, 0x03	; 3
    4366:	9f 93       	push	r25
    4368:	8f 93       	push	r24
    436a:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
    436e:	84 ef       	ldi	r24, 0xF4	; 244
    4370:	91 e0       	ldi	r25, 0x01	; 1
    4372:	f4 d4       	rcall	.+2536   	; 0x4d5c <lora_driver_setReceiveDelay>
    4374:	0a d6       	rcall	.+3092   	; 0x4f8a <lora_driver_mapReturnCodeToText>
    4376:	9f 93       	push	r25
    4378:	8f 93       	push	r24
    437a:	81 e0       	ldi	r24, 0x01	; 1
    437c:	8f 93       	push	r24
    437e:	84 ef       	ldi	r24, 0xF4	; 244
    4380:	8f 93       	push	r24
    4382:	8b ed       	ldi	r24, 0xDB	; 219
    4384:	93 e0       	ldi	r25, 0x03	; 3
    4386:	9f 93       	push	r25
    4388:	8f 93       	push	r24
    438a:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
    438e:	0f b6       	in	r0, 0x3f	; 63
    4390:	f8 94       	cli
    4392:	de bf       	out	0x3e, r29	; 62
    4394:	0f be       	out	0x3f, r0	; 63
    4396:	cd bf       	out	0x3d, r28	; 61
    4398:	1a e0       	ldi	r17, 0x0A	; 10
    439a:	80 e0       	ldi	r24, 0x00	; 0
    439c:	e0 d3       	rcall	.+1984   	; 0x4b5e <lora_driver_join>
    439e:	08 2f       	mov	r16, r24
    43a0:	f4 d5       	rcall	.+3048   	; 0x4f8a <lora_driver_mapReturnCodeToText>
    43a2:	9f 93       	push	r25
    43a4:	8f 93       	push	r24
    43a6:	1f 92       	push	r1
    43a8:	1f 93       	push	r17
    43aa:	8b ef       	ldi	r24, 0xFB	; 251
    43ac:	93 e0       	ldi	r25, 0x03	; 3
    43ae:	9f 93       	push	r25
    43b0:	8f 93       	push	r24
    43b2:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
    43b6:	0f 90       	pop	r0
    43b8:	0f 90       	pop	r0
    43ba:	0f 90       	pop	r0
    43bc:	0f 90       	pop	r0
    43be:	0f 90       	pop	r0
    43c0:	0f 90       	pop	r0
    43c2:	08 30       	cpi	r16, 0x08	; 8
    43c4:	59 f0       	breq	.+22     	; 0x43dc <_lora_setup+0x154>
    43c6:	80 e0       	ldi	r24, 0x00	; 0
    43c8:	0e 94 ab 2e 	call	0x5d56	; 0x5d56 <status_leds_longPuls>
    43cc:	66 e3       	ldi	r22, 0x36	; 54
    43ce:	71 e0       	ldi	r23, 0x01	; 1
    43d0:	80 e0       	ldi	r24, 0x00	; 0
    43d2:	90 e0       	ldi	r25, 0x00	; 0
    43d4:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
    43d8:	11 50       	subi	r17, 0x01	; 1
    43da:	f9 f6       	brne	.-66     	; 0x439a <_lora_setup+0x112>
    43dc:	08 30       	cpi	r16, 0x08	; 8
    43de:	21 f4       	brne	.+8      	; 0x43e8 <_lora_setup+0x160>
    43e0:	81 e0       	ldi	r24, 0x01	; 1
    43e2:	0e 94 8d 2e 	call	0x5d1a	; 0x5d1a <status_leds_ledOn>
    43e6:	09 c0       	rjmp	.+18     	; 0x43fa <_lora_setup+0x172>
    43e8:	81 e0       	ldi	r24, 0x01	; 1
    43ea:	0e 94 9c 2e 	call	0x5d38	; 0x5d38 <status_leds_ledOff>
    43ee:	80 e0       	ldi	r24, 0x00	; 0
    43f0:	0e 94 6a 2e 	call	0x5cd4	; 0x5cd4 <status_leds_fastBlink>
    43f4:	0e 94 1f 09 	call	0x123e	; 0x123e <vPortYield>
    43f8:	fd cf       	rjmp	.-6      	; 0x43f4 <_lora_setup+0x16c>
    43fa:	64 96       	adiw	r28, 0x14	; 20
    43fc:	0f b6       	in	r0, 0x3f	; 63
    43fe:	f8 94       	cli
    4400:	de bf       	out	0x3e, r29	; 62
    4402:	0f be       	out	0x3f, r0	; 63
    4404:	cd bf       	out	0x3d, r28	; 61
    4406:	df 91       	pop	r29
    4408:	cf 91       	pop	r28
    440a:	1f 91       	pop	r17
    440c:	0f 91       	pop	r16
    440e:	08 95       	ret

00004410 <lora_handler_task>:
    4410:	cf 93       	push	r28
    4412:	df 93       	push	r29
    4414:	00 d0       	rcall	.+0      	; 0x4416 <lora_handler_task+0x6>
    4416:	1f 92       	push	r1
    4418:	cd b7       	in	r28, 0x3d	; 61
    441a:	de b7       	in	r29, 0x3e	; 62
    441c:	81 e0       	ldi	r24, 0x01	; 1
    441e:	2a d3       	rcall	.+1620   	; 0x4a74 <lora_driver_resetRn2483>
    4420:	62 e0       	ldi	r22, 0x02	; 2
    4422:	70 e0       	ldi	r23, 0x00	; 0
    4424:	80 e0       	ldi	r24, 0x00	; 0
    4426:	90 e0       	ldi	r25, 0x00	; 0
    4428:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
    442c:	80 e0       	ldi	r24, 0x00	; 0
    442e:	22 d3       	rcall	.+1604   	; 0x4a74 <lora_driver_resetRn2483>
    4430:	66 e9       	ldi	r22, 0x96	; 150
    4432:	70 e0       	ldi	r23, 0x00	; 0
    4434:	80 e0       	ldi	r24, 0x00	; 0
    4436:	90 e0       	ldi	r25, 0x00	; 0
    4438:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
    443c:	d4 d2       	rcall	.+1448   	; 0x49e6 <lora_driver_flushBuffers>
    443e:	24 df       	rcall	.-440    	; 0x4288 <_lora_setup>
    4440:	e4 e8       	ldi	r30, 0x84	; 132
    4442:	f2 e1       	ldi	r31, 0x12	; 18
    4444:	86 e0       	ldi	r24, 0x06	; 6
    4446:	81 83       	std	Z+1, r24	; 0x01
    4448:	82 e0       	ldi	r24, 0x02	; 2
    444a:	80 83       	st	Z, r24
    444c:	0e 94 51 13 	call	0x26a2	; 0x26a2 <xTaskGetTickCount>
    4450:	69 83       	std	Y+1, r22	; 0x01
    4452:	7a 83       	std	Y+2, r23	; 0x02
    4454:	8b 83       	std	Y+3, r24	; 0x03
    4456:	9c 83       	std	Y+4, r25	; 0x04
    4458:	48 ea       	ldi	r20, 0xA8	; 168
    445a:	58 e4       	ldi	r21, 0x48	; 72
    445c:	60 e0       	ldi	r22, 0x00	; 0
    445e:	70 e0       	ldi	r23, 0x00	; 0
    4460:	ce 01       	movw	r24, r28
    4462:	01 96       	adiw	r24, 0x01	; 1
    4464:	0e 94 67 15 	call	0x2ace	; 0x2ace <xTaskDelayUntil>
    4468:	e4 e8       	ldi	r30, 0x84	; 132
    446a:	f2 e1       	ldi	r31, 0x12	; 18
    446c:	80 e3       	ldi	r24, 0x30	; 48
    446e:	82 83       	std	Z+2, r24	; 0x02
    4470:	89 e3       	ldi	r24, 0x39	; 57
    4472:	83 83       	std	Z+3, r24	; 0x03
    4474:	82 e0       	ldi	r24, 0x02	; 2
    4476:	84 83       	std	Z+4, r24	; 0x04
    4478:	83 ea       	ldi	r24, 0xA3	; 163
    447a:	85 83       	std	Z+5, r24	; 0x05
    447c:	84 e0       	ldi	r24, 0x04	; 4
    447e:	86 83       	std	Z+6, r24	; 0x06
    4480:	8a e1       	ldi	r24, 0x1A	; 26
    4482:	87 83       	std	Z+7, r24	; 0x07
    4484:	83 e0       	ldi	r24, 0x03	; 3
    4486:	0e 94 bd 2e 	call	0x5d7a	; 0x5d7a <status_leds_shortPuls>
    448a:	64 e8       	ldi	r22, 0x84	; 132
    448c:	72 e1       	ldi	r23, 0x12	; 18
    448e:	80 e0       	ldi	r24, 0x00	; 0
    4490:	8f d3       	rcall	.+1822   	; 0x4bb0 <lora_driver_sendUploadMessage>
    4492:	7b d5       	rcall	.+2806   	; 0x4f8a <lora_driver_mapReturnCodeToText>
    4494:	9f 93       	push	r25
    4496:	8f 93       	push	r24
    4498:	8b e1       	ldi	r24, 0x1B	; 27
    449a:	94 e0       	ldi	r25, 0x04	; 4
    449c:	9f 93       	push	r25
    449e:	8f 93       	push	r24
    44a0:	0e 94 26 34 	call	0x684c	; 0x684c <printf>
    44a4:	0f 90       	pop	r0
    44a6:	0f 90       	pop	r0
    44a8:	0f 90       	pop	r0
    44aa:	0f 90       	pop	r0
    44ac:	d5 cf       	rjmp	.-86     	; 0x4458 <lora_handler_task+0x48>

000044ae <lora_handler_initialise>:
    44ae:	ef 92       	push	r14
    44b0:	ff 92       	push	r15
    44b2:	0f 93       	push	r16
    44b4:	e1 2c       	mov	r14, r1
    44b6:	f1 2c       	mov	r15, r1
    44b8:	08 2f       	mov	r16, r24
    44ba:	20 e0       	ldi	r18, 0x00	; 0
    44bc:	30 e0       	ldi	r19, 0x00	; 0
    44be:	48 e8       	ldi	r20, 0x88	; 136
    44c0:	51 e0       	ldi	r21, 0x01	; 1
    44c2:	6e e4       	ldi	r22, 0x4E	; 78
    44c4:	74 e0       	ldi	r23, 0x04	; 4
    44c6:	88 e0       	ldi	r24, 0x08	; 8
    44c8:	92 e2       	ldi	r25, 0x22	; 34
    44ca:	0e 94 c7 12 	call	0x258e	; 0x258e <xTaskCreate>
    44ce:	0f 91       	pop	r16
    44d0:	ff 90       	pop	r15
    44d2:	ef 90       	pop	r14
    44d4:	08 95       	ret

000044d6 <create_tasks_and_semaphores>:

	for(;;)
	{
		xTaskDelayUntil( &xLastWakeTime, xFrequency );
		puts("Task2"); // stdio functions are not reentrant - Should normally be protected by MUTEX
		PORTA ^= _BV(PA7);
    44d6:	8f 92       	push	r8
    44d8:	9f 92       	push	r9
    44da:	af 92       	push	r10
    44dc:	bf 92       	push	r11
    44de:	cf 92       	push	r12
    44e0:	df 92       	push	r13
    44e2:	ef 92       	push	r14
    44e4:	ff 92       	push	r15
    44e6:	0f 93       	push	r16
    44e8:	1f 93       	push	r17
    44ea:	cf 93       	push	r28
    44ec:	df 93       	push	r29
    44ee:	0e 94 b7 05 	call	0xb6e	; 0xb6e <xEventGroupCreate>
    44f2:	90 93 e2 13 	sts	0x13E2, r25	; 0x8013e2 <_event_group_start_measure+0x1>
    44f6:	80 93 e1 13 	sts	0x13E1, r24	; 0x8013e1 <_event_group_start_measure>
    44fa:	0e 94 b7 05 	call	0xb6e	; 0xb6e <xEventGroupCreate>
    44fe:	90 93 e8 13 	sts	0x13E8, r25	; 0x8013e8 <_event_group_ready+0x1>
    4502:	80 93 e7 13 	sts	0x13E7, r24	; 0x8013e7 <_event_group_ready>
    4506:	41 e0       	ldi	r20, 0x01	; 1
    4508:	60 e0       	ldi	r22, 0x00	; 0
    450a:	70 e0       	ldi	r23, 0x00	; 0
    450c:	8c e2       	ldi	r24, 0x2C	; 44
    450e:	90 e0       	ldi	r25, 0x00	; 0
    4510:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <xStreamBufferGenericCreate>
    4514:	90 93 ca 13 	sts	0x13CA, r25	; 0x8013ca <message_buffer_uplink+0x1>
    4518:	80 93 c9 13 	sts	0x13C9, r24	; 0x8013c9 <message_buffer_uplink>
    451c:	41 e0       	ldi	r20, 0x01	; 1
    451e:	60 e0       	ldi	r22, 0x00	; 0
    4520:	70 e0       	ldi	r23, 0x00	; 0
    4522:	8c e2       	ldi	r24, 0x2C	; 44
    4524:	90 e0       	ldi	r25, 0x00	; 0
    4526:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <xStreamBufferGenericCreate>
    452a:	90 93 e6 13 	sts	0x13E6, r25	; 0x8013e6 <message_buffer_downlink+0x1>
    452e:	80 93 e5 13 	sts	0x13E5, r24	; 0x8013e5 <message_buffer_downlink>
    4532:	85 e5       	ldi	r24, 0x55	; 85
    4534:	94 e0       	ldi	r25, 0x04	; 4
    4536:	0e 94 39 34 	call	0x6872	; 0x6872 <puts>
    453a:	0e 94 23 02 	call	0x446	; 0x446 <controller_initialise>
    453e:	e0 90 e7 13 	lds	r14, 0x13E7	; 0x8013e7 <_event_group_ready>
    4542:	f0 90 e8 13 	lds	r15, 0x13E8	; 0x8013e8 <_event_group_ready+0x1>
    4546:	40 91 e1 13 	lds	r20, 0x13E1	; 0x8013e1 <_event_group_start_measure>
    454a:	50 91 e2 13 	lds	r21, 0x13E2	; 0x8013e2 <_event_group_start_measure+0x1>
    454e:	a1 2c       	mov	r10, r1
    4550:	b1 2c       	mov	r11, r1
    4552:	65 01       	movw	r12, r10
    4554:	68 94       	set
    4556:	a5 f8       	bld	r10, 5
    4558:	08 e0       	ldi	r16, 0x08	; 8
    455a:	10 e0       	ldi	r17, 0x00	; 0
    455c:	20 e0       	ldi	r18, 0x00	; 0
    455e:	30 e0       	ldi	r19, 0x00	; 0
    4560:	60 ec       	ldi	r22, 0xC0	; 192
    4562:	82 e0       	ldi	r24, 0x02	; 2
    4564:	0e 94 09 01 	call	0x212	; 0x212 <co2Reader_create>
    4568:	4c 01       	movw	r8, r24
    456a:	e0 90 e7 13 	lds	r14, 0x13E7	; 0x8013e7 <_event_group_ready>
    456e:	f0 90 e8 13 	lds	r15, 0x13E8	; 0x8013e8 <_event_group_ready+0x1>
    4572:	40 91 e1 13 	lds	r20, 0x13E1	; 0x8013e1 <_event_group_start_measure>
    4576:	50 91 e2 13 	lds	r21, 0x13E2	; 0x8013e2 <_event_group_start_measure+0x1>
    457a:	a1 2c       	mov	r10, r1
    457c:	b1 2c       	mov	r11, r1
    457e:	65 01       	movw	r12, r10
    4580:	68 94       	set
    4582:	a4 f8       	bld	r10, 4
    4584:	01 e0       	ldi	r16, 0x01	; 1
    4586:	10 e0       	ldi	r17, 0x00	; 0
    4588:	20 e0       	ldi	r18, 0x00	; 0
    458a:	30 e0       	ldi	r19, 0x00	; 0
    458c:	60 ec       	ldi	r22, 0xC0	; 192
    458e:	82 e0       	ldi	r24, 0x02	; 2
    4590:	97 dd       	rcall	.-1234   	; 0x40c0 <humTempReader_create>
    4592:	c8 2f       	mov	r28, r24
    4594:	d9 2f       	mov	r29, r25
    4596:	0e 94 51 04 	call	0x8a2	; 0x8a2 <servo_initialise>
    459a:	e0 90 e7 13 	lds	r14, 0x13E7	; 0x8013e7 <_event_group_ready>
    459e:	f0 90 e8 13 	lds	r15, 0x13E8	; 0x8013e8 <_event_group_ready+0x1>
    45a2:	40 91 e1 13 	lds	r20, 0x13E1	; 0x8013e1 <_event_group_start_measure>
    45a6:	50 91 e2 13 	lds	r21, 0x13E2	; 0x8013e2 <_event_group_start_measure+0x1>
    45aa:	80 91 ca 13 	lds	r24, 0x13CA	; 0x8013ca <message_buffer_uplink+0x1>
    45ae:	8f 93       	push	r24
    45b0:	80 91 c9 13 	lds	r24, 0x13C9	; 0x8013c9 <message_buffer_uplink>
    45b4:	8f 93       	push	r24
    45b6:	df 93       	push	r29
    45b8:	cf 93       	push	r28
    45ba:	0f 2e       	mov	r0, r31
    45bc:	f0 e3       	ldi	r31, 0x30	; 48
    45be:	af 2e       	mov	r10, r31
    45c0:	b1 2c       	mov	r11, r1
    45c2:	c1 2c       	mov	r12, r1
    45c4:	d1 2c       	mov	r13, r1
    45c6:	f0 2d       	mov	r31, r0
    45c8:	09 e0       	ldi	r16, 0x09	; 9
    45ca:	10 e0       	ldi	r17, 0x00	; 0
    45cc:	20 e0       	ldi	r18, 0x00	; 0
    45ce:	30 e0       	ldi	r19, 0x00	; 0
    45d0:	60 ec       	ldi	r22, 0xC0	; 192
    45d2:	84 e0       	ldi	r24, 0x04	; 4
    45d4:	0e 94 8f 02 	call	0x51e	; 0x51e <device_create>
    45d8:	40 91 c9 13 	lds	r20, 0x13C9	; 0x8013c9 <message_buffer_uplink>
    45dc:	50 91 ca 13 	lds	r21, 0x13CA	; 0x8013ca <message_buffer_uplink+0x1>
    45e0:	60 ec       	ldi	r22, 0xC0	; 192
    45e2:	81 e0       	ldi	r24, 0x01	; 1
    45e4:	0e 94 83 05 	call	0xb06	; 0xb06 <lora_upLinkHandler_initialize>
    45e8:	40 91 e5 13 	lds	r20, 0x13E5	; 0x8013e5 <message_buffer_downlink>
    45ec:	50 91 e6 13 	lds	r21, 0x13E6	; 0x8013e6 <message_buffer_downlink+0x1>
    45f0:	60 ec       	ldi	r22, 0xC0	; 192
    45f2:	81 e0       	ldi	r24, 0x01	; 1
    45f4:	0e 94 3e 04 	call	0x87c	; 0x87c <lora_downLinkHandler_initialize>
    45f8:	0f 90       	pop	r0
    45fa:	0f 90       	pop	r0
    45fc:	0f 90       	pop	r0
    45fe:	0f 90       	pop	r0
    4600:	df 91       	pop	r29
    4602:	cf 91       	pop	r28
    4604:	1f 91       	pop	r17
    4606:	0f 91       	pop	r16
    4608:	ff 90       	pop	r15
    460a:	ef 90       	pop	r14
    460c:	df 90       	pop	r13
    460e:	cf 90       	pop	r12
    4610:	bf 90       	pop	r11
    4612:	af 90       	pop	r10
    4614:	9f 90       	pop	r9
    4616:	8f 90       	pop	r8
    4618:	08 95       	ret

0000461a <initialiseSystem>:
/*-----------------------------------------------------------*/
void initialiseSystem()
{
	//printf("intialise started\n");
	// Set output ports for leds used in the example
	DDRA |= _BV(DDA0) | _BV(DDA7);
    461a:	81 b1       	in	r24, 0x01	; 1
    461c:	81 68       	ori	r24, 0x81	; 129
    461e:	81 b9       	out	0x01, r24	; 1

	// Make it possible to use stdio on COM port 0 (USB) on Arduino board - Setting 57600,8,N,1
	stdio_initialise(ser_USART0);
    4620:	80 e0       	ldi	r24, 0x00	; 0
    4622:	0e 94 f2 2c 	call	0x59e4	; 0x59e4 <stdio_initialise>
	// Let's create some tasks
	//create_tasks_and_semaphores();

	// vvvvvvvvvvvvvvvvv BELOW IS LoRaWAN initialisation vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
	// Status Leds driver
	status_leds_initialise(5); // Priority 5 for internal task
    4626:	85 e0       	ldi	r24, 0x05	; 5
    4628:	0e 94 f9 2d 	call	0x5bf2	; 0x5bf2 <status_leds_initialise>
	// Initialise the LoRaWAN driver without down-link buffer
	lora_driver_initialise(1, NULL);
    462c:	60 e0       	ldi	r22, 0x00	; 0
    462e:	70 e0       	ldi	r23, 0x00	; 0
    4630:	81 e0       	ldi	r24, 0x01	; 1
    4632:	e0 d1       	rcall	.+960    	; 0x49f4 <lora_driver_initialise>
	// Create LoRaWAN task and start it up with priority 3
	lora_handler_initialise(3);
    4634:	83 e0       	ldi	r24, 0x03	; 3
    4636:	90 e0       	ldi	r25, 0x00	; 0
    4638:	3a cf       	rjmp	.-396    	; 0x44ae <lora_handler_initialise>
    463a:	08 95       	ret

0000463c <main>:
}

/*-----------------------------------------------------------*/
int main(void)
{
	initialiseSystem(); // Must be done as the very first thing!!
    463c:	ee df       	rcall	.-36     	; 0x461a <initialiseSystem>
	create_tasks_and_semaphores();
    463e:	4b df       	rcall	.-362    	; 0x44d6 <create_tasks_and_semaphores>
    4640:	8a e7       	ldi	r24, 0x7A	; 122
	printf("Program Started!!\n");
    4642:	94 e0       	ldi	r25, 0x04	; 4
    4644:	0e 94 39 34 	call	0x6872	; 0x6872 <puts>
    4648:	0e 94 13 13 	call	0x2626	; 0x2626 <vTaskStartScheduler>
	vTaskStartScheduler(); // Initialise and run the freeRTOS scheduler. Execution should never return from here.
    464c:	ff cf       	rjmp	.-2      	; 0x464c <main+0x10>

0000464e <_hihTwiCallback>:
    464e:	65 30       	cpi	r22, 0x05	; 5
    4650:	f1 f4       	brne	.+60     	; 0x468e <_hihTwiCallback+0x40>
    4652:	fa 01       	movw	r30, r20
    4654:	80 81       	ld	r24, Z
    4656:	8f 73       	andi	r24, 0x3F	; 63
    4658:	90 e0       	ldi	r25, 0x00	; 0
    465a:	98 2f       	mov	r25, r24
    465c:	88 27       	eor	r24, r24
    465e:	21 81       	ldd	r18, Z+1	; 0x01
    4660:	82 2b       	or	r24, r18
    4662:	90 93 0a 02 	sts	0x020A, r25	; 0x80020a <_hum+0x1>
    4666:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <_hum>
    466a:	82 81       	ldd	r24, Z+2	; 0x02
    466c:	f0 e4       	ldi	r31, 0x40	; 64
    466e:	8f 9f       	mul	r24, r31
    4670:	c0 01       	movw	r24, r0
    4672:	11 24       	eor	r1, r1
    4674:	fa 01       	movw	r30, r20
    4676:	23 81       	ldd	r18, Z+3	; 0x03
    4678:	26 95       	lsr	r18
    467a:	26 95       	lsr	r18
    467c:	82 2b       	or	r24, r18
    467e:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <_temp+0x1>
    4682:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_temp>
    4686:	81 e0       	ldi	r24, 0x01	; 1
    4688:	80 93 9a 12 	sts	0x129A, r24	; 0x80129a <_measuringIsReady>
    468c:	08 95       	ret
    468e:	64 30       	cpi	r22, 0x04	; 4
    4690:	51 f0       	breq	.+20     	; 0x46a6 <_hihTwiCallback+0x58>
    4692:	80 e0       	ldi	r24, 0x00	; 0
    4694:	90 e4       	ldi	r25, 0x40	; 64
    4696:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <_temp+0x1>
    469a:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_temp>
    469e:	90 93 0a 02 	sts	0x020A, r25	; 0x80020a <_hum+0x1>
    46a2:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <_hum>
    46a6:	08 95       	ret

000046a8 <hih8120_initialise>:
    46a8:	0f 93       	push	r16
    46aa:	1f 93       	push	r17
    46ac:	07 e2       	ldi	r16, 0x27	; 39
    46ae:	13 e2       	ldi	r17, 0x23	; 35
    46b0:	20 e0       	ldi	r18, 0x00	; 0
    46b2:	34 e2       	ldi	r19, 0x24	; 36
    46b4:	44 ef       	ldi	r20, 0xF4	; 244
    46b6:	50 e0       	ldi	r21, 0x00	; 0
    46b8:	60 e0       	ldi	r22, 0x00	; 0
    46ba:	87 e2       	ldi	r24, 0x27	; 39
    46bc:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <twiCreate>
    46c0:	90 93 9c 12 	sts	0x129C, r25	; 0x80129c <_hih8120Handler+0x1>
    46c4:	80 93 9b 12 	sts	0x129B, r24	; 0x80129b <_hih8120Handler>
    46c8:	21 e0       	ldi	r18, 0x01	; 1
    46ca:	89 2b       	or	r24, r25
    46cc:	09 f0       	breq	.+2      	; 0x46d0 <hih8120_initialise+0x28>
    46ce:	20 e0       	ldi	r18, 0x00	; 0
    46d0:	82 2f       	mov	r24, r18
    46d2:	1f 91       	pop	r17
    46d4:	0f 91       	pop	r16
    46d6:	08 95       	ret

000046d8 <hih8120_isReady>:
    46d8:	80 91 9a 12 	lds	r24, 0x129A	; 0x80129a <_measuringIsReady>
    46dc:	08 95       	ret

000046de <hih8120_wakeup>:
    46de:	80 91 9b 12 	lds	r24, 0x129B	; 0x80129b <_hih8120Handler>
    46e2:	90 91 9c 12 	lds	r25, 0x129C	; 0x80129c <_hih8120Handler+0x1>
    46e6:	00 97       	sbiw	r24, 0x00	; 0
    46e8:	59 f0       	breq	.+22     	; 0x4700 <hih8120_wakeup+0x22>
    46ea:	40 e0       	ldi	r20, 0x00	; 0
    46ec:	60 e0       	ldi	r22, 0x00	; 0
    46ee:	70 e0       	ldi	r23, 0x00	; 0
    46f0:	0e 94 31 2f 	call	0x5e62	; 0x5e62 <twiTransmit>
    46f4:	84 30       	cpi	r24, 0x04	; 4
    46f6:	31 f4       	brne	.+12     	; 0x4704 <hih8120_wakeup+0x26>
    46f8:	10 92 9a 12 	sts	0x129A, r1	; 0x80129a <_measuringIsReady>
    46fc:	80 e0       	ldi	r24, 0x00	; 0
    46fe:	08 95       	ret
    4700:	82 e0       	ldi	r24, 0x02	; 2
    4702:	08 95       	ret
    4704:	83 e0       	ldi	r24, 0x03	; 3
    4706:	08 95       	ret

00004708 <hih8120_measure>:
    4708:	80 91 9b 12 	lds	r24, 0x129B	; 0x80129b <_hih8120Handler>
    470c:	90 91 9c 12 	lds	r25, 0x129C	; 0x80129c <_hih8120Handler+0x1>
    4710:	00 97       	sbiw	r24, 0x00	; 0
    4712:	39 f0       	breq	.+14     	; 0x4722 <hih8120_measure+0x1a>
    4714:	64 e0       	ldi	r22, 0x04	; 4
    4716:	0e 94 7d 2f 	call	0x5efa	; 0x5efa <twiReceive>
    471a:	85 30       	cpi	r24, 0x05	; 5
    471c:	21 f0       	breq	.+8      	; 0x4726 <hih8120_measure+0x1e>
    471e:	83 e0       	ldi	r24, 0x03	; 3
    4720:	08 95       	ret
    4722:	82 e0       	ldi	r24, 0x02	; 2
    4724:	08 95       	ret
    4726:	80 e0       	ldi	r24, 0x00	; 0
    4728:	08 95       	ret

0000472a <hih8120_getHumidity>:
    472a:	60 91 09 02 	lds	r22, 0x0209	; 0x800209 <_hum>
    472e:	70 91 0a 02 	lds	r23, 0x020A	; 0x80020a <_hum+0x1>
    4732:	80 e0       	ldi	r24, 0x00	; 0
    4734:	90 e0       	ldi	r25, 0x00	; 0
    4736:	0e 94 87 31 	call	0x630e	; 0x630e <__floatunsisf>
    473a:	20 e0       	ldi	r18, 0x00	; 0
    473c:	30 e0       	ldi	r19, 0x00	; 0
    473e:	48 ec       	ldi	r20, 0xC8	; 200
    4740:	52 e4       	ldi	r21, 0x42	; 66
    4742:	0e 94 15 32 	call	0x642a	; 0x642a <__mulsf3>
    4746:	20 e0       	ldi	r18, 0x00	; 0
    4748:	38 ef       	ldi	r19, 0xF8	; 248
    474a:	4f e7       	ldi	r20, 0x7F	; 127
    474c:	56 e4       	ldi	r21, 0x46	; 70
    474e:	0c 94 ee 30 	jmp	0x61dc	; 0x61dc <__divsf3>
    4752:	08 95       	ret

00004754 <hih8120_getHumidityPercent_x10>:
    4754:	ea df       	rcall	.-44     	; 0x472a <hih8120_getHumidity>
    4756:	20 e0       	ldi	r18, 0x00	; 0
    4758:	30 e0       	ldi	r19, 0x00	; 0
    475a:	40 e2       	ldi	r20, 0x20	; 32
    475c:	51 e4       	ldi	r21, 0x41	; 65
    475e:	0e 94 15 32 	call	0x642a	; 0x642a <__mulsf3>
    4762:	0e 94 5b 31 	call	0x62b6	; 0x62b6 <__fixunssfsi>
    4766:	cb 01       	movw	r24, r22
    4768:	08 95       	ret

0000476a <hih8120_getTemperature>:
    476a:	60 91 07 02 	lds	r22, 0x0207	; 0x800207 <_temp>
    476e:	70 91 08 02 	lds	r23, 0x0208	; 0x800208 <_temp+0x1>
    4772:	80 e0       	ldi	r24, 0x00	; 0
    4774:	90 e0       	ldi	r25, 0x00	; 0
    4776:	0e 94 87 31 	call	0x630e	; 0x630e <__floatunsisf>
    477a:	20 e0       	ldi	r18, 0x00	; 0
    477c:	30 e0       	ldi	r19, 0x00	; 0
    477e:	45 e2       	ldi	r20, 0x25	; 37
    4780:	53 e4       	ldi	r21, 0x43	; 67
    4782:	0e 94 15 32 	call	0x642a	; 0x642a <__mulsf3>
    4786:	20 e0       	ldi	r18, 0x00	; 0
    4788:	38 ef       	ldi	r19, 0xF8	; 248
    478a:	4f e7       	ldi	r20, 0x7F	; 127
    478c:	56 e4       	ldi	r21, 0x46	; 70
    478e:	0e 94 ee 30 	call	0x61dc	; 0x61dc <__divsf3>
    4792:	20 e0       	ldi	r18, 0x00	; 0
    4794:	30 e0       	ldi	r19, 0x00	; 0
    4796:	40 e2       	ldi	r20, 0x20	; 32
    4798:	52 e4       	ldi	r21, 0x42	; 66
    479a:	0c 94 89 30 	jmp	0x6112	; 0x6112 <__subsf3>
    479e:	08 95       	ret

000047a0 <hih8120_getTemperature_x10>:
    47a0:	e4 df       	rcall	.-56     	; 0x476a <hih8120_getTemperature>
    47a2:	20 e0       	ldi	r18, 0x00	; 0
    47a4:	30 e0       	ldi	r19, 0x00	; 0
    47a6:	40 e2       	ldi	r20, 0x20	; 32
    47a8:	51 e4       	ldi	r21, 0x41	; 65
    47aa:	0e 94 15 32 	call	0x642a	; 0x642a <__mulsf3>
    47ae:	0e 94 56 31 	call	0x62ac	; 0x62ac <__fixsfsi>
    47b2:	cb 01       	movw	r24, r22
    47b4:	08 95       	ret

000047b6 <_serialCallBack>:
    47b6:	0f 93       	push	r16
    47b8:	1f 93       	push	r17
    47ba:	cf 93       	push	r28
    47bc:	df 93       	push	r29
    47be:	1f 92       	push	r1
    47c0:	1f 92       	push	r1
    47c2:	cd b7       	in	r28, 0x3d	; 61
    47c4:	de b7       	in	r29, 0x3e	; 62
    47c6:	8c 01       	movw	r16, r24
    47c8:	19 82       	std	Y+1, r1	; 0x01
    47ca:	2d c0       	rjmp	.+90     	; 0x4826 <_serialCallBack+0x70>
    47cc:	e0 91 d4 12 	lds	r30, 0x12D4	; 0x8012d4 <rec_buf_inp.2878>
    47d0:	ec 32       	cpi	r30, 0x2C	; 44
    47d2:	50 f4       	brcc	.+20     	; 0x47e8 <_serialCallBack+0x32>
    47d4:	81 e0       	ldi	r24, 0x01	; 1
    47d6:	8e 0f       	add	r24, r30
    47d8:	80 93 d4 12 	sts	0x12D4, r24	; 0x8012d4 <rec_buf_inp.2878>
    47dc:	f0 e0       	ldi	r31, 0x00	; 0
    47de:	ea 5f       	subi	r30, 0xFA	; 250
    47e0:	fc 4e       	sbci	r31, 0xEC	; 236
    47e2:	8a 81       	ldd	r24, Y+2	; 0x02
    47e4:	80 83       	st	Z, r24
    47e6:	02 c0       	rjmp	.+4      	; 0x47ec <_serialCallBack+0x36>
    47e8:	10 92 d4 12 	sts	0x12D4, r1	; 0x8012d4 <rec_buf_inp.2878>
    47ec:	8a 81       	ldd	r24, Y+2	; 0x02
    47ee:	8a 30       	cpi	r24, 0x0A	; 10
    47f0:	d1 f4       	brne	.+52     	; 0x4826 <_serialCallBack+0x70>
    47f2:	40 91 d4 12 	lds	r20, 0x12D4	; 0x8012d4 <rec_buf_inp.2878>
    47f6:	50 e0       	ldi	r21, 0x00	; 0
    47f8:	fa 01       	movw	r30, r20
    47fa:	ec 5f       	subi	r30, 0xFC	; 252
    47fc:	fc 4e       	sbci	r31, 0xEC	; 236
    47fe:	10 82       	st	Z, r1
    4800:	41 50       	subi	r20, 0x01	; 1
    4802:	51 09       	sbc	r21, r1
    4804:	9e 01       	movw	r18, r28
    4806:	2f 5f       	subi	r18, 0xFF	; 255
    4808:	3f 4f       	sbci	r19, 0xFF	; 255
    480a:	66 e0       	ldi	r22, 0x06	; 6
    480c:	73 e1       	ldi	r23, 0x13	; 19
    480e:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <_serialReplyBufferHandle>
    4812:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle+0x1>
    4816:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <xStreamBufferSendFromISR>
    481a:	89 81       	ldd	r24, Y+1	; 0x01
    481c:	81 11       	cpse	r24, r1
    481e:	0e 94 1f 09 	call	0x123e	; 0x123e <vPortYield>
    4822:	10 92 d4 12 	sts	0x12D4, r1	; 0x8012d4 <rec_buf_inp.2878>
    4826:	be 01       	movw	r22, r28
    4828:	6e 5f       	subi	r22, 0xFE	; 254
    482a:	7f 4f       	sbci	r23, 0xFF	; 255
    482c:	c8 01       	movw	r24, r16
    482e:	44 d6       	rcall	.+3208   	; 0x54b8 <serial_getByte>
    4830:	88 23       	and	r24, r24
    4832:	61 f2       	breq	.-104    	; 0x47cc <_serialCallBack+0x16>
    4834:	0f 90       	pop	r0
    4836:	0f 90       	pop	r0
    4838:	df 91       	pop	r29
    483a:	cf 91       	pop	r28
    483c:	1f 91       	pop	r17
    483e:	0f 91       	pop	r16
    4840:	08 95       	ret

00004842 <_uploadMessage>:
    4842:	0f 93       	push	r16
    4844:	1f 93       	push	r17
    4846:	cf 93       	push	r28
    4848:	df 93       	push	r29
    484a:	8c 01       	movw	r16, r24
    484c:	eb 01       	movw	r28, r22
    484e:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <_serialReplyBufferHandle>
    4852:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle+0x1>
    4856:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <xStreamBufferReset>
    485a:	b8 01       	movw	r22, r16
    485c:	8d e9       	ldi	r24, 0x9D	; 157
    485e:	92 e1       	ldi	r25, 0x12	; 18
    4860:	0e 94 07 34 	call	0x680e	; 0x680e <strcpy>
    4864:	20 97       	sbiw	r28, 0x00	; 0
    4866:	79 f0       	breq	.+30     	; 0x4886 <_uploadMessage+0x44>
    4868:	ed e9       	ldi	r30, 0x9D	; 157
    486a:	f2 e1       	ldi	r31, 0x12	; 18
    486c:	01 90       	ld	r0, Z+
    486e:	00 20       	and	r0, r0
    4870:	e9 f7       	brne	.-6      	; 0x486c <_uploadMessage+0x2a>
    4872:	31 97       	sbiw	r30, 0x01	; 1
    4874:	80 e2       	ldi	r24, 0x20	; 32
    4876:	90 e0       	ldi	r25, 0x00	; 0
    4878:	91 83       	std	Z+1, r25	; 0x01
    487a:	80 83       	st	Z, r24
    487c:	be 01       	movw	r22, r28
    487e:	8d e9       	ldi	r24, 0x9D	; 157
    4880:	92 e1       	ldi	r25, 0x12	; 18
    4882:	0e 94 fc 33 	call	0x67f8	; 0x67f8 <strcat>
    4886:	ed e9       	ldi	r30, 0x9D	; 157
    4888:	f2 e1       	ldi	r31, 0x12	; 18
    488a:	df 01       	movw	r26, r30
    488c:	0d 90       	ld	r0, X+
    488e:	00 20       	and	r0, r0
    4890:	e9 f7       	brne	.-6      	; 0x488c <_uploadMessage+0x4a>
    4892:	11 97       	sbiw	r26, 0x01	; 1
    4894:	8d e0       	ldi	r24, 0x0D	; 13
    4896:	9a e0       	ldi	r25, 0x0A	; 10
    4898:	11 96       	adiw	r26, 0x01	; 1
    489a:	9c 93       	st	X, r25
    489c:	8e 93       	st	-X, r24
    489e:	12 96       	adiw	r26, 0x02	; 2
    48a0:	1c 92       	st	X, r1
    48a2:	01 90       	ld	r0, Z+
    48a4:	00 20       	and	r0, r0
    48a6:	e9 f7       	brne	.-6      	; 0x48a2 <_uploadMessage+0x60>
    48a8:	31 97       	sbiw	r30, 0x01	; 1
    48aa:	ed 59       	subi	r30, 0x9D	; 157
    48ac:	f2 41       	sbci	r31, 0x12	; 18
    48ae:	ae 2f       	mov	r26, r30
    48b0:	8d e9       	ldi	r24, 0x9D	; 157
    48b2:	92 e1       	ldi	r25, 0x12	; 18
    48b4:	ac 01       	movw	r20, r24
    48b6:	6a 2f       	mov	r22, r26
    48b8:	80 91 d9 12 	lds	r24, 0x12D9	; 0x8012d9 <_rn2483_serial>
    48bc:	90 91 da 12 	lds	r25, 0x12DA	; 0x8012da <_rn2483_serial+0x1>
    48c0:	a6 d5       	rcall	.+2892   	; 0x540e <serial_sendBytes>
    48c2:	81 11       	cpse	r24, r1
    48c4:	11 c0       	rjmp	.+34     	; 0x48e8 <_uploadMessage+0xa6>
    48c6:	08 e2       	ldi	r16, 0x28	; 40
    48c8:	15 e0       	ldi	r17, 0x05	; 5
    48ca:	20 e0       	ldi	r18, 0x00	; 0
    48cc:	30 e0       	ldi	r19, 0x00	; 0
    48ce:	4d e2       	ldi	r20, 0x2D	; 45
    48d0:	50 e0       	ldi	r21, 0x00	; 0
    48d2:	60 e6       	ldi	r22, 0x60	; 96
    48d4:	73 e1       	ldi	r23, 0x13	; 19
    48d6:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <_serialReplyBufferHandle>
    48da:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle+0x1>
    48de:	0e 94 2c 10 	call	0x2058	; 0x2058 <xStreamBufferReceive>
    48e2:	80 e6       	ldi	r24, 0x60	; 96
    48e4:	93 e1       	ldi	r25, 0x13	; 19
    48e6:	02 c0       	rjmp	.+4      	; 0x48ec <_uploadMessage+0xaa>
    48e8:	80 e0       	ldi	r24, 0x00	; 0
    48ea:	90 e0       	ldi	r25, 0x00	; 0
    48ec:	df 91       	pop	r29
    48ee:	cf 91       	pop	r28
    48f0:	1f 91       	pop	r17
    48f2:	0f 91       	pop	r16
    48f4:	08 95       	ret

000048f6 <_reply2ReturnCode>:
    48f6:	2f 92       	push	r2
    48f8:	3f 92       	push	r3
    48fa:	4f 92       	push	r4
    48fc:	5f 92       	push	r5
    48fe:	6f 92       	push	r6
    4900:	7f 92       	push	r7
    4902:	8f 92       	push	r8
    4904:	9f 92       	push	r9
    4906:	af 92       	push	r10
    4908:	bf 92       	push	r11
    490a:	cf 92       	push	r12
    490c:	df 92       	push	r13
    490e:	ef 92       	push	r14
    4910:	ff 92       	push	r15
    4912:	0f 93       	push	r16
    4914:	1f 93       	push	r17
    4916:	cf 93       	push	r28
    4918:	df 93       	push	r29
    491a:	5c 01       	movw	r10, r24
    491c:	fc 01       	movw	r30, r24
    491e:	01 90       	ld	r0, Z+
    4920:	00 20       	and	r0, r0
    4922:	e9 f7       	brne	.-6      	; 0x491e <_reply2ReturnCode+0x28>
    4924:	31 97       	sbiw	r30, 0x01	; 1
    4926:	6f 01       	movw	r12, r30
    4928:	c8 1a       	sub	r12, r24
    492a:	d9 0a       	sbc	r13, r25
    492c:	5c 2c       	mov	r5, r12
    492e:	0f 2e       	mov	r0, r31
    4930:	f5 e2       	ldi	r31, 0x25	; 37
    4932:	8f 2e       	mov	r8, r31
    4934:	f7 e0       	ldi	r31, 0x07	; 7
    4936:	9f 2e       	mov	r9, r31
    4938:	f0 2d       	mov	r31, r0
    493a:	e1 2c       	mov	r14, r1
    493c:	f1 2c       	mov	r15, r1
    493e:	4c 2c       	mov	r4, r12
    4940:	37 01       	movw	r6, r14
    4942:	f4 01       	movw	r30, r8
    4944:	01 81       	ldd	r16, Z+1	; 0x01
    4946:	12 81       	ldd	r17, Z+2	; 0x02
    4948:	e8 01       	movw	r28, r16
    494a:	09 90       	ld	r0, Y+
    494c:	00 20       	and	r0, r0
    494e:	e9 f7       	brne	.-6      	; 0x494a <_reply2ReturnCode+0x54>
    4950:	21 97       	sbiw	r28, 0x01	; 1
    4952:	c0 1b       	sub	r28, r16
    4954:	d1 0b       	sbc	r29, r17
    4956:	3c 2e       	mov	r3, r28
    4958:	f9 e0       	ldi	r31, 0x09	; 9
    495a:	cf 16       	cp	r12, r31
    495c:	d1 04       	cpc	r13, r1
    495e:	58 f0       	brcs	.+22     	; 0x4976 <_reply2ReturnCode+0x80>
    4960:	f4 01       	movw	r30, r8
    4962:	20 80       	ld	r2, Z
    4964:	fe e0       	ldi	r31, 0x0E	; 14
    4966:	2f 12       	cpse	r2, r31
    4968:	06 c0       	rjmp	.+12     	; 0x4976 <_reply2ReturnCode+0x80>
    496a:	b8 01       	movw	r22, r16
    496c:	c5 01       	movw	r24, r10
    496e:	0e 94 d7 33 	call	0x67ae	; 0x67ae <strcasestr>
    4972:	89 2b       	or	r24, r25
    4974:	09 f5       	brne	.+66     	; 0x49b8 <_reply2ReturnCode+0xc2>
    4976:	44 2d       	mov	r20, r4
    4978:	35 14       	cp	r3, r5
    497a:	08 f4       	brcc	.+2      	; 0x497e <_reply2ReturnCode+0x88>
    497c:	4c 2f       	mov	r20, r28
    497e:	50 e0       	ldi	r21, 0x00	; 0
    4980:	b8 01       	movw	r22, r16
    4982:	c5 01       	movw	r24, r10
    4984:	0e 94 0e 34 	call	0x681c	; 0x681c <strncasecmp>
    4988:	89 2b       	or	r24, r25
    498a:	49 f4       	brne	.+18     	; 0x499e <_reply2ReturnCode+0xa8>
    498c:	f3 01       	movw	r30, r6
    498e:	ee 0f       	add	r30, r30
    4990:	ff 1f       	adc	r31, r31
    4992:	e6 0d       	add	r30, r6
    4994:	f7 1d       	adc	r31, r7
    4996:	eb 5d       	subi	r30, 0xDB	; 219
    4998:	f8 4f       	sbci	r31, 0xF8	; 248
    499a:	20 80       	ld	r2, Z
    499c:	0d c0       	rjmp	.+26     	; 0x49b8 <_reply2ReturnCode+0xc2>
    499e:	8f ef       	ldi	r24, 0xFF	; 255
    49a0:	e8 1a       	sub	r14, r24
    49a2:	f8 0a       	sbc	r15, r24
    49a4:	e3 e0       	ldi	r30, 0x03	; 3
    49a6:	8e 0e       	add	r8, r30
    49a8:	91 1c       	adc	r9, r1
    49aa:	f1 e1       	ldi	r31, 0x11	; 17
    49ac:	ef 16       	cp	r14, r31
    49ae:	f1 04       	cpc	r15, r1
    49b0:	39 f6       	brne	.-114    	; 0x4940 <_reply2ReturnCode+0x4a>
    49b2:	68 94       	set
    49b4:	22 24       	eor	r2, r2
    49b6:	24 f8       	bld	r2, 4
    49b8:	82 2d       	mov	r24, r2
    49ba:	df 91       	pop	r29
    49bc:	cf 91       	pop	r28
    49be:	1f 91       	pop	r17
    49c0:	0f 91       	pop	r16
    49c2:	ff 90       	pop	r15
    49c4:	ef 90       	pop	r14
    49c6:	df 90       	pop	r13
    49c8:	cf 90       	pop	r12
    49ca:	bf 90       	pop	r11
    49cc:	af 90       	pop	r10
    49ce:	9f 90       	pop	r9
    49d0:	8f 90       	pop	r8
    49d2:	7f 90       	pop	r7
    49d4:	6f 90       	pop	r6
    49d6:	5f 90       	pop	r5
    49d8:	4f 90       	pop	r4
    49da:	3f 90       	pop	r3
    49dc:	2f 90       	pop	r2
    49de:	08 95       	ret

000049e0 <_uploadMessageRc>:
    49e0:	30 df       	rcall	.-416    	; 0x4842 <_uploadMessage>
    49e2:	89 cf       	rjmp	.-238    	; 0x48f6 <_reply2ReturnCode>
    49e4:	08 95       	ret

000049e6 <lora_driver_flushBuffers>:
    49e6:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <_serialReplyBufferHandle>
    49ea:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle+0x1>
    49ee:	0c 94 f3 0e 	jmp	0x1de6	; 0x1de6 <xStreamBufferReset>
    49f2:	08 95       	ret

000049f4 <lora_driver_initialise>:
    49f4:	8f 92       	push	r8
    49f6:	9f 92       	push	r9
    49f8:	af 92       	push	r10
    49fa:	cf 92       	push	r12
    49fc:	ef 92       	push	r14
    49fe:	0f 93       	push	r16
    4a00:	1f 93       	push	r17
    4a02:	cf 93       	push	r28
    4a04:	c8 2f       	mov	r28, r24
    4a06:	8b 01       	movw	r16, r22
    4a08:	41 e0       	ldi	r20, 0x01	; 1
    4a0a:	60 e0       	ldi	r22, 0x00	; 0
    4a0c:	70 e0       	ldi	r23, 0x00	; 0
    4a0e:	88 ec       	ldi	r24, 0xC8	; 200
    4a10:	90 e0       	ldi	r25, 0x00	; 0
    4a12:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <xStreamBufferGenericCreate>
    4a16:	90 93 d8 12 	sts	0x12D8, r25	; 0x8012d8 <_serialReplyBufferHandle+0x1>
    4a1a:	80 93 d7 12 	sts	0x12D7, r24	; 0x8012d7 <_serialReplyBufferHandle>
    4a1e:	10 93 d6 12 	sts	0x12D6, r17	; 0x8012d6 <_downlinkMessageBuffer+0x1>
    4a22:	00 93 d5 12 	sts	0x12D5, r16	; 0x8012d5 <_downlinkMessageBuffer>
    4a26:	0f 2e       	mov	r0, r31
    4a28:	fb ed       	ldi	r31, 0xDB	; 219
    4a2a:	8f 2e       	mov	r8, r31
    4a2c:	f3 e2       	ldi	r31, 0x23	; 35
    4a2e:	9f 2e       	mov	r9, r31
    4a30:	f0 2d       	mov	r31, r0
    4a32:	68 94       	set
    4a34:	aa 24       	eor	r10, r10
    4a36:	a6 f8       	bld	r10, 6
    4a38:	68 94       	set
    4a3a:	cc 24       	eor	r12, r12
    4a3c:	c6 f8       	bld	r12, 6
    4a3e:	e1 2c       	mov	r14, r1
    4a40:	00 e0       	ldi	r16, 0x00	; 0
    4a42:	23 e0       	ldi	r18, 0x03	; 3
    4a44:	40 e0       	ldi	r20, 0x00	; 0
    4a46:	51 ee       	ldi	r21, 0xE1	; 225
    4a48:	60 e0       	ldi	r22, 0x00	; 0
    4a4a:	70 e0       	ldi	r23, 0x00	; 0
    4a4c:	8c 2f       	mov	r24, r28
    4a4e:	12 d4       	rcall	.+2084   	; 0x5274 <serial_create>
    4a50:	90 93 da 12 	sts	0x12DA, r25	; 0x8012da <_rn2483_serial+0x1>
    4a54:	80 93 d9 12 	sts	0x12D9, r24	; 0x8012d9 <_rn2483_serial>
    4a58:	e7 e0       	ldi	r30, 0x07	; 7
    4a5a:	f1 e0       	ldi	r31, 0x01	; 1
    4a5c:	80 81       	ld	r24, Z
    4a5e:	80 61       	ori	r24, 0x10	; 16
    4a60:	80 83       	st	Z, r24
    4a62:	cf 91       	pop	r28
    4a64:	1f 91       	pop	r17
    4a66:	0f 91       	pop	r16
    4a68:	ef 90       	pop	r14
    4a6a:	cf 90       	pop	r12
    4a6c:	af 90       	pop	r10
    4a6e:	9f 90       	pop	r9
    4a70:	8f 90       	pop	r8
    4a72:	08 95       	ret

00004a74 <lora_driver_resetRn2483>:
    4a74:	88 23       	and	r24, r24
    4a76:	31 f0       	breq	.+12     	; 0x4a84 <lora_driver_resetRn2483+0x10>
    4a78:	e8 e0       	ldi	r30, 0x08	; 8
    4a7a:	f1 e0       	ldi	r31, 0x01	; 1
    4a7c:	80 81       	ld	r24, Z
    4a7e:	8f 7e       	andi	r24, 0xEF	; 239
    4a80:	80 83       	st	Z, r24
    4a82:	08 95       	ret
    4a84:	e8 e0       	ldi	r30, 0x08	; 8
    4a86:	f1 e0       	ldi	r31, 0x01	; 1
    4a88:	80 81       	ld	r24, Z
    4a8a:	80 61       	ori	r24, 0x10	; 16
    4a8c:	80 83       	st	Z, r24
    4a8e:	08 95       	ret

00004a90 <lora_driver_rn2483FactoryReset>:
    4a90:	60 e0       	ldi	r22, 0x00	; 0
    4a92:	70 e0       	ldi	r23, 0x00	; 0
    4a94:	8b ea       	ldi	r24, 0xAB	; 171
    4a96:	94 e0       	ldi	r25, 0x04	; 4
    4a98:	d4 de       	rcall	.-600    	; 0x4842 <_uploadMessage>
    4a9a:	e0 e6       	ldi	r30, 0x60	; 96
    4a9c:	f3 e1       	ldi	r31, 0x13	; 19
    4a9e:	01 90       	ld	r0, Z+
    4aa0:	00 20       	and	r0, r0
    4aa2:	e9 f7       	brne	.-6      	; 0x4a9e <lora_driver_rn2483FactoryReset+0xe>
    4aa4:	31 97       	sbiw	r30, 0x01	; 1
    4aa6:	e0 56       	subi	r30, 0x60	; 96
    4aa8:	f3 41       	sbci	r31, 0x13	; 19
    4aaa:	81 e0       	ldi	r24, 0x01	; 1
    4aac:	75 97       	sbiw	r30, 0x15	; 21
    4aae:	08 f0       	brcs	.+2      	; 0x4ab2 <lora_driver_rn2483FactoryReset+0x22>
    4ab0:	80 e0       	ldi	r24, 0x00	; 0
    4ab2:	08 95       	ret

00004ab4 <lora_driver_getRn2483Hweui>:
    4ab4:	cf 93       	push	r28
    4ab6:	df 93       	push	r29
    4ab8:	ec 01       	movw	r28, r24
    4aba:	60 e0       	ldi	r22, 0x00	; 0
    4abc:	70 e0       	ldi	r23, 0x00	; 0
    4abe:	8c eb       	ldi	r24, 0xBC	; 188
    4ac0:	94 e0       	ldi	r25, 0x04	; 4
    4ac2:	bf de       	rcall	.-642    	; 0x4842 <_uploadMessage>
    4ac4:	e0 e6       	ldi	r30, 0x60	; 96
    4ac6:	f3 e1       	ldi	r31, 0x13	; 19
    4ac8:	01 90       	ld	r0, Z+
    4aca:	00 20       	and	r0, r0
    4acc:	e9 f7       	brne	.-6      	; 0x4ac8 <lora_driver_getRn2483Hweui+0x14>
    4ace:	e1 57       	subi	r30, 0x71	; 113
    4ad0:	f3 41       	sbci	r31, 0x13	; 19
    4ad2:	39 f4       	brne	.+14     	; 0x4ae2 <lora_driver_getRn2483Hweui+0x2e>
    4ad4:	60 e6       	ldi	r22, 0x60	; 96
    4ad6:	73 e1       	ldi	r23, 0x13	; 19
    4ad8:	ce 01       	movw	r24, r28
    4ada:	0e 94 07 34 	call	0x680e	; 0x680e <strcpy>
    4ade:	80 e0       	ldi	r24, 0x00	; 0
    4ae0:	02 c0       	rjmp	.+4      	; 0x4ae6 <lora_driver_getRn2483Hweui+0x32>
    4ae2:	18 82       	st	Y, r1
    4ae4:	81 e0       	ldi	r24, 0x01	; 1
    4ae6:	df 91       	pop	r29
    4ae8:	cf 91       	pop	r28
    4aea:	08 95       	ret

00004aec <lora_driver_setDeviceIdentifier>:
    4aec:	fc 01       	movw	r30, r24
    4aee:	01 90       	ld	r0, Z+
    4af0:	00 20       	and	r0, r0
    4af2:	e9 f7       	brne	.-6      	; 0x4aee <lora_driver_setDeviceIdentifier+0x2>
    4af4:	9f 01       	movw	r18, r30
    4af6:	21 51       	subi	r18, 0x11	; 17
    4af8:	31 09       	sbc	r19, r1
    4afa:	28 17       	cp	r18, r24
    4afc:	39 07       	cpc	r19, r25
    4afe:	29 f4       	brne	.+10     	; 0x4b0a <lora_driver_setDeviceIdentifier+0x1e>
    4b00:	bc 01       	movw	r22, r24
    4b02:	8a ee       	ldi	r24, 0xEA	; 234
    4b04:	94 e0       	ldi	r25, 0x04	; 4
    4b06:	6c cf       	rjmp	.-296    	; 0x49e0 <_uploadMessageRc>
    4b08:	08 95       	ret
    4b0a:	89 e0       	ldi	r24, 0x09	; 9
    4b0c:	08 95       	ret

00004b0e <lora_driver_setApplicationIdentifier>:
    4b0e:	fc 01       	movw	r30, r24
    4b10:	01 90       	ld	r0, Z+
    4b12:	00 20       	and	r0, r0
    4b14:	e9 f7       	brne	.-6      	; 0x4b10 <lora_driver_setApplicationIdentifier+0x2>
    4b16:	9f 01       	movw	r18, r30
    4b18:	21 51       	subi	r18, 0x11	; 17
    4b1a:	31 09       	sbc	r19, r1
    4b1c:	28 17       	cp	r18, r24
    4b1e:	39 07       	cpc	r19, r25
    4b20:	29 f4       	brne	.+10     	; 0x4b2c <lora_driver_setApplicationIdentifier+0x1e>
    4b22:	bc 01       	movw	r22, r24
    4b24:	89 ef       	ldi	r24, 0xF9	; 249
    4b26:	94 e0       	ldi	r25, 0x04	; 4
    4b28:	5b cf       	rjmp	.-330    	; 0x49e0 <_uploadMessageRc>
    4b2a:	08 95       	ret
    4b2c:	89 e0       	ldi	r24, 0x09	; 9
    4b2e:	08 95       	ret

00004b30 <lora_driver_setApplicationKey>:
    4b30:	fc 01       	movw	r30, r24
    4b32:	01 90       	ld	r0, Z+
    4b34:	00 20       	and	r0, r0
    4b36:	e9 f7       	brne	.-6      	; 0x4b32 <lora_driver_setApplicationKey+0x2>
    4b38:	9f 01       	movw	r18, r30
    4b3a:	21 52       	subi	r18, 0x21	; 33
    4b3c:	31 09       	sbc	r19, r1
    4b3e:	28 17       	cp	r18, r24
    4b40:	39 07       	cpc	r19, r25
    4b42:	29 f4       	brne	.+10     	; 0x4b4e <lora_driver_setApplicationKey+0x1e>
    4b44:	bc 01       	movw	r22, r24
    4b46:	88 e0       	ldi	r24, 0x08	; 8
    4b48:	95 e0       	ldi	r25, 0x05	; 5
    4b4a:	4a cf       	rjmp	.-364    	; 0x49e0 <_uploadMessageRc>
    4b4c:	08 95       	ret
    4b4e:	89 e0       	ldi	r24, 0x09	; 9
    4b50:	08 95       	ret

00004b52 <lora_driver_saveMac>:
    4b52:	60 e0       	ldi	r22, 0x00	; 0
    4b54:	70 e0       	ldi	r23, 0x00	; 0
    4b56:	87 e4       	ldi	r24, 0x47	; 71
    4b58:	95 e0       	ldi	r25, 0x05	; 5
    4b5a:	42 cf       	rjmp	.-380    	; 0x49e0 <_uploadMessageRc>
    4b5c:	08 95       	ret

00004b5e <lora_driver_join>:
    4b5e:	0f 93       	push	r16
    4b60:	1f 93       	push	r17
    4b62:	e8 2f       	mov	r30, r24
    4b64:	f0 e0       	ldi	r31, 0x00	; 0
    4b66:	ee 0f       	add	r30, r30
    4b68:	ff 1f       	adc	r31, r31
    4b6a:	ef 5d       	subi	r30, 0xDF	; 223
    4b6c:	f8 4f       	sbci	r31, 0xF8	; 248
    4b6e:	60 81       	ld	r22, Z
    4b70:	71 81       	ldd	r23, Z+1	; 0x01
    4b72:	80 e5       	ldi	r24, 0x50	; 80
    4b74:	95 e0       	ldi	r25, 0x05	; 5
    4b76:	34 df       	rcall	.-408    	; 0x49e0 <_uploadMessageRc>
    4b78:	81 11       	cpse	r24, r1
    4b7a:	14 c0       	rjmp	.+40     	; 0x4ba4 <lora_driver_join+0x46>
    4b7c:	08 e2       	ldi	r16, 0x28	; 40
    4b7e:	15 e0       	ldi	r17, 0x05	; 5
    4b80:	20 e0       	ldi	r18, 0x00	; 0
    4b82:	30 e0       	ldi	r19, 0x00	; 0
    4b84:	4d e2       	ldi	r20, 0x2D	; 45
    4b86:	50 e0       	ldi	r21, 0x00	; 0
    4b88:	60 e6       	ldi	r22, 0x60	; 96
    4b8a:	73 e1       	ldi	r23, 0x13	; 19
    4b8c:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <_serialReplyBufferHandle>
    4b90:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle+0x1>
    4b94:	0e 94 2c 10 	call	0x2058	; 0x2058 <xStreamBufferReceive>
    4b98:	88 23       	and	r24, r24
    4b9a:	21 f0       	breq	.+8      	; 0x4ba4 <lora_driver_join+0x46>
    4b9c:	80 e6       	ldi	r24, 0x60	; 96
    4b9e:	93 e1       	ldi	r25, 0x13	; 19
    4ba0:	aa de       	rcall	.-684    	; 0x48f6 <_reply2ReturnCode>
    4ba2:	03 c0       	rjmp	.+6      	; 0x4baa <lora_driver_join+0x4c>
    4ba4:	80 e6       	ldi	r24, 0x60	; 96
    4ba6:	93 e1       	ldi	r25, 0x13	; 19
    4ba8:	a6 de       	rcall	.-692    	; 0x48f6 <_reply2ReturnCode>
    4baa:	1f 91       	pop	r17
    4bac:	0f 91       	pop	r16
    4bae:	08 95       	ret

00004bb0 <lora_driver_sendUploadMessage>:
    4bb0:	0f 93       	push	r16
    4bb2:	1f 93       	push	r17
    4bb4:	cf 93       	push	r28
    4bb6:	df 93       	push	r29
    4bb8:	1f 92       	push	r1
    4bba:	cd b7       	in	r28, 0x3d	; 61
    4bbc:	de b7       	in	r29, 0x3e	; 62
    4bbe:	db 01       	movw	r26, r22
    4bc0:	11 96       	adiw	r26, 0x01	; 1
    4bc2:	9c 91       	ld	r25, X
    4bc4:	11 97       	sbiw	r26, 0x01	; 1
    4bc6:	95 31       	cpi	r25, 0x15	; 21
    4bc8:	08 f0       	brcs	.+2      	; 0x4bcc <lora_driver_sendUploadMessage+0x1c>
    4bca:	b4 c0       	rjmp	.+360    	; 0x4d34 <lora_driver_sendUploadMessage+0x184>
    4bcc:	99 23       	and	r25, r25
    4bce:	81 f1       	breq	.+96     	; 0x4c30 <lora_driver_sendUploadMessage+0x80>
    4bd0:	60 e0       	ldi	r22, 0x00	; 0
    4bd2:	70 e0       	ldi	r23, 0x00	; 0
    4bd4:	27 2f       	mov	r18, r23
    4bd6:	30 e0       	ldi	r19, 0x00	; 0
    4bd8:	46 2f       	mov	r20, r22
    4bda:	50 e0       	ldi	r21, 0x00	; 0
    4bdc:	fd 01       	movw	r30, r26
    4bde:	e4 0f       	add	r30, r20
    4be0:	f5 1f       	adc	r31, r21
    4be2:	92 81       	ldd	r25, Z+2	; 0x02
    4be4:	92 95       	swap	r25
    4be6:	9f 70       	andi	r25, 0x0F	; 15
    4be8:	9a 30       	cpi	r25, 0x0A	; 10
    4bea:	10 f0       	brcs	.+4      	; 0x4bf0 <lora_driver_sendUploadMessage+0x40>
    4bec:	99 5c       	subi	r25, 0xC9	; 201
    4bee:	01 c0       	rjmp	.+2      	; 0x4bf2 <lora_driver_sendUploadMessage+0x42>
    4bf0:	90 5d       	subi	r25, 0xD0	; 208
    4bf2:	f9 01       	movw	r30, r18
    4bf4:	ef 50       	subi	r30, 0x0F	; 15
    4bf6:	fd 4e       	sbci	r31, 0xED	; 237
    4bf8:	90 83       	st	Z, r25
    4bfa:	2f 5f       	subi	r18, 0xFF	; 255
    4bfc:	3f 4f       	sbci	r19, 0xFF	; 255
    4bfe:	fd 01       	movw	r30, r26
    4c00:	e4 0f       	add	r30, r20
    4c02:	f5 1f       	adc	r31, r21
    4c04:	92 81       	ldd	r25, Z+2	; 0x02
    4c06:	9f 70       	andi	r25, 0x0F	; 15
    4c08:	49 2f       	mov	r20, r25
    4c0a:	50 e0       	ldi	r21, 0x00	; 0
    4c0c:	4a 30       	cpi	r20, 0x0A	; 10
    4c0e:	51 05       	cpc	r21, r1
    4c10:	14 f0       	brlt	.+4      	; 0x4c16 <lora_driver_sendUploadMessage+0x66>
    4c12:	99 5c       	subi	r25, 0xC9	; 201
    4c14:	01 c0       	rjmp	.+2      	; 0x4c18 <lora_driver_sendUploadMessage+0x68>
    4c16:	90 5d       	subi	r25, 0xD0	; 208
    4c18:	f9 01       	movw	r30, r18
    4c1a:	ef 50       	subi	r30, 0x0F	; 15
    4c1c:	fd 4e       	sbci	r31, 0xED	; 237
    4c1e:	90 83       	st	Z, r25
    4c20:	7e 5f       	subi	r23, 0xFE	; 254
    4c22:	6f 5f       	subi	r22, 0xFF	; 255
    4c24:	11 96       	adiw	r26, 0x01	; 1
    4c26:	9c 91       	ld	r25, X
    4c28:	11 97       	sbiw	r26, 0x01	; 1
    4c2a:	69 17       	cp	r22, r25
    4c2c:	98 f2       	brcs	.-90     	; 0x4bd4 <lora_driver_sendUploadMessage+0x24>
    4c2e:	01 c0       	rjmp	.+2      	; 0x4c32 <lora_driver_sendUploadMessage+0x82>
    4c30:	70 e0       	ldi	r23, 0x00	; 0
    4c32:	e7 2f       	mov	r30, r23
    4c34:	f0 e0       	ldi	r31, 0x00	; 0
    4c36:	ef 50       	subi	r30, 0x0F	; 15
    4c38:	fd 4e       	sbci	r31, 0xED	; 237
    4c3a:	10 82       	st	Z, r1
    4c3c:	4c 91       	ld	r20, X
    4c3e:	81 11       	cpse	r24, r1
    4c40:	03 c0       	rjmp	.+6      	; 0x4c48 <lora_driver_sendUploadMessage+0x98>
    4c42:	89 e5       	ldi	r24, 0x59	; 89
    4c44:	95 e0       	ldi	r25, 0x05	; 5
    4c46:	02 c0       	rjmp	.+4      	; 0x4c4c <lora_driver_sendUploadMessage+0x9c>
    4c48:	8b e5       	ldi	r24, 0x5B	; 91
    4c4a:	95 e0       	ldi	r25, 0x05	; 5
    4c4c:	21 ef       	ldi	r18, 0xF1	; 241
    4c4e:	32 e1       	ldi	r19, 0x12	; 18
    4c50:	3f 93       	push	r19
    4c52:	2f 93       	push	r18
    4c54:	1f 92       	push	r1
    4c56:	4f 93       	push	r20
    4c58:	9f 93       	push	r25
    4c5a:	8f 93       	push	r24
    4c5c:	8f e5       	ldi	r24, 0x5F	; 95
    4c5e:	95 e0       	ldi	r25, 0x05	; 5
    4c60:	9f 93       	push	r25
    4c62:	8f 93       	push	r24
    4c64:	83 e3       	ldi	r24, 0x33	; 51
    4c66:	93 e1       	ldi	r25, 0x13	; 19
    4c68:	9f 93       	push	r25
    4c6a:	8f 93       	push	r24
    4c6c:	0e 94 69 34 	call	0x68d2	; 0x68d2 <sprintf>
    4c70:	60 e0       	ldi	r22, 0x00	; 0
    4c72:	70 e0       	ldi	r23, 0x00	; 0
    4c74:	83 e3       	ldi	r24, 0x33	; 51
    4c76:	93 e1       	ldi	r25, 0x13	; 19
    4c78:	b3 de       	rcall	.-666    	; 0x49e0 <_uploadMessageRc>
    4c7a:	0f b6       	in	r0, 0x3f	; 63
    4c7c:	f8 94       	cli
    4c7e:	de bf       	out	0x3e, r29	; 62
    4c80:	0f be       	out	0x3f, r0	; 63
    4c82:	cd bf       	out	0x3d, r28	; 61
    4c84:	81 11       	cpse	r24, r1
    4c86:	59 c0       	rjmp	.+178    	; 0x4d3a <lora_driver_sendUploadMessage+0x18a>
    4c88:	08 e2       	ldi	r16, 0x28	; 40
    4c8a:	15 e0       	ldi	r17, 0x05	; 5
    4c8c:	20 e0       	ldi	r18, 0x00	; 0
    4c8e:	30 e0       	ldi	r19, 0x00	; 0
    4c90:	4d e2       	ldi	r20, 0x2D	; 45
    4c92:	50 e0       	ldi	r21, 0x00	; 0
    4c94:	60 e6       	ldi	r22, 0x60	; 96
    4c96:	73 e1       	ldi	r23, 0x13	; 19
    4c98:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <_serialReplyBufferHandle>
    4c9c:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle+0x1>
    4ca0:	0e 94 2c 10 	call	0x2058	; 0x2058 <xStreamBufferReceive>
    4ca4:	88 23       	and	r24, r24
    4ca6:	09 f4       	brne	.+2      	; 0x4caa <lora_driver_sendUploadMessage+0xfa>
    4ca8:	47 c0       	rjmp	.+142    	; 0x4d38 <lora_driver_sendUploadMessage+0x188>
    4caa:	80 e6       	ldi	r24, 0x60	; 96
    4cac:	93 e1       	ldi	r25, 0x13	; 19
    4cae:	23 de       	rcall	.-954    	; 0x48f6 <_reply2ReturnCode>
    4cb0:	8e 30       	cpi	r24, 0x0E	; 14
    4cb2:	09 f0       	breq	.+2      	; 0x4cb6 <lora_driver_sendUploadMessage+0x106>
    4cb4:	42 c0       	rjmp	.+132    	; 0x4d3a <lora_driver_sendUploadMessage+0x18a>
    4cb6:	87 e0       	ldi	r24, 0x07	; 7
    4cb8:	89 83       	std	Y+1, r24	; 0x01
    4cba:	80 91 d5 12 	lds	r24, 0x12D5	; 0x8012d5 <_downlinkMessageBuffer>
    4cbe:	90 91 d6 12 	lds	r25, 0x12D6	; 0x8012d6 <_downlinkMessageBuffer+0x1>
    4cc2:	89 2b       	or	r24, r25
    4cc4:	a9 f1       	breq	.+106    	; 0x4d30 <lora_driver_sendUploadMessage+0x180>
    4cc6:	be 01       	movw	r22, r28
    4cc8:	6f 5f       	subi	r22, 0xFF	; 255
    4cca:	7f 4f       	sbci	r23, 0xFF	; 255
    4ccc:	80 e6       	ldi	r24, 0x60	; 96
    4cce:	93 e1       	ldi	r25, 0x13	; 19
    4cd0:	68 d1       	rcall	.+720    	; 0x4fa2 <decode_port_no>
    4cd2:	80 93 db 12 	sts	0x12DB, r24	; 0x8012db <_downlinkPayload>
    4cd6:	e9 81       	ldd	r30, Y+1	; 0x01
    4cd8:	f0 e0       	ldi	r31, 0x00	; 0
    4cda:	e0 5a       	subi	r30, 0xA0	; 160
    4cdc:	fc 4e       	sbci	r31, 0xEC	; 236
    4cde:	df 01       	movw	r26, r30
    4ce0:	0d 90       	ld	r0, X+
    4ce2:	00 20       	and	r0, r0
    4ce4:	e9 f7       	brne	.-6      	; 0x4ce0 <lora_driver_sendUploadMessage+0x130>
    4ce6:	11 97       	sbiw	r26, 0x01	; 1
    4ce8:	ae 1b       	sub	r26, r30
    4cea:	bf 0b       	sbc	r27, r31
    4cec:	aa 23       	and	r26, r26
    4cee:	91 f0       	breq	.+36     	; 0x4d14 <lora_driver_sendUploadMessage+0x164>
    4cf0:	bb 27       	eor	r27, r27
    4cf2:	cd 01       	movw	r24, r26
    4cf4:	01 97       	sbiw	r24, 0x01	; 1
    4cf6:	9c 01       	movw	r18, r24
    4cf8:	12 f4       	brpl	.+4      	; 0x4cfe <lora_driver_sendUploadMessage+0x14e>
    4cfa:	2f 5f       	subi	r18, 0xFF	; 255
    4cfc:	3f 4f       	sbci	r19, 0xFF	; 255
    4cfe:	35 95       	asr	r19
    4d00:	27 95       	ror	r18
    4d02:	20 93 dc 12 	sts	0x12DC, r18	; 0x8012dc <_downlinkPayload+0x1>
    4d06:	af 01       	movw	r20, r30
    4d08:	4f 5f       	subi	r20, 0xFF	; 255
    4d0a:	5f 4f       	sbci	r21, 0xFF	; 255
    4d0c:	64 e1       	ldi	r22, 0x14	; 20
    4d0e:	8d ed       	ldi	r24, 0xDD	; 221
    4d10:	92 e1       	ldi	r25, 0x12	; 18
    4d12:	73 d1       	rcall	.+742    	; 0x4ffa <decode_hexadecimal_string_bytes>
    4d14:	01 e0       	ldi	r16, 0x01	; 1
    4d16:	10 e0       	ldi	r17, 0x00	; 0
    4d18:	20 e0       	ldi	r18, 0x00	; 0
    4d1a:	30 e0       	ldi	r19, 0x00	; 0
    4d1c:	46 e1       	ldi	r20, 0x16	; 22
    4d1e:	50 e0       	ldi	r21, 0x00	; 0
    4d20:	6b ed       	ldi	r22, 0xDB	; 219
    4d22:	72 e1       	ldi	r23, 0x12	; 18
    4d24:	80 91 d5 12 	lds	r24, 0x12D5	; 0x8012d5 <_downlinkMessageBuffer>
    4d28:	90 91 d6 12 	lds	r25, 0x12D6	; 0x8012d6 <_downlinkMessageBuffer+0x1>
    4d2c:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <xStreamBufferSend>
    4d30:	8e e0       	ldi	r24, 0x0E	; 14
    4d32:	03 c0       	rjmp	.+6      	; 0x4d3a <lora_driver_sendUploadMessage+0x18a>
    4d34:	84 e1       	ldi	r24, 0x14	; 20
    4d36:	01 c0       	rjmp	.+2      	; 0x4d3a <lora_driver_sendUploadMessage+0x18a>
    4d38:	80 e0       	ldi	r24, 0x00	; 0
    4d3a:	0f 90       	pop	r0
    4d3c:	df 91       	pop	r29
    4d3e:	cf 91       	pop	r28
    4d40:	1f 91       	pop	r17
    4d42:	0f 91       	pop	r16
    4d44:	08 95       	ret

00004d46 <lora_driver_setAdaptiveDataRate>:
    4d46:	81 30       	cpi	r24, 0x01	; 1
    4d48:	19 f0       	breq	.+6      	; 0x4d50 <lora_driver_setAdaptiveDataRate+0xa>
    4d4a:	6f e6       	ldi	r22, 0x6F	; 111
    4d4c:	75 e0       	ldi	r23, 0x05	; 5
    4d4e:	02 c0       	rjmp	.+4      	; 0x4d54 <lora_driver_setAdaptiveDataRate+0xe>
    4d50:	68 e4       	ldi	r22, 0x48	; 72
    4d52:	76 e0       	ldi	r23, 0x06	; 6
    4d54:	83 e7       	ldi	r24, 0x73	; 115
    4d56:	95 e0       	ldi	r25, 0x05	; 5
    4d58:	43 ce       	rjmp	.-890    	; 0x49e0 <_uploadMessageRc>
    4d5a:	08 95       	ret

00004d5c <lora_driver_setReceiveDelay>:
    4d5c:	9f 93       	push	r25
    4d5e:	8f 93       	push	r24
    4d60:	84 ea       	ldi	r24, 0xA4	; 164
    4d62:	95 e0       	ldi	r25, 0x05	; 5
    4d64:	9f 93       	push	r25
    4d66:	8f 93       	push	r24
    4d68:	83 e3       	ldi	r24, 0x33	; 51
    4d6a:	93 e1       	ldi	r25, 0x13	; 19
    4d6c:	9f 93       	push	r25
    4d6e:	8f 93       	push	r24
    4d70:	0e 94 69 34 	call	0x68d2	; 0x68d2 <sprintf>
    4d74:	60 e0       	ldi	r22, 0x00	; 0
    4d76:	70 e0       	ldi	r23, 0x00	; 0
    4d78:	83 e3       	ldi	r24, 0x33	; 51
    4d7a:	93 e1       	ldi	r25, 0x13	; 19
    4d7c:	31 de       	rcall	.-926    	; 0x49e0 <_uploadMessageRc>
    4d7e:	0f 90       	pop	r0
    4d80:	0f 90       	pop	r0
    4d82:	0f 90       	pop	r0
    4d84:	0f 90       	pop	r0
    4d86:	0f 90       	pop	r0
    4d88:	0f 90       	pop	r0
    4d8a:	08 95       	ret

00004d8c <lora_driver_configureToEu868>:
    4d8c:	2f 92       	push	r2
    4d8e:	3f 92       	push	r3
    4d90:	4f 92       	push	r4
    4d92:	5f 92       	push	r5
    4d94:	6f 92       	push	r6
    4d96:	7f 92       	push	r7
    4d98:	8f 92       	push	r8
    4d9a:	9f 92       	push	r9
    4d9c:	af 92       	push	r10
    4d9e:	bf 92       	push	r11
    4da0:	cf 92       	push	r12
    4da2:	df 92       	push	r13
    4da4:	ef 92       	push	r14
    4da6:	ff 92       	push	r15
    4da8:	0f 93       	push	r16
    4daa:	1f 93       	push	r17
    4dac:	cf 93       	push	r28
    4dae:	df 93       	push	r29
    4db0:	cd b7       	in	r28, 0x3d	; 61
    4db2:	de b7       	in	r29, 0x3e	; 62
    4db4:	a0 97       	sbiw	r28, 0x20	; 32
    4db6:	0f b6       	in	r0, 0x3f	; 63
    4db8:	f8 94       	cli
    4dba:	de bf       	out	0x3e, r29	; 62
    4dbc:	0f be       	out	0x3f, r0	; 63
    4dbe:	cd bf       	out	0x3d, r28	; 61
    4dc0:	61 ed       	ldi	r22, 0xD1	; 209
    4dc2:	75 e0       	ldi	r23, 0x05	; 5
    4dc4:	8d ed       	ldi	r24, 0xDD	; 221
    4dc6:	95 e0       	ldi	r25, 0x05	; 5
    4dc8:	3c dd       	rcall	.-1416   	; 0x4842 <_uploadMessage>
    4dca:	95 dd       	rcall	.-1238   	; 0x48f6 <_reply2ReturnCode>
    4dcc:	81 11       	cpse	r24, r1
    4dce:	a3 c0       	rjmp	.+326    	; 0x4f16 <lora_driver_configureToEu868+0x18a>
    4dd0:	80 e2       	ldi	r24, 0x20	; 32
    4dd2:	e2 e2       	ldi	r30, 0x22	; 34
    4dd4:	f2 e0       	ldi	r31, 0x02	; 2
    4dd6:	de 01       	movw	r26, r28
    4dd8:	11 96       	adiw	r26, 0x01	; 1
    4dda:	01 90       	ld	r0, Z+
    4ddc:	0d 92       	st	X+, r0
    4dde:	8a 95       	dec	r24
    4de0:	e1 f7       	brne	.-8      	; 0x4dda <lora_driver_configureToEu868+0x4e>
    4de2:	9e 01       	movw	r18, r28
    4de4:	2f 5f       	subi	r18, 0xFF	; 255
    4de6:	3f 4f       	sbci	r19, 0xFF	; 255
    4de8:	69 01       	movw	r12, r18
    4dea:	e1 2c       	mov	r14, r1
    4dec:	f1 2c       	mov	r15, r1
    4dee:	0f 2e       	mov	r0, r31
    4df0:	f9 ee       	ldi	r31, 0xE9	; 233
    4df2:	af 2e       	mov	r10, r31
    4df4:	f5 e0       	ldi	r31, 0x05	; 5
    4df6:	bf 2e       	mov	r11, r31
    4df8:	f0 2d       	mov	r31, r0
    4dfa:	03 e3       	ldi	r16, 0x33	; 51
    4dfc:	13 e1       	ldi	r17, 0x13	; 19
    4dfe:	0f 2e       	mov	r0, r31
    4e00:	f2 e0       	ldi	r31, 0x02	; 2
    4e02:	4f 2e       	mov	r4, r31
    4e04:	f6 e0       	ldi	r31, 0x06	; 6
    4e06:	5f 2e       	mov	r5, r31
    4e08:	f0 2d       	mov	r31, r0
    4e0a:	0f 2e       	mov	r0, r31
    4e0c:	f9 e1       	ldi	r31, 0x19	; 25
    4e0e:	8f 2e       	mov	r8, r31
    4e10:	f6 e0       	ldi	r31, 0x06	; 6
    4e12:	9f 2e       	mov	r9, r31
    4e14:	f0 2d       	mov	r31, r0
    4e16:	0f 2e       	mov	r0, r31
    4e18:	f3 e3       	ldi	r31, 0x33	; 51
    4e1a:	6f 2e       	mov	r6, r31
    4e1c:	f6 e0       	ldi	r31, 0x06	; 6
    4e1e:	7f 2e       	mov	r7, r31
    4e20:	f0 2d       	mov	r31, r0
    4e22:	3e 2c       	mov	r3, r14
    4e24:	2f 2c       	mov	r2, r15
    4e26:	ff 92       	push	r15
    4e28:	ef 92       	push	r14
    4e2a:	bf 92       	push	r11
    4e2c:	af 92       	push	r10
    4e2e:	1f 93       	push	r17
    4e30:	0f 93       	push	r16
    4e32:	0e 94 69 34 	call	0x68d2	; 0x68d2 <sprintf>
    4e36:	60 e0       	ldi	r22, 0x00	; 0
    4e38:	70 e0       	ldi	r23, 0x00	; 0
    4e3a:	c8 01       	movw	r24, r16
    4e3c:	02 dd       	rcall	.-1532   	; 0x4842 <_uploadMessage>
    4e3e:	5b dd       	rcall	.-1354   	; 0x48f6 <_reply2ReturnCode>
    4e40:	0f 90       	pop	r0
    4e42:	0f 90       	pop	r0
    4e44:	0f 90       	pop	r0
    4e46:	0f 90       	pop	r0
    4e48:	0f 90       	pop	r0
    4e4a:	0f 90       	pop	r0
    4e4c:	81 11       	cpse	r24, r1
    4e4e:	63 c0       	rjmp	.+198    	; 0x4f16 <lora_driver_configureToEu868+0x18a>
    4e50:	32 e0       	ldi	r19, 0x02	; 2
    4e52:	3e 15       	cp	r19, r14
    4e54:	e8 f4       	brcc	.+58     	; 0x4e90 <lora_driver_configureToEu868+0x104>
    4e56:	f6 01       	movw	r30, r12
    4e58:	83 81       	ldd	r24, Z+3	; 0x03
    4e5a:	8f 93       	push	r24
    4e5c:	82 81       	ldd	r24, Z+2	; 0x02
    4e5e:	8f 93       	push	r24
    4e60:	81 81       	ldd	r24, Z+1	; 0x01
    4e62:	8f 93       	push	r24
    4e64:	80 81       	ld	r24, Z
    4e66:	8f 93       	push	r24
    4e68:	ff 92       	push	r15
    4e6a:	ef 92       	push	r14
    4e6c:	5f 92       	push	r5
    4e6e:	4f 92       	push	r4
    4e70:	1f 93       	push	r17
    4e72:	0f 93       	push	r16
    4e74:	0e 94 69 34 	call	0x68d2	; 0x68d2 <sprintf>
    4e78:	60 e0       	ldi	r22, 0x00	; 0
    4e7a:	70 e0       	ldi	r23, 0x00	; 0
    4e7c:	c8 01       	movw	r24, r16
    4e7e:	e1 dc       	rcall	.-1598   	; 0x4842 <_uploadMessage>
    4e80:	3a dd       	rcall	.-1420   	; 0x48f6 <_reply2ReturnCode>
    4e82:	0f b6       	in	r0, 0x3f	; 63
    4e84:	f8 94       	cli
    4e86:	de bf       	out	0x3e, r29	; 62
    4e88:	0f be       	out	0x3f, r0	; 63
    4e8a:	cd bf       	out	0x3d, r28	; 61
    4e8c:	81 11       	cpse	r24, r1
    4e8e:	43 c0       	rjmp	.+134    	; 0x4f16 <lora_driver_configureToEu868+0x18a>
    4e90:	2f 92       	push	r2
    4e92:	3f 92       	push	r3
    4e94:	9f 92       	push	r9
    4e96:	8f 92       	push	r8
    4e98:	1f 93       	push	r17
    4e9a:	0f 93       	push	r16
    4e9c:	0e 94 69 34 	call	0x68d2	; 0x68d2 <sprintf>
    4ea0:	60 e0       	ldi	r22, 0x00	; 0
    4ea2:	70 e0       	ldi	r23, 0x00	; 0
    4ea4:	c8 01       	movw	r24, r16
    4ea6:	cd dc       	rcall	.-1638   	; 0x4842 <_uploadMessage>
    4ea8:	26 dd       	rcall	.-1460   	; 0x48f6 <_reply2ReturnCode>
    4eaa:	0f 90       	pop	r0
    4eac:	0f 90       	pop	r0
    4eae:	0f 90       	pop	r0
    4eb0:	0f 90       	pop	r0
    4eb2:	0f 90       	pop	r0
    4eb4:	0f 90       	pop	r0
    4eb6:	81 11       	cpse	r24, r1
    4eb8:	2e c0       	rjmp	.+92     	; 0x4f16 <lora_driver_configureToEu868+0x18a>
    4eba:	2f 92       	push	r2
    4ebc:	3f 92       	push	r3
    4ebe:	7f 92       	push	r7
    4ec0:	6f 92       	push	r6
    4ec2:	1f 93       	push	r17
    4ec4:	0f 93       	push	r16
    4ec6:	0e 94 69 34 	call	0x68d2	; 0x68d2 <sprintf>
    4eca:	60 e0       	ldi	r22, 0x00	; 0
    4ecc:	70 e0       	ldi	r23, 0x00	; 0
    4ece:	c8 01       	movw	r24, r16
    4ed0:	b8 dc       	rcall	.-1680   	; 0x4842 <_uploadMessage>
    4ed2:	11 dd       	rcall	.-1502   	; 0x48f6 <_reply2ReturnCode>
    4ed4:	0f 90       	pop	r0
    4ed6:	0f 90       	pop	r0
    4ed8:	0f 90       	pop	r0
    4eda:	0f 90       	pop	r0
    4edc:	0f 90       	pop	r0
    4ede:	0f 90       	pop	r0
    4ee0:	81 11       	cpse	r24, r1
    4ee2:	19 c0       	rjmp	.+50     	; 0x4f16 <lora_driver_configureToEu868+0x18a>
    4ee4:	3f ef       	ldi	r19, 0xFF	; 255
    4ee6:	e3 1a       	sub	r14, r19
    4ee8:	f3 0a       	sbc	r15, r19
    4eea:	84 e0       	ldi	r24, 0x04	; 4
    4eec:	c8 0e       	add	r12, r24
    4eee:	d1 1c       	adc	r13, r1
    4ef0:	98 e0       	ldi	r25, 0x08	; 8
    4ef2:	e9 16       	cp	r14, r25
    4ef4:	f1 04       	cpc	r15, r1
    4ef6:	09 f0       	breq	.+2      	; 0x4efa <lora_driver_configureToEu868+0x16e>
    4ef8:	94 cf       	rjmp	.-216    	; 0x4e22 <lora_driver_configureToEu868+0x96>
    4efa:	60 e0       	ldi	r22, 0x00	; 0
    4efc:	70 e0       	ldi	r23, 0x00	; 0
    4efe:	8b e4       	ldi	r24, 0x4B	; 75
    4f00:	96 e0       	ldi	r25, 0x06	; 6
    4f02:	9f dc       	rcall	.-1730   	; 0x4842 <_uploadMessage>
    4f04:	f8 dc       	rcall	.-1552   	; 0x48f6 <_reply2ReturnCode>
    4f06:	81 11       	cpse	r24, r1
    4f08:	06 c0       	rjmp	.+12     	; 0x4f16 <lora_driver_configureToEu868+0x18a>
    4f0a:	60 e0       	ldi	r22, 0x00	; 0
    4f0c:	70 e0       	ldi	r23, 0x00	; 0
    4f0e:	8c e5       	ldi	r24, 0x5C	; 92
    4f10:	96 e0       	ldi	r25, 0x06	; 6
    4f12:	97 dc       	rcall	.-1746   	; 0x4842 <_uploadMessage>
    4f14:	f0 dc       	rcall	.-1568   	; 0x48f6 <_reply2ReturnCode>
    4f16:	a0 96       	adiw	r28, 0x20	; 32
    4f18:	0f b6       	in	r0, 0x3f	; 63
    4f1a:	f8 94       	cli
    4f1c:	de bf       	out	0x3e, r29	; 62
    4f1e:	0f be       	out	0x3f, r0	; 63
    4f20:	cd bf       	out	0x3d, r28	; 61
    4f22:	df 91       	pop	r29
    4f24:	cf 91       	pop	r28
    4f26:	1f 91       	pop	r17
    4f28:	0f 91       	pop	r16
    4f2a:	ff 90       	pop	r15
    4f2c:	ef 90       	pop	r14
    4f2e:	df 90       	pop	r13
    4f30:	cf 90       	pop	r12
    4f32:	bf 90       	pop	r11
    4f34:	af 90       	pop	r10
    4f36:	9f 90       	pop	r9
    4f38:	8f 90       	pop	r8
    4f3a:	7f 90       	pop	r7
    4f3c:	6f 90       	pop	r6
    4f3e:	5f 90       	pop	r5
    4f40:	4f 90       	pop	r4
    4f42:	3f 90       	pop	r3
    4f44:	2f 90       	pop	r2
    4f46:	08 95       	ret

00004f48 <lora_driver_setOtaaIdentity>:
    4f48:	ef 92       	push	r14
    4f4a:	ff 92       	push	r15
    4f4c:	0f 93       	push	r16
    4f4e:	1f 93       	push	r17
    4f50:	cf 93       	push	r28
    4f52:	df 93       	push	r29
    4f54:	ec 01       	movw	r28, r24
    4f56:	8b 01       	movw	r16, r22
    4f58:	7a 01       	movw	r14, r20
    4f5a:	81 e0       	ldi	r24, 0x01	; 1
    4f5c:	f4 de       	rcall	.-536    	; 0x4d46 <lora_driver_setAdaptiveDataRate>
    4f5e:	81 11       	cpse	r24, r1
    4f60:	0d c0       	rjmp	.+26     	; 0x4f7c <lora_driver_setOtaaIdentity+0x34>
    4f62:	ce 01       	movw	r24, r28
    4f64:	d4 dd       	rcall	.-1112   	; 0x4b0e <lora_driver_setApplicationIdentifier>
    4f66:	81 11       	cpse	r24, r1
    4f68:	09 c0       	rjmp	.+18     	; 0x4f7c <lora_driver_setOtaaIdentity+0x34>
    4f6a:	c8 01       	movw	r24, r16
    4f6c:	e1 dd       	rcall	.-1086   	; 0x4b30 <lora_driver_setApplicationKey>
    4f6e:	81 11       	cpse	r24, r1
    4f70:	05 c0       	rjmp	.+10     	; 0x4f7c <lora_driver_setOtaaIdentity+0x34>
    4f72:	c7 01       	movw	r24, r14
    4f74:	bb dd       	rcall	.-1162   	; 0x4aec <lora_driver_setDeviceIdentifier>
    4f76:	81 11       	cpse	r24, r1
    4f78:	01 c0       	rjmp	.+2      	; 0x4f7c <lora_driver_setOtaaIdentity+0x34>
    4f7a:	eb dd       	rcall	.-1066   	; 0x4b52 <lora_driver_saveMac>
    4f7c:	df 91       	pop	r29
    4f7e:	cf 91       	pop	r28
    4f80:	1f 91       	pop	r17
    4f82:	0f 91       	pop	r16
    4f84:	ff 90       	pop	r15
    4f86:	ef 90       	pop	r14
    4f88:	08 95       	ret

00004f8a <lora_driver_mapReturnCodeToText>:
    4f8a:	90 e0       	ldi	r25, 0x00	; 0
    4f8c:	fc 01       	movw	r30, r24
    4f8e:	ee 0f       	add	r30, r30
    4f90:	ff 1f       	adc	r31, r31
    4f92:	8e 0f       	add	r24, r30
    4f94:	9f 1f       	adc	r25, r31
    4f96:	fc 01       	movw	r30, r24
    4f98:	eb 5d       	subi	r30, 0xDB	; 219
    4f9a:	f8 4f       	sbci	r31, 0xF8	; 248
    4f9c:	81 81       	ldd	r24, Z+1	; 0x01
    4f9e:	92 81       	ldd	r25, Z+2	; 0x02
    4fa0:	08 95       	ret

00004fa2 <decode_port_no>:
    4fa2:	dc 01       	movw	r26, r24
    4fa4:	00 97       	sbiw	r24, 0x00	; 0
    4fa6:	29 f1       	breq	.+74     	; 0x4ff2 <decode_port_no+0x50>
    4fa8:	fb 01       	movw	r30, r22
    4faa:	20 81       	ld	r18, Z
    4fac:	fc 01       	movw	r30, r24
    4fae:	01 90       	ld	r0, Z+
    4fb0:	00 20       	and	r0, r0
    4fb2:	e9 f7       	brne	.-6      	; 0x4fae <decode_port_no+0xc>
    4fb4:	31 97       	sbiw	r30, 0x01	; 1
    4fb6:	e8 1b       	sub	r30, r24
    4fb8:	f9 0b       	sbc	r31, r25
    4fba:	82 2f       	mov	r24, r18
    4fbc:	90 e0       	ldi	r25, 0x00	; 0
    4fbe:	e8 17       	cp	r30, r24
    4fc0:	f9 07       	cpc	r31, r25
    4fc2:	c8 f0       	brcs	.+50     	; 0x4ff6 <decode_port_no+0x54>
    4fc4:	80 e0       	ldi	r24, 0x00	; 0
    4fc6:	08 c0       	rjmp	.+16     	; 0x4fd8 <decode_port_no+0x36>
    4fc8:	88 0f       	add	r24, r24
    4fca:	38 2f       	mov	r19, r24
    4fcc:	33 0f       	add	r19, r19
    4fce:	33 0f       	add	r19, r19
    4fd0:	83 0f       	add	r24, r19
    4fd2:	80 53       	subi	r24, 0x30	; 48
    4fd4:	89 0f       	add	r24, r25
    4fd6:	2f 5f       	subi	r18, 0xFF	; 255
    4fd8:	fd 01       	movw	r30, r26
    4fda:	e2 0f       	add	r30, r18
    4fdc:	f1 1d       	adc	r31, r1
    4fde:	90 81       	ld	r25, Z
    4fe0:	30 ed       	ldi	r19, 0xD0	; 208
    4fe2:	39 0f       	add	r19, r25
    4fe4:	3a 30       	cpi	r19, 0x0A	; 10
    4fe6:	10 f4       	brcc	.+4      	; 0x4fec <decode_port_no+0x4a>
    4fe8:	91 11       	cpse	r25, r1
    4fea:	ee cf       	rjmp	.-36     	; 0x4fc8 <decode_port_no+0x26>
    4fec:	fb 01       	movw	r30, r22
    4fee:	20 83       	st	Z, r18
    4ff0:	08 95       	ret
    4ff2:	80 e0       	ldi	r24, 0x00	; 0
    4ff4:	08 95       	ret
    4ff6:	80 e0       	ldi	r24, 0x00	; 0
    4ff8:	08 95       	ret

00004ffa <decode_hexadecimal_string_bytes>:
    4ffa:	0f 93       	push	r16
    4ffc:	1f 93       	push	r17
    4ffe:	cf 93       	push	r28
    5000:	df 93       	push	r29
    5002:	dc 01       	movw	r26, r24
    5004:	ea 01       	movw	r28, r20
    5006:	20 97       	sbiw	r28, 0x00	; 0
    5008:	e1 f1       	breq	.+120    	; 0x5082 <decode_hexadecimal_string_bytes+0x88>
    500a:	fa 01       	movw	r30, r20
    500c:	01 90       	ld	r0, Z+
    500e:	00 20       	and	r0, r0
    5010:	e9 f7       	brne	.-6      	; 0x500c <decode_hexadecimal_string_bytes+0x12>
    5012:	31 97       	sbiw	r30, 0x01	; 1
    5014:	e4 1b       	sub	r30, r20
    5016:	f5 0b       	sbc	r31, r21
    5018:	32 97       	sbiw	r30, 0x02	; 2
    501a:	10 f5       	brcc	.+68     	; 0x5060 <decode_hexadecimal_string_bytes+0x66>
    501c:	32 c0       	rjmp	.+100    	; 0x5082 <decode_hexadecimal_string_bytes+0x88>
    501e:	8d 01       	movw	r16, r26
    5020:	04 0f       	add	r16, r20
    5022:	15 1f       	adc	r17, r21
    5024:	30 e0       	ldi	r19, 0x00	; 0
    5026:	ae 01       	movw	r20, r28
    5028:	42 0f       	add	r20, r18
    502a:	53 1f       	adc	r21, r19
    502c:	fa 01       	movw	r30, r20
    502e:	90 81       	ld	r25, Z
    5030:	91 34       	cpi	r25, 0x41	; 65
    5032:	28 f0       	brcs	.+10     	; 0x503e <decode_hexadecimal_string_bytes+0x44>
    5034:	97 53       	subi	r25, 0x37	; 55
    5036:	59 2f       	mov	r21, r25
    5038:	52 95       	swap	r21
    503a:	50 7f       	andi	r21, 0xF0	; 240
    503c:	03 c0       	rjmp	.+6      	; 0x5044 <decode_hexadecimal_string_bytes+0x4a>
    503e:	59 2f       	mov	r21, r25
    5040:	52 95       	swap	r21
    5042:	50 7f       	andi	r21, 0xF0	; 240
    5044:	2c 0f       	add	r18, r28
    5046:	3d 1f       	adc	r19, r29
    5048:	f9 01       	movw	r30, r18
    504a:	91 81       	ldd	r25, Z+1	; 0x01
    504c:	91 34       	cpi	r25, 0x41	; 65
    504e:	10 f0       	brcs	.+4      	; 0x5054 <decode_hexadecimal_string_bytes+0x5a>
    5050:	97 53       	subi	r25, 0x37	; 55
    5052:	01 c0       	rjmp	.+2      	; 0x5056 <decode_hexadecimal_string_bytes+0x5c>
    5054:	90 53       	subi	r25, 0x30	; 48
    5056:	95 0f       	add	r25, r21
    5058:	f8 01       	movw	r30, r16
    505a:	90 83       	st	Z, r25
    505c:	8f 5f       	subi	r24, 0xFF	; 255
    505e:	01 c0       	rjmp	.+2      	; 0x5062 <decode_hexadecimal_string_bytes+0x68>
    5060:	80 e0       	ldi	r24, 0x00	; 0
    5062:	28 2f       	mov	r18, r24
    5064:	22 0f       	add	r18, r18
    5066:	48 2f       	mov	r20, r24
    5068:	50 e0       	ldi	r21, 0x00	; 0
    506a:	fe 01       	movw	r30, r28
    506c:	01 90       	ld	r0, Z+
    506e:	00 20       	and	r0, r0
    5070:	e9 f7       	brne	.-6      	; 0x506c <decode_hexadecimal_string_bytes+0x72>
    5072:	31 97       	sbiw	r30, 0x01	; 1
    5074:	ec 1b       	sub	r30, r28
    5076:	fd 0b       	sbc	r31, r29
    5078:	4e 17       	cp	r20, r30
    507a:	5f 07       	cpc	r21, r31
    507c:	10 f4       	brcc	.+4      	; 0x5082 <decode_hexadecimal_string_bytes+0x88>
    507e:	86 13       	cpse	r24, r22
    5080:	ce cf       	rjmp	.-100    	; 0x501e <decode_hexadecimal_string_bytes+0x24>
    5082:	df 91       	pop	r29
    5084:	cf 91       	pop	r28
    5086:	1f 91       	pop	r17
    5088:	0f 91       	pop	r16
    508a:	08 95       	ret

0000508c <_serialCallBack>:
    508c:	80 91 90 13 	lds	r24, 0x1390	; 0x801390 <crc_sum.1945>
    5090:	86 0f       	add	r24, r22
    5092:	80 93 90 13 	sts	0x1390, r24	; 0x801390 <crc_sum.1945>
    5096:	90 91 93 13 	lds	r25, 0x1393	; 0x801393 <_mh_state>
    509a:	91 30       	cpi	r25, 0x01	; 1
    509c:	79 f0       	breq	.+30     	; 0x50bc <_serialCallBack+0x30>
    509e:	28 f0       	brcs	.+10     	; 0x50aa <_serialCallBack+0x1e>
    50a0:	92 30       	cpi	r25, 0x02	; 2
    50a2:	a9 f0       	breq	.+42     	; 0x50ce <_serialCallBack+0x42>
    50a4:	93 30       	cpi	r25, 0x03	; 3
    50a6:	19 f1       	breq	.+70     	; 0x50ee <_serialCallBack+0x62>
    50a8:	08 95       	ret
    50aa:	6f 3f       	cpi	r22, 0xFF	; 255
    50ac:	09 f0       	breq	.+2      	; 0x50b0 <_serialCallBack+0x24>
    50ae:	48 c0       	rjmp	.+144    	; 0x5140 <_serialCallBack+0xb4>
    50b0:	10 92 90 13 	sts	0x1390, r1	; 0x801390 <crc_sum.1945>
    50b4:	81 e0       	ldi	r24, 0x01	; 1
    50b6:	80 93 93 13 	sts	0x1393, r24	; 0x801393 <_mh_state>
    50ba:	08 95       	ret
    50bc:	66 38       	cpi	r22, 0x86	; 134
    50be:	09 f0       	breq	.+2      	; 0x50c2 <_serialCallBack+0x36>
    50c0:	3f c0       	rjmp	.+126    	; 0x5140 <_serialCallBack+0xb4>
    50c2:	10 92 8f 13 	sts	0x138F, r1	; 0x80138f <inDex.1943>
    50c6:	82 e0       	ldi	r24, 0x02	; 2
    50c8:	80 93 93 13 	sts	0x1393, r24	; 0x801393 <_mh_state>
    50cc:	08 95       	ret
    50ce:	e0 91 8f 13 	lds	r30, 0x138F	; 0x80138f <inDex.1943>
    50d2:	81 e0       	ldi	r24, 0x01	; 1
    50d4:	8e 0f       	add	r24, r30
    50d6:	80 93 8f 13 	sts	0x138F, r24	; 0x80138f <inDex.1943>
    50da:	f0 e0       	ldi	r31, 0x00	; 0
    50dc:	e3 57       	subi	r30, 0x73	; 115
    50de:	fc 4e       	sbci	r31, 0xEC	; 236
    50e0:	60 83       	st	Z, r22
    50e2:	82 30       	cpi	r24, 0x02	; 2
    50e4:	69 f5       	brne	.+90     	; 0x5140 <_serialCallBack+0xb4>
    50e6:	83 e0       	ldi	r24, 0x03	; 3
    50e8:	80 93 93 13 	sts	0x1393, r24	; 0x801393 <_mh_state>
    50ec:	08 95       	ret
    50ee:	90 91 8f 13 	lds	r25, 0x138F	; 0x80138f <inDex.1943>
    50f2:	21 e0       	ldi	r18, 0x01	; 1
    50f4:	29 0f       	add	r18, r25
    50f6:	20 93 8f 13 	sts	0x138F, r18	; 0x80138f <inDex.1943>
    50fa:	96 30       	cpi	r25, 0x06	; 6
    50fc:	09 f5       	brne	.+66     	; 0x5140 <_serialCallBack+0xb4>
    50fe:	81 11       	cpse	r24, r1
    5100:	0e c0       	rjmp	.+28     	; 0x511e <_serialCallBack+0x92>
    5102:	ed e8       	ldi	r30, 0x8D	; 141
    5104:	f3 e1       	ldi	r31, 0x13	; 19
    5106:	80 81       	ld	r24, Z
    5108:	90 e0       	ldi	r25, 0x00	; 0
    510a:	98 2f       	mov	r25, r24
    510c:	88 27       	eor	r24, r24
    510e:	21 81       	ldd	r18, Z+1	; 0x01
    5110:	82 0f       	add	r24, r18
    5112:	91 1d       	adc	r25, r1
    5114:	90 93 95 13 	sts	0x1395, r25	; 0x801395 <_ppm+0x1>
    5118:	80 93 94 13 	sts	0x1394, r24	; 0x801394 <_ppm>
    511c:	04 c0       	rjmp	.+8      	; 0x5126 <_serialCallBack+0x9a>
    511e:	10 92 95 13 	sts	0x1395, r1	; 0x801395 <_ppm+0x1>
    5122:	10 92 94 13 	sts	0x1394, r1	; 0x801394 <_ppm>
    5126:	10 92 93 13 	sts	0x1393, r1	; 0x801393 <_mh_state>
    512a:	e0 91 91 13 	lds	r30, 0x1391	; 0x801391 <_appCallBack>
    512e:	f0 91 92 13 	lds	r31, 0x1392	; 0x801392 <_appCallBack+0x1>
    5132:	30 97       	sbiw	r30, 0x00	; 0
    5134:	29 f0       	breq	.+10     	; 0x5140 <_serialCallBack+0xb4>
    5136:	80 91 94 13 	lds	r24, 0x1394	; 0x801394 <_ppm>
    513a:	90 91 95 13 	lds	r25, 0x1395	; 0x801395 <_ppm+0x1>
    513e:	19 95       	eicall
    5140:	08 95       	ret

00005142 <mh_z19_initialise>:
    5142:	8f 92       	push	r8
    5144:	9f 92       	push	r9
    5146:	af 92       	push	r10
    5148:	cf 92       	push	r12
    514a:	ef 92       	push	r14
    514c:	0f 93       	push	r16
    514e:	0f 2e       	mov	r0, r31
    5150:	f6 e4       	ldi	r31, 0x46	; 70
    5152:	8f 2e       	mov	r8, r31
    5154:	f8 e2       	ldi	r31, 0x28	; 40
    5156:	9f 2e       	mov	r9, r31
    5158:	f0 2d       	mov	r31, r0
    515a:	68 94       	set
    515c:	aa 24       	eor	r10, r10
    515e:	a4 f8       	bld	r10, 4
    5160:	68 94       	set
    5162:	cc 24       	eor	r12, r12
    5164:	c4 f8       	bld	r12, 4
    5166:	e1 2c       	mov	r14, r1
    5168:	00 e0       	ldi	r16, 0x00	; 0
    516a:	23 e0       	ldi	r18, 0x03	; 3
    516c:	40 e8       	ldi	r20, 0x80	; 128
    516e:	55 e2       	ldi	r21, 0x25	; 37
    5170:	60 e0       	ldi	r22, 0x00	; 0
    5172:	70 e0       	ldi	r23, 0x00	; 0
    5174:	7f d0       	rcall	.+254    	; 0x5274 <serial_create>
    5176:	90 93 97 13 	sts	0x1397, r25	; 0x801397 <_serial+0x1>
    517a:	80 93 96 13 	sts	0x1396, r24	; 0x801396 <_serial>
    517e:	0f 91       	pop	r16
    5180:	ef 90       	pop	r14
    5182:	cf 90       	pop	r12
    5184:	af 90       	pop	r10
    5186:	9f 90       	pop	r9
    5188:	8f 90       	pop	r8
    518a:	08 95       	ret

0000518c <mh_z19_takeMeassuring>:
    518c:	cf 93       	push	r28
    518e:	df 93       	push	r29
    5190:	cd b7       	in	r28, 0x3d	; 61
    5192:	de b7       	in	r29, 0x3e	; 62
    5194:	29 97       	sbiw	r28, 0x09	; 9
    5196:	0f b6       	in	r0, 0x3f	; 63
    5198:	f8 94       	cli
    519a:	de bf       	out	0x3e, r29	; 62
    519c:	0f be       	out	0x3f, r0	; 63
    519e:	cd bf       	out	0x3d, r28	; 61
    51a0:	89 e0       	ldi	r24, 0x09	; 9
    51a2:	e2 e4       	ldi	r30, 0x42	; 66
    51a4:	f2 e0       	ldi	r31, 0x02	; 2
    51a6:	9e 01       	movw	r18, r28
    51a8:	2f 5f       	subi	r18, 0xFF	; 255
    51aa:	3f 4f       	sbci	r19, 0xFF	; 255
    51ac:	d9 01       	movw	r26, r18
    51ae:	01 90       	ld	r0, Z+
    51b0:	0d 92       	st	X+, r0
    51b2:	8a 95       	dec	r24
    51b4:	e1 f7       	brne	.-8      	; 0x51ae <mh_z19_takeMeassuring+0x22>
    51b6:	10 92 95 13 	sts	0x1395, r1	; 0x801395 <_ppm+0x1>
    51ba:	10 92 94 13 	sts	0x1394, r1	; 0x801394 <_ppm>
    51be:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_serial>
    51c2:	90 91 97 13 	lds	r25, 0x1397	; 0x801397 <_serial+0x1>
    51c6:	00 97       	sbiw	r24, 0x00	; 0
    51c8:	31 f0       	breq	.+12     	; 0x51d6 <mh_z19_takeMeassuring+0x4a>
    51ca:	42 2f       	mov	r20, r18
    51cc:	53 2f       	mov	r21, r19
    51ce:	69 e0       	ldi	r22, 0x09	; 9
    51d0:	1e d1       	rcall	.+572    	; 0x540e <serial_sendBytes>
    51d2:	80 e0       	ldi	r24, 0x00	; 0
    51d4:	01 c0       	rjmp	.+2      	; 0x51d8 <mh_z19_takeMeassuring+0x4c>
    51d6:	82 e0       	ldi	r24, 0x02	; 2
    51d8:	29 96       	adiw	r28, 0x09	; 9
    51da:	0f b6       	in	r0, 0x3f	; 63
    51dc:	f8 94       	cli
    51de:	de bf       	out	0x3e, r29	; 62
    51e0:	0f be       	out	0x3f, r0	; 63
    51e2:	cd bf       	out	0x3d, r28	; 61
    51e4:	df 91       	pop	r29
    51e6:	cf 91       	pop	r28
    51e8:	08 95       	ret

000051ea <mh_z19_getCo2Ppm>:
    51ea:	20 91 94 13 	lds	r18, 0x1394	; 0x801394 <_ppm>
    51ee:	30 91 95 13 	lds	r19, 0x1395	; 0x801395 <_ppm+0x1>
    51f2:	21 15       	cp	r18, r1
    51f4:	31 05       	cpc	r19, r1
    51f6:	29 f4       	brne	.+10     	; 0x5202 <mh_z19_getCo2Ppm+0x18>
    51f8:	fc 01       	movw	r30, r24
    51fa:	11 82       	std	Z+1, r1	; 0x01
    51fc:	10 82       	st	Z, r1
    51fe:	81 e0       	ldi	r24, 0x01	; 1
    5200:	08 95       	ret
    5202:	fc 01       	movw	r30, r24
    5204:	31 83       	std	Z+1, r19	; 0x01
    5206:	20 83       	st	Z, r18
    5208:	80 e0       	ldi	r24, 0x00	; 0
    520a:	08 95       	ret

0000520c <rc_servo_setPosition>:
    520c:	65 36       	cpi	r22, 0x65	; 101
    520e:	0c f0       	brlt	.+2      	; 0x5212 <rc_servo_setPosition+0x6>
    5210:	64 e6       	ldi	r22, 0x64	; 100
    5212:	6c 39       	cpi	r22, 0x9C	; 156
    5214:	0c f4       	brge	.+2      	; 0x5218 <rc_servo_setPosition+0xc>
    5216:	6c e9       	ldi	r22, 0x9C	; 156
    5218:	96 ef       	ldi	r25, 0xF6	; 246
    521a:	69 02       	muls	r22, r25
    521c:	b0 01       	movw	r22, r0
    521e:	11 24       	eor	r1, r1
    5220:	68 54       	subi	r22, 0x48	; 72
    5222:	74 4f       	sbci	r23, 0xF4	; 244
    5224:	81 11       	cpse	r24, r1
    5226:	05 c0       	rjmp	.+10     	; 0x5232 <rc_servo_setPosition+0x26>
    5228:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <__TEXT_REGION_LENGTH__+0x7c0129>
    522c:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <__TEXT_REGION_LENGTH__+0x7c0128>
    5230:	08 95       	ret
    5232:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <__TEXT_REGION_LENGTH__+0x7c012b>
    5236:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <__TEXT_REGION_LENGTH__+0x7c012a>
    523a:	08 95       	ret

0000523c <rc_servo_initialise>:
    523c:	ea e0       	ldi	r30, 0x0A	; 10
    523e:	f1 e0       	ldi	r31, 0x01	; 1
    5240:	80 81       	ld	r24, Z
    5242:	88 61       	ori	r24, 0x18	; 24
    5244:	80 83       	st	Z, r24
    5246:	8f e3       	ldi	r24, 0x3F	; 63
    5248:	9c e9       	ldi	r25, 0x9C	; 156
    524a:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x7c0127>
    524e:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x7c0126>
    5252:	60 e0       	ldi	r22, 0x00	; 0
    5254:	80 e0       	ldi	r24, 0x00	; 0
    5256:	da df       	rcall	.-76     	; 0x520c <rc_servo_setPosition>
    5258:	60 e0       	ldi	r22, 0x00	; 0
    525a:	81 e0       	ldi	r24, 0x01	; 1
    525c:	d7 df       	rcall	.-82     	; 0x520c <rc_servo_setPosition>
    525e:	e0 e2       	ldi	r30, 0x20	; 32
    5260:	f1 e0       	ldi	r31, 0x01	; 1
    5262:	80 81       	ld	r24, Z
    5264:	82 6a       	ori	r24, 0xA2	; 162
    5266:	80 83       	st	Z, r24
    5268:	e1 e2       	ldi	r30, 0x21	; 33
    526a:	f1 e0       	ldi	r31, 0x01	; 1
    526c:	80 81       	ld	r24, Z
    526e:	8a 61       	ori	r24, 0x1A	; 26
    5270:	80 83       	st	Z, r24
    5272:	08 95       	ret

00005274 <serial_create>:
    5274:	2f 92       	push	r2
    5276:	3f 92       	push	r3
    5278:	4f 92       	push	r4
    527a:	5f 92       	push	r5
    527c:	6f 92       	push	r6
    527e:	7f 92       	push	r7
    5280:	8f 92       	push	r8
    5282:	9f 92       	push	r9
    5284:	af 92       	push	r10
    5286:	cf 92       	push	r12
    5288:	ef 92       	push	r14
    528a:	ff 92       	push	r15
    528c:	0f 93       	push	r16
    528e:	1f 93       	push	r17
    5290:	cf 93       	push	r28
    5292:	df 93       	push	r29
    5294:	cd b7       	in	r28, 0x3d	; 61
    5296:	de b7       	in	r29, 0x3e	; 62
    5298:	f8 2e       	mov	r15, r24
    529a:	2a 01       	movw	r4, r20
    529c:	3b 01       	movw	r6, r22
    529e:	88 e0       	ldi	r24, 0x08	; 8
    52a0:	90 e0       	ldi	r25, 0x00	; 0
    52a2:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
    52a6:	8c 01       	movw	r16, r24
    52a8:	8f 2d       	mov	r24, r15
    52aa:	90 e0       	ldi	r25, 0x00	; 0
    52ac:	fc 01       	movw	r30, r24
    52ae:	ee 0f       	add	r30, r30
    52b0:	ff 1f       	adc	r31, r31
    52b2:	e8 56       	subi	r30, 0x68	; 104
    52b4:	fc 4e       	sbci	r31, 0xEC	; 236
    52b6:	11 83       	std	Z+1, r17	; 0x01
    52b8:	00 83       	st	Z, r16
    52ba:	01 15       	cp	r16, r1
    52bc:	11 05       	cpc	r17, r1
    52be:	09 f4       	brne	.+2      	; 0x52c2 <serial_create+0x4e>
    52c0:	69 c0       	rjmp	.+210    	; 0x5394 <serial_create+0x120>
    52c2:	88 0f       	add	r24, r24
    52c4:	99 1f       	adc	r25, r25
    52c6:	fc 01       	movw	r30, r24
    52c8:	e5 5f       	subi	r30, 0xF5	; 245
    52ca:	fd 4f       	sbci	r31, 0xFD	; 253
    52cc:	80 81       	ld	r24, Z
    52ce:	91 81       	ldd	r25, Z+1	; 0x01
    52d0:	d8 01       	movw	r26, r16
    52d2:	8d 93       	st	X+, r24
    52d4:	9c 93       	st	X, r25
    52d6:	8c 2d       	mov	r24, r12
    52d8:	90 e0       	ldi	r25, 0x00	; 0
    52da:	88 0f       	add	r24, r24
    52dc:	99 1f       	adc	r25, r25
    52de:	88 0f       	add	r24, r24
    52e0:	99 1f       	adc	r25, r25
    52e2:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
    52e6:	1c 01       	movw	r2, r24
    52e8:	86 e0       	ldi	r24, 0x06	; 6
    52ea:	90 e0       	ldi	r25, 0x00	; 0
    52ec:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
    52f0:	7c 01       	movw	r14, r24
    52f2:	4c 2d       	mov	r20, r12
    52f4:	b1 01       	movw	r22, r2
    52f6:	f1 d6       	rcall	.+3554   	; 0x60da <fifo_init>
    52f8:	f8 01       	movw	r30, r16
    52fa:	f5 82       	std	Z+5, r15	; 0x05
    52fc:	e4 82       	std	Z+4, r14	; 0x04
    52fe:	8a 2d       	mov	r24, r10
    5300:	90 e0       	ldi	r25, 0x00	; 0
    5302:	88 0f       	add	r24, r24
    5304:	99 1f       	adc	r25, r25
    5306:	88 0f       	add	r24, r24
    5308:	99 1f       	adc	r25, r25
    530a:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
    530e:	1c 01       	movw	r2, r24
    5310:	86 e0       	ldi	r24, 0x06	; 6
    5312:	90 e0       	ldi	r25, 0x00	; 0
    5314:	0e 94 a2 32 	call	0x6544	; 0x6544 <malloc>
    5318:	7c 01       	movw	r14, r24
    531a:	4a 2d       	mov	r20, r10
    531c:	b1 01       	movw	r22, r2
    531e:	dd d6       	rcall	.+3514   	; 0x60da <fifo_init>
    5320:	d8 01       	movw	r26, r16
    5322:	13 96       	adiw	r26, 0x03	; 3
    5324:	fc 92       	st	X, r15
    5326:	ee 92       	st	-X, r14
    5328:	12 97       	sbiw	r26, 0x02	; 2
    532a:	17 96       	adiw	r26, 0x07	; 7
    532c:	9c 92       	st	X, r9
    532e:	8e 92       	st	-X, r8
    5330:	16 97       	sbiw	r26, 0x06	; 6
    5332:	ff b6       	in	r15, 0x3f	; 63
    5334:	f8 94       	cli
    5336:	ed 91       	ld	r30, X+
    5338:	fc 91       	ld	r31, X
    533a:	11 97       	sbiw	r26, 0x01	; 1
    533c:	36 97       	sbiw	r30, 0x06	; 6
    533e:	80 81       	ld	r24, Z
    5340:	82 60       	ori	r24, 0x02	; 2
    5342:	80 83       	st	Z, r24
    5344:	8d 90       	ld	r8, X+
    5346:	9c 90       	ld	r9, X
    5348:	c3 01       	movw	r24, r6
    534a:	b2 01       	movw	r22, r4
    534c:	e0 d7       	rcall	.+4032   	; 0x630e <__floatunsisf>
    534e:	20 e0       	ldi	r18, 0x00	; 0
    5350:	30 e0       	ldi	r19, 0x00	; 0
    5352:	40 e0       	ldi	r20, 0x00	; 0
    5354:	51 e4       	ldi	r21, 0x41	; 65
    5356:	0e 94 15 32 	call	0x642a	; 0x642a <__mulsf3>
    535a:	9b 01       	movw	r18, r22
    535c:	ac 01       	movw	r20, r24
    535e:	60 e0       	ldi	r22, 0x00	; 0
    5360:	74 e2       	ldi	r23, 0x24	; 36
    5362:	84 e7       	ldi	r24, 0x74	; 116
    5364:	9b e4       	ldi	r25, 0x4B	; 75
    5366:	3a d7       	rcall	.+3700   	; 0x61dc <__divsf3>
    5368:	20 e0       	ldi	r18, 0x00	; 0
    536a:	30 e0       	ldi	r19, 0x00	; 0
    536c:	40 e8       	ldi	r20, 0x80	; 128
    536e:	5f e3       	ldi	r21, 0x3F	; 63
    5370:	d0 d6       	rcall	.+3488   	; 0x6112 <__subsf3>
    5372:	a1 d7       	rcall	.+3906   	; 0x62b6 <__fixunssfsi>
    5374:	f4 01       	movw	r30, r8
    5376:	32 97       	sbiw	r30, 0x02	; 2
    5378:	60 83       	st	Z, r22
    537a:	d8 01       	movw	r26, r16
    537c:	ed 91       	ld	r30, X+
    537e:	fc 91       	ld	r31, X
    5380:	11 97       	sbiw	r26, 0x01	; 1
    5382:	35 97       	sbiw	r30, 0x05	; 5
    5384:	88 e9       	ldi	r24, 0x98	; 152
    5386:	80 83       	st	Z, r24
    5388:	ed 91       	ld	r30, X+
    538a:	fc 91       	ld	r31, X
    538c:	34 97       	sbiw	r30, 0x04	; 4
    538e:	86 e0       	ldi	r24, 0x06	; 6
    5390:	80 83       	st	Z, r24
    5392:	ff be       	out	0x3f, r15	; 63
    5394:	c8 01       	movw	r24, r16
    5396:	df 91       	pop	r29
    5398:	cf 91       	pop	r28
    539a:	1f 91       	pop	r17
    539c:	0f 91       	pop	r16
    539e:	ff 90       	pop	r15
    53a0:	ef 90       	pop	r14
    53a2:	cf 90       	pop	r12
    53a4:	af 90       	pop	r10
    53a6:	9f 90       	pop	r9
    53a8:	8f 90       	pop	r8
    53aa:	7f 90       	pop	r7
    53ac:	6f 90       	pop	r6
    53ae:	5f 90       	pop	r5
    53b0:	4f 90       	pop	r4
    53b2:	3f 90       	pop	r3
    53b4:	2f 90       	pop	r2
    53b6:	08 95       	ret

000053b8 <serial_sendByte>:
    53b8:	cf 93       	push	r28
    53ba:	df 93       	push	r29
    53bc:	dc 01       	movw	r26, r24
    53be:	89 2b       	or	r24, r25
    53c0:	01 f1       	breq	.+64     	; 0x5402 <serial_sendByte+0x4a>
    53c2:	12 96       	adiw	r26, 0x02	; 2
    53c4:	ed 91       	ld	r30, X+
    53c6:	fc 91       	ld	r31, X
    53c8:	13 97       	sbiw	r26, 0x03	; 3
    53ca:	93 81       	ldd	r25, Z+3	; 0x03
    53cc:	82 81       	ldd	r24, Z+2	; 0x02
    53ce:	25 81       	ldd	r18, Z+5	; 0x05
    53d0:	98 1b       	sub	r25, r24
    53d2:	92 23       	and	r25, r18
    53d4:	84 81       	ldd	r24, Z+4	; 0x04
    53d6:	98 17       	cp	r25, r24
    53d8:	b1 f0       	breq	.+44     	; 0x5406 <serial_sendByte+0x4e>
    53da:	83 81       	ldd	r24, Z+3	; 0x03
    53dc:	26 95       	lsr	r18
    53de:	28 23       	and	r18, r24
    53e0:	c0 81       	ld	r28, Z
    53e2:	d1 81       	ldd	r29, Z+1	; 0x01
    53e4:	c2 0f       	add	r28, r18
    53e6:	d1 1d       	adc	r29, r1
    53e8:	68 83       	st	Y, r22
    53ea:	8f 5f       	subi	r24, 0xFF	; 255
    53ec:	95 81       	ldd	r25, Z+5	; 0x05
    53ee:	89 23       	and	r24, r25
    53f0:	83 83       	std	Z+3, r24	; 0x03
    53f2:	ed 91       	ld	r30, X+
    53f4:	fc 91       	ld	r31, X
    53f6:	35 97       	sbiw	r30, 0x05	; 5
    53f8:	80 81       	ld	r24, Z
    53fa:	80 62       	ori	r24, 0x20	; 32
    53fc:	80 83       	st	Z, r24
    53fe:	80 e0       	ldi	r24, 0x00	; 0
    5400:	03 c0       	rjmp	.+6      	; 0x5408 <serial_sendByte+0x50>
    5402:	81 e0       	ldi	r24, 0x01	; 1
    5404:	01 c0       	rjmp	.+2      	; 0x5408 <serial_sendByte+0x50>
    5406:	82 e0       	ldi	r24, 0x02	; 2
    5408:	df 91       	pop	r29
    540a:	cf 91       	pop	r28
    540c:	08 95       	ret

0000540e <serial_sendBytes>:
    540e:	ef 92       	push	r14
    5410:	ff 92       	push	r15
    5412:	0f 93       	push	r16
    5414:	1f 93       	push	r17
    5416:	cf 93       	push	r28
    5418:	df 93       	push	r29
    541a:	7c 01       	movw	r14, r24
    541c:	00 97       	sbiw	r24, 0x00	; 0
    541e:	09 f4       	brne	.+2      	; 0x5422 <serial_sendBytes+0x14>
    5420:	41 c0       	rjmp	.+130    	; 0x54a4 <serial_sendBytes+0x96>
    5422:	dc 01       	movw	r26, r24
    5424:	12 96       	adiw	r26, 0x02	; 2
    5426:	ed 91       	ld	r30, X+
    5428:	fc 91       	ld	r31, X
    542a:	13 97       	sbiw	r26, 0x03	; 3
    542c:	93 81       	ldd	r25, Z+3	; 0x03
    542e:	82 81       	ldd	r24, Z+2	; 0x02
    5430:	98 1b       	sub	r25, r24
    5432:	85 81       	ldd	r24, Z+5	; 0x05
    5434:	98 23       	and	r25, r24
    5436:	84 81       	ldd	r24, Z+4	; 0x04
    5438:	89 1b       	sub	r24, r25
    543a:	86 17       	cp	r24, r22
    543c:	a8 f1       	brcs	.+106    	; 0x54a8 <serial_sendBytes+0x9a>
    543e:	66 23       	and	r22, r22
    5440:	41 f1       	breq	.+80     	; 0x5492 <serial_sendBytes+0x84>
    5442:	84 2f       	mov	r24, r20
    5444:	95 2f       	mov	r25, r21
    5446:	dc 01       	movw	r26, r24
    5448:	61 50       	subi	r22, 0x01	; 1
    544a:	46 2f       	mov	r20, r22
    544c:	50 e0       	ldi	r21, 0x00	; 0
    544e:	4f 5f       	subi	r20, 0xFF	; 255
    5450:	5f 4f       	sbci	r21, 0xFF	; 255
    5452:	48 0f       	add	r20, r24
    5454:	59 1f       	adc	r21, r25
    5456:	e7 01       	movw	r28, r14
    5458:	ea 81       	ldd	r30, Y+2	; 0x02
    545a:	fb 81       	ldd	r31, Y+3	; 0x03
    545c:	93 81       	ldd	r25, Z+3	; 0x03
    545e:	82 81       	ldd	r24, Z+2	; 0x02
    5460:	25 81       	ldd	r18, Z+5	; 0x05
    5462:	98 1b       	sub	r25, r24
    5464:	92 23       	and	r25, r18
    5466:	84 81       	ldd	r24, Z+4	; 0x04
    5468:	98 17       	cp	r25, r24
    546a:	79 f0       	breq	.+30     	; 0x548a <serial_sendBytes+0x7c>
    546c:	8c 91       	ld	r24, X
    546e:	93 81       	ldd	r25, Z+3	; 0x03
    5470:	26 95       	lsr	r18
    5472:	29 23       	and	r18, r25
    5474:	60 81       	ld	r22, Z
    5476:	71 81       	ldd	r23, Z+1	; 0x01
    5478:	8b 01       	movw	r16, r22
    547a:	02 0f       	add	r16, r18
    547c:	11 1d       	adc	r17, r1
    547e:	e8 01       	movw	r28, r16
    5480:	88 83       	st	Y, r24
    5482:	9f 5f       	subi	r25, 0xFF	; 255
    5484:	85 81       	ldd	r24, Z+5	; 0x05
    5486:	98 23       	and	r25, r24
    5488:	93 83       	std	Z+3, r25	; 0x03
    548a:	11 96       	adiw	r26, 0x01	; 1
    548c:	a4 17       	cp	r26, r20
    548e:	b5 07       	cpc	r27, r21
    5490:	11 f7       	brne	.-60     	; 0x5456 <serial_sendBytes+0x48>
    5492:	d7 01       	movw	r26, r14
    5494:	ed 91       	ld	r30, X+
    5496:	fc 91       	ld	r31, X
    5498:	35 97       	sbiw	r30, 0x05	; 5
    549a:	80 81       	ld	r24, Z
    549c:	80 62       	ori	r24, 0x20	; 32
    549e:	80 83       	st	Z, r24
    54a0:	80 e0       	ldi	r24, 0x00	; 0
    54a2:	03 c0       	rjmp	.+6      	; 0x54aa <serial_sendBytes+0x9c>
    54a4:	81 e0       	ldi	r24, 0x01	; 1
    54a6:	01 c0       	rjmp	.+2      	; 0x54aa <serial_sendBytes+0x9c>
    54a8:	82 e0       	ldi	r24, 0x02	; 2
    54aa:	df 91       	pop	r29
    54ac:	cf 91       	pop	r28
    54ae:	1f 91       	pop	r17
    54b0:	0f 91       	pop	r16
    54b2:	ff 90       	pop	r15
    54b4:	ef 90       	pop	r14
    54b6:	08 95       	ret

000054b8 <serial_getByte>:
    54b8:	00 97       	sbiw	r24, 0x00	; 0
    54ba:	d1 f0       	breq	.+52     	; 0x54f0 <serial_getByte+0x38>
    54bc:	dc 01       	movw	r26, r24
    54be:	14 96       	adiw	r26, 0x04	; 4
    54c0:	ed 91       	ld	r30, X+
    54c2:	fc 91       	ld	r31, X
    54c4:	15 97       	sbiw	r26, 0x05	; 5
    54c6:	93 81       	ldd	r25, Z+3	; 0x03
    54c8:	82 81       	ldd	r24, Z+2	; 0x02
    54ca:	98 17       	cp	r25, r24
    54cc:	99 f0       	breq	.+38     	; 0x54f4 <serial_getByte+0x3c>
    54ce:	92 81       	ldd	r25, Z+2	; 0x02
    54d0:	85 81       	ldd	r24, Z+5	; 0x05
    54d2:	86 95       	lsr	r24
    54d4:	89 23       	and	r24, r25
    54d6:	a0 81       	ld	r26, Z
    54d8:	b1 81       	ldd	r27, Z+1	; 0x01
    54da:	a8 0f       	add	r26, r24
    54dc:	b1 1d       	adc	r27, r1
    54de:	8c 91       	ld	r24, X
    54e0:	db 01       	movw	r26, r22
    54e2:	8c 93       	st	X, r24
    54e4:	9f 5f       	subi	r25, 0xFF	; 255
    54e6:	85 81       	ldd	r24, Z+5	; 0x05
    54e8:	98 23       	and	r25, r24
    54ea:	92 83       	std	Z+2, r25	; 0x02
    54ec:	80 e0       	ldi	r24, 0x00	; 0
    54ee:	08 95       	ret
    54f0:	81 e0       	ldi	r24, 0x01	; 1
    54f2:	08 95       	ret
    54f4:	83 e0       	ldi	r24, 0x03	; 3
    54f6:	08 95       	ret

000054f8 <__vector_25>:
    54f8:	1f 92       	push	r1
    54fa:	0f 92       	push	r0
    54fc:	0f b6       	in	r0, 0x3f	; 63
    54fe:	0f 92       	push	r0
    5500:	11 24       	eor	r1, r1
    5502:	0b b6       	in	r0, 0x3b	; 59
    5504:	0f 92       	push	r0
    5506:	2f 93       	push	r18
    5508:	3f 93       	push	r19
    550a:	4f 93       	push	r20
    550c:	5f 93       	push	r21
    550e:	6f 93       	push	r22
    5510:	7f 93       	push	r23
    5512:	8f 93       	push	r24
    5514:	9f 93       	push	r25
    5516:	af 93       	push	r26
    5518:	bf 93       	push	r27
    551a:	cf 93       	push	r28
    551c:	df 93       	push	r29
    551e:	ef 93       	push	r30
    5520:	ff 93       	push	r31
    5522:	a0 91 98 13 	lds	r26, 0x1398	; 0x801398 <_ser_handle>
    5526:	b0 91 99 13 	lds	r27, 0x1399	; 0x801399 <_ser_handle+0x1>
    552a:	10 97       	sbiw	r26, 0x00	; 0
    552c:	11 f1       	breq	.+68     	; 0x5572 <__vector_25+0x7a>
    552e:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    5532:	14 96       	adiw	r26, 0x04	; 4
    5534:	ed 91       	ld	r30, X+
    5536:	fc 91       	ld	r31, X
    5538:	15 97       	sbiw	r26, 0x05	; 5
    553a:	93 81       	ldd	r25, Z+3	; 0x03
    553c:	82 81       	ldd	r24, Z+2	; 0x02
    553e:	25 81       	ldd	r18, Z+5	; 0x05
    5540:	98 1b       	sub	r25, r24
    5542:	92 23       	and	r25, r18
    5544:	84 81       	ldd	r24, Z+4	; 0x04
    5546:	98 17       	cp	r25, r24
    5548:	61 f0       	breq	.+24     	; 0x5562 <__vector_25+0x6a>
    554a:	83 81       	ldd	r24, Z+3	; 0x03
    554c:	26 95       	lsr	r18
    554e:	28 23       	and	r18, r24
    5550:	c0 81       	ld	r28, Z
    5552:	d1 81       	ldd	r29, Z+1	; 0x01
    5554:	c2 0f       	add	r28, r18
    5556:	d1 1d       	adc	r29, r1
    5558:	68 83       	st	Y, r22
    555a:	8f 5f       	subi	r24, 0xFF	; 255
    555c:	95 81       	ldd	r25, Z+5	; 0x05
    555e:	89 23       	and	r24, r25
    5560:	83 83       	std	Z+3, r24	; 0x03
    5562:	16 96       	adiw	r26, 0x06	; 6
    5564:	ed 91       	ld	r30, X+
    5566:	fc 91       	ld	r31, X
    5568:	17 97       	sbiw	r26, 0x07	; 7
    556a:	30 97       	sbiw	r30, 0x00	; 0
    556c:	11 f0       	breq	.+4      	; 0x5572 <__vector_25+0x7a>
    556e:	cd 01       	movw	r24, r26
    5570:	19 95       	eicall
    5572:	ff 91       	pop	r31
    5574:	ef 91       	pop	r30
    5576:	df 91       	pop	r29
    5578:	cf 91       	pop	r28
    557a:	bf 91       	pop	r27
    557c:	af 91       	pop	r26
    557e:	9f 91       	pop	r25
    5580:	8f 91       	pop	r24
    5582:	7f 91       	pop	r23
    5584:	6f 91       	pop	r22
    5586:	5f 91       	pop	r21
    5588:	4f 91       	pop	r20
    558a:	3f 91       	pop	r19
    558c:	2f 91       	pop	r18
    558e:	0f 90       	pop	r0
    5590:	0b be       	out	0x3b, r0	; 59
    5592:	0f 90       	pop	r0
    5594:	0f be       	out	0x3f, r0	; 63
    5596:	0f 90       	pop	r0
    5598:	1f 90       	pop	r1
    559a:	18 95       	reti

0000559c <__vector_26>:
    559c:	1f 92       	push	r1
    559e:	0f 92       	push	r0
    55a0:	0f b6       	in	r0, 0x3f	; 63
    55a2:	0f 92       	push	r0
    55a4:	11 24       	eor	r1, r1
    55a6:	0b b6       	in	r0, 0x3b	; 59
    55a8:	0f 92       	push	r0
    55aa:	2f 93       	push	r18
    55ac:	8f 93       	push	r24
    55ae:	9f 93       	push	r25
    55b0:	af 93       	push	r26
    55b2:	bf 93       	push	r27
    55b4:	ef 93       	push	r30
    55b6:	ff 93       	push	r31
    55b8:	e0 91 98 13 	lds	r30, 0x1398	; 0x801398 <_ser_handle>
    55bc:	f0 91 99 13 	lds	r31, 0x1399	; 0x801399 <_ser_handle+0x1>
    55c0:	30 97       	sbiw	r30, 0x00	; 0
    55c2:	b9 f0       	breq	.+46     	; 0x55f2 <__vector_26+0x56>
    55c4:	02 80       	ldd	r0, Z+2	; 0x02
    55c6:	f3 81       	ldd	r31, Z+3	; 0x03
    55c8:	e0 2d       	mov	r30, r0
    55ca:	93 81       	ldd	r25, Z+3	; 0x03
    55cc:	82 81       	ldd	r24, Z+2	; 0x02
    55ce:	98 17       	cp	r25, r24
    55d0:	b1 f0       	breq	.+44     	; 0x55fe <__vector_26+0x62>
    55d2:	92 81       	ldd	r25, Z+2	; 0x02
    55d4:	85 81       	ldd	r24, Z+5	; 0x05
    55d6:	28 2f       	mov	r18, r24
    55d8:	26 95       	lsr	r18
    55da:	29 23       	and	r18, r25
    55dc:	a0 81       	ld	r26, Z
    55de:	b1 81       	ldd	r27, Z+1	; 0x01
    55e0:	a2 0f       	add	r26, r18
    55e2:	b1 1d       	adc	r27, r1
    55e4:	2c 91       	ld	r18, X
    55e6:	9f 5f       	subi	r25, 0xFF	; 255
    55e8:	89 23       	and	r24, r25
    55ea:	82 83       	std	Z+2, r24	; 0x02
    55ec:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    55f0:	0b c0       	rjmp	.+22     	; 0x5608 <__vector_26+0x6c>
    55f2:	e1 ec       	ldi	r30, 0xC1	; 193
    55f4:	f0 e0       	ldi	r31, 0x00	; 0
    55f6:	80 81       	ld	r24, Z
    55f8:	8f 7d       	andi	r24, 0xDF	; 223
    55fa:	80 83       	st	Z, r24
    55fc:	05 c0       	rjmp	.+10     	; 0x5608 <__vector_26+0x6c>
    55fe:	e1 ec       	ldi	r30, 0xC1	; 193
    5600:	f0 e0       	ldi	r31, 0x00	; 0
    5602:	80 81       	ld	r24, Z
    5604:	8f 7d       	andi	r24, 0xDF	; 223
    5606:	80 83       	st	Z, r24
    5608:	ff 91       	pop	r31
    560a:	ef 91       	pop	r30
    560c:	bf 91       	pop	r27
    560e:	af 91       	pop	r26
    5610:	9f 91       	pop	r25
    5612:	8f 91       	pop	r24
    5614:	2f 91       	pop	r18
    5616:	0f 90       	pop	r0
    5618:	0b be       	out	0x3b, r0	; 59
    561a:	0f 90       	pop	r0
    561c:	0f be       	out	0x3f, r0	; 63
    561e:	0f 90       	pop	r0
    5620:	1f 90       	pop	r1
    5622:	18 95       	reti

00005624 <__vector_36>:
    5624:	1f 92       	push	r1
    5626:	0f 92       	push	r0
    5628:	0f b6       	in	r0, 0x3f	; 63
    562a:	0f 92       	push	r0
    562c:	11 24       	eor	r1, r1
    562e:	0b b6       	in	r0, 0x3b	; 59
    5630:	0f 92       	push	r0
    5632:	2f 93       	push	r18
    5634:	3f 93       	push	r19
    5636:	4f 93       	push	r20
    5638:	5f 93       	push	r21
    563a:	6f 93       	push	r22
    563c:	7f 93       	push	r23
    563e:	8f 93       	push	r24
    5640:	9f 93       	push	r25
    5642:	af 93       	push	r26
    5644:	bf 93       	push	r27
    5646:	cf 93       	push	r28
    5648:	df 93       	push	r29
    564a:	ef 93       	push	r30
    564c:	ff 93       	push	r31
    564e:	a0 91 9a 13 	lds	r26, 0x139A	; 0x80139a <_ser_handle+0x2>
    5652:	b0 91 9b 13 	lds	r27, 0x139B	; 0x80139b <_ser_handle+0x3>
    5656:	10 97       	sbiw	r26, 0x00	; 0
    5658:	11 f1       	breq	.+68     	; 0x569e <__vector_36+0x7a>
    565a:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    565e:	14 96       	adiw	r26, 0x04	; 4
    5660:	ed 91       	ld	r30, X+
    5662:	fc 91       	ld	r31, X
    5664:	15 97       	sbiw	r26, 0x05	; 5
    5666:	93 81       	ldd	r25, Z+3	; 0x03
    5668:	82 81       	ldd	r24, Z+2	; 0x02
    566a:	25 81       	ldd	r18, Z+5	; 0x05
    566c:	98 1b       	sub	r25, r24
    566e:	92 23       	and	r25, r18
    5670:	84 81       	ldd	r24, Z+4	; 0x04
    5672:	98 17       	cp	r25, r24
    5674:	61 f0       	breq	.+24     	; 0x568e <__vector_36+0x6a>
    5676:	83 81       	ldd	r24, Z+3	; 0x03
    5678:	26 95       	lsr	r18
    567a:	28 23       	and	r18, r24
    567c:	c0 81       	ld	r28, Z
    567e:	d1 81       	ldd	r29, Z+1	; 0x01
    5680:	c2 0f       	add	r28, r18
    5682:	d1 1d       	adc	r29, r1
    5684:	68 83       	st	Y, r22
    5686:	8f 5f       	subi	r24, 0xFF	; 255
    5688:	95 81       	ldd	r25, Z+5	; 0x05
    568a:	89 23       	and	r24, r25
    568c:	83 83       	std	Z+3, r24	; 0x03
    568e:	16 96       	adiw	r26, 0x06	; 6
    5690:	ed 91       	ld	r30, X+
    5692:	fc 91       	ld	r31, X
    5694:	17 97       	sbiw	r26, 0x07	; 7
    5696:	30 97       	sbiw	r30, 0x00	; 0
    5698:	11 f0       	breq	.+4      	; 0x569e <__vector_36+0x7a>
    569a:	cd 01       	movw	r24, r26
    569c:	19 95       	eicall
    569e:	ff 91       	pop	r31
    56a0:	ef 91       	pop	r30
    56a2:	df 91       	pop	r29
    56a4:	cf 91       	pop	r28
    56a6:	bf 91       	pop	r27
    56a8:	af 91       	pop	r26
    56aa:	9f 91       	pop	r25
    56ac:	8f 91       	pop	r24
    56ae:	7f 91       	pop	r23
    56b0:	6f 91       	pop	r22
    56b2:	5f 91       	pop	r21
    56b4:	4f 91       	pop	r20
    56b6:	3f 91       	pop	r19
    56b8:	2f 91       	pop	r18
    56ba:	0f 90       	pop	r0
    56bc:	0b be       	out	0x3b, r0	; 59
    56be:	0f 90       	pop	r0
    56c0:	0f be       	out	0x3f, r0	; 63
    56c2:	0f 90       	pop	r0
    56c4:	1f 90       	pop	r1
    56c6:	18 95       	reti

000056c8 <__vector_37>:
    56c8:	1f 92       	push	r1
    56ca:	0f 92       	push	r0
    56cc:	0f b6       	in	r0, 0x3f	; 63
    56ce:	0f 92       	push	r0
    56d0:	11 24       	eor	r1, r1
    56d2:	0b b6       	in	r0, 0x3b	; 59
    56d4:	0f 92       	push	r0
    56d6:	2f 93       	push	r18
    56d8:	8f 93       	push	r24
    56da:	9f 93       	push	r25
    56dc:	af 93       	push	r26
    56de:	bf 93       	push	r27
    56e0:	ef 93       	push	r30
    56e2:	ff 93       	push	r31
    56e4:	e0 91 9a 13 	lds	r30, 0x139A	; 0x80139a <_ser_handle+0x2>
    56e8:	f0 91 9b 13 	lds	r31, 0x139B	; 0x80139b <_ser_handle+0x3>
    56ec:	30 97       	sbiw	r30, 0x00	; 0
    56ee:	b9 f0       	breq	.+46     	; 0x571e <__vector_37+0x56>
    56f0:	02 80       	ldd	r0, Z+2	; 0x02
    56f2:	f3 81       	ldd	r31, Z+3	; 0x03
    56f4:	e0 2d       	mov	r30, r0
    56f6:	93 81       	ldd	r25, Z+3	; 0x03
    56f8:	82 81       	ldd	r24, Z+2	; 0x02
    56fa:	98 17       	cp	r25, r24
    56fc:	b1 f0       	breq	.+44     	; 0x572a <__vector_37+0x62>
    56fe:	92 81       	ldd	r25, Z+2	; 0x02
    5700:	85 81       	ldd	r24, Z+5	; 0x05
    5702:	28 2f       	mov	r18, r24
    5704:	26 95       	lsr	r18
    5706:	29 23       	and	r18, r25
    5708:	a0 81       	ld	r26, Z
    570a:	b1 81       	ldd	r27, Z+1	; 0x01
    570c:	a2 0f       	add	r26, r18
    570e:	b1 1d       	adc	r27, r1
    5710:	2c 91       	ld	r18, X
    5712:	9f 5f       	subi	r25, 0xFF	; 255
    5714:	89 23       	and	r24, r25
    5716:	82 83       	std	Z+2, r24	; 0x02
    5718:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    571c:	0b c0       	rjmp	.+22     	; 0x5734 <__vector_37+0x6c>
    571e:	e9 ec       	ldi	r30, 0xC9	; 201
    5720:	f0 e0       	ldi	r31, 0x00	; 0
    5722:	80 81       	ld	r24, Z
    5724:	8f 7d       	andi	r24, 0xDF	; 223
    5726:	80 83       	st	Z, r24
    5728:	05 c0       	rjmp	.+10     	; 0x5734 <__vector_37+0x6c>
    572a:	e9 ec       	ldi	r30, 0xC9	; 201
    572c:	f0 e0       	ldi	r31, 0x00	; 0
    572e:	80 81       	ld	r24, Z
    5730:	8f 7d       	andi	r24, 0xDF	; 223
    5732:	80 83       	st	Z, r24
    5734:	ff 91       	pop	r31
    5736:	ef 91       	pop	r30
    5738:	bf 91       	pop	r27
    573a:	af 91       	pop	r26
    573c:	9f 91       	pop	r25
    573e:	8f 91       	pop	r24
    5740:	2f 91       	pop	r18
    5742:	0f 90       	pop	r0
    5744:	0b be       	out	0x3b, r0	; 59
    5746:	0f 90       	pop	r0
    5748:	0f be       	out	0x3f, r0	; 63
    574a:	0f 90       	pop	r0
    574c:	1f 90       	pop	r1
    574e:	18 95       	reti

00005750 <__vector_51>:
    5750:	1f 92       	push	r1
    5752:	0f 92       	push	r0
    5754:	0f b6       	in	r0, 0x3f	; 63
    5756:	0f 92       	push	r0
    5758:	11 24       	eor	r1, r1
    575a:	0b b6       	in	r0, 0x3b	; 59
    575c:	0f 92       	push	r0
    575e:	2f 93       	push	r18
    5760:	3f 93       	push	r19
    5762:	4f 93       	push	r20
    5764:	5f 93       	push	r21
    5766:	6f 93       	push	r22
    5768:	7f 93       	push	r23
    576a:	8f 93       	push	r24
    576c:	9f 93       	push	r25
    576e:	af 93       	push	r26
    5770:	bf 93       	push	r27
    5772:	cf 93       	push	r28
    5774:	df 93       	push	r29
    5776:	ef 93       	push	r30
    5778:	ff 93       	push	r31
    577a:	a0 91 9c 13 	lds	r26, 0x139C	; 0x80139c <_ser_handle+0x4>
    577e:	b0 91 9d 13 	lds	r27, 0x139D	; 0x80139d <_ser_handle+0x5>
    5782:	10 97       	sbiw	r26, 0x00	; 0
    5784:	11 f1       	breq	.+68     	; 0x57ca <__vector_51+0x7a>
    5786:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
    578a:	14 96       	adiw	r26, 0x04	; 4
    578c:	ed 91       	ld	r30, X+
    578e:	fc 91       	ld	r31, X
    5790:	15 97       	sbiw	r26, 0x05	; 5
    5792:	93 81       	ldd	r25, Z+3	; 0x03
    5794:	82 81       	ldd	r24, Z+2	; 0x02
    5796:	25 81       	ldd	r18, Z+5	; 0x05
    5798:	98 1b       	sub	r25, r24
    579a:	92 23       	and	r25, r18
    579c:	84 81       	ldd	r24, Z+4	; 0x04
    579e:	98 17       	cp	r25, r24
    57a0:	61 f0       	breq	.+24     	; 0x57ba <__vector_51+0x6a>
    57a2:	83 81       	ldd	r24, Z+3	; 0x03
    57a4:	26 95       	lsr	r18
    57a6:	28 23       	and	r18, r24
    57a8:	c0 81       	ld	r28, Z
    57aa:	d1 81       	ldd	r29, Z+1	; 0x01
    57ac:	c2 0f       	add	r28, r18
    57ae:	d1 1d       	adc	r29, r1
    57b0:	68 83       	st	Y, r22
    57b2:	8f 5f       	subi	r24, 0xFF	; 255
    57b4:	95 81       	ldd	r25, Z+5	; 0x05
    57b6:	89 23       	and	r24, r25
    57b8:	83 83       	std	Z+3, r24	; 0x03
    57ba:	16 96       	adiw	r26, 0x06	; 6
    57bc:	ed 91       	ld	r30, X+
    57be:	fc 91       	ld	r31, X
    57c0:	17 97       	sbiw	r26, 0x07	; 7
    57c2:	30 97       	sbiw	r30, 0x00	; 0
    57c4:	11 f0       	breq	.+4      	; 0x57ca <__vector_51+0x7a>
    57c6:	cd 01       	movw	r24, r26
    57c8:	19 95       	eicall
    57ca:	ff 91       	pop	r31
    57cc:	ef 91       	pop	r30
    57ce:	df 91       	pop	r29
    57d0:	cf 91       	pop	r28
    57d2:	bf 91       	pop	r27
    57d4:	af 91       	pop	r26
    57d6:	9f 91       	pop	r25
    57d8:	8f 91       	pop	r24
    57da:	7f 91       	pop	r23
    57dc:	6f 91       	pop	r22
    57de:	5f 91       	pop	r21
    57e0:	4f 91       	pop	r20
    57e2:	3f 91       	pop	r19
    57e4:	2f 91       	pop	r18
    57e6:	0f 90       	pop	r0
    57e8:	0b be       	out	0x3b, r0	; 59
    57ea:	0f 90       	pop	r0
    57ec:	0f be       	out	0x3f, r0	; 63
    57ee:	0f 90       	pop	r0
    57f0:	1f 90       	pop	r1
    57f2:	18 95       	reti

000057f4 <__vector_52>:
    57f4:	1f 92       	push	r1
    57f6:	0f 92       	push	r0
    57f8:	0f b6       	in	r0, 0x3f	; 63
    57fa:	0f 92       	push	r0
    57fc:	11 24       	eor	r1, r1
    57fe:	0b b6       	in	r0, 0x3b	; 59
    5800:	0f 92       	push	r0
    5802:	2f 93       	push	r18
    5804:	8f 93       	push	r24
    5806:	9f 93       	push	r25
    5808:	af 93       	push	r26
    580a:	bf 93       	push	r27
    580c:	ef 93       	push	r30
    580e:	ff 93       	push	r31
    5810:	e0 91 9c 13 	lds	r30, 0x139C	; 0x80139c <_ser_handle+0x4>
    5814:	f0 91 9d 13 	lds	r31, 0x139D	; 0x80139d <_ser_handle+0x5>
    5818:	30 97       	sbiw	r30, 0x00	; 0
    581a:	b9 f0       	breq	.+46     	; 0x584a <__vector_52+0x56>
    581c:	02 80       	ldd	r0, Z+2	; 0x02
    581e:	f3 81       	ldd	r31, Z+3	; 0x03
    5820:	e0 2d       	mov	r30, r0
    5822:	93 81       	ldd	r25, Z+3	; 0x03
    5824:	82 81       	ldd	r24, Z+2	; 0x02
    5826:	98 17       	cp	r25, r24
    5828:	b1 f0       	breq	.+44     	; 0x5856 <__vector_52+0x62>
    582a:	92 81       	ldd	r25, Z+2	; 0x02
    582c:	85 81       	ldd	r24, Z+5	; 0x05
    582e:	28 2f       	mov	r18, r24
    5830:	26 95       	lsr	r18
    5832:	29 23       	and	r18, r25
    5834:	a0 81       	ld	r26, Z
    5836:	b1 81       	ldd	r27, Z+1	; 0x01
    5838:	a2 0f       	add	r26, r18
    583a:	b1 1d       	adc	r27, r1
    583c:	2c 91       	ld	r18, X
    583e:	9f 5f       	subi	r25, 0xFF	; 255
    5840:	89 23       	and	r24, r25
    5842:	82 83       	std	Z+2, r24	; 0x02
    5844:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
    5848:	0b c0       	rjmp	.+22     	; 0x5860 <__vector_52+0x6c>
    584a:	e1 ed       	ldi	r30, 0xD1	; 209
    584c:	f0 e0       	ldi	r31, 0x00	; 0
    584e:	80 81       	ld	r24, Z
    5850:	8f 7d       	andi	r24, 0xDF	; 223
    5852:	80 83       	st	Z, r24
    5854:	05 c0       	rjmp	.+10     	; 0x5860 <__vector_52+0x6c>
    5856:	e1 ed       	ldi	r30, 0xD1	; 209
    5858:	f0 e0       	ldi	r31, 0x00	; 0
    585a:	80 81       	ld	r24, Z
    585c:	8f 7d       	andi	r24, 0xDF	; 223
    585e:	80 83       	st	Z, r24
    5860:	ff 91       	pop	r31
    5862:	ef 91       	pop	r30
    5864:	bf 91       	pop	r27
    5866:	af 91       	pop	r26
    5868:	9f 91       	pop	r25
    586a:	8f 91       	pop	r24
    586c:	2f 91       	pop	r18
    586e:	0f 90       	pop	r0
    5870:	0b be       	out	0x3b, r0	; 59
    5872:	0f 90       	pop	r0
    5874:	0f be       	out	0x3f, r0	; 63
    5876:	0f 90       	pop	r0
    5878:	1f 90       	pop	r1
    587a:	18 95       	reti

0000587c <__vector_54>:
    587c:	1f 92       	push	r1
    587e:	0f 92       	push	r0
    5880:	0f b6       	in	r0, 0x3f	; 63
    5882:	0f 92       	push	r0
    5884:	11 24       	eor	r1, r1
    5886:	0b b6       	in	r0, 0x3b	; 59
    5888:	0f 92       	push	r0
    588a:	2f 93       	push	r18
    588c:	3f 93       	push	r19
    588e:	4f 93       	push	r20
    5890:	5f 93       	push	r21
    5892:	6f 93       	push	r22
    5894:	7f 93       	push	r23
    5896:	8f 93       	push	r24
    5898:	9f 93       	push	r25
    589a:	af 93       	push	r26
    589c:	bf 93       	push	r27
    589e:	cf 93       	push	r28
    58a0:	df 93       	push	r29
    58a2:	ef 93       	push	r30
    58a4:	ff 93       	push	r31
    58a6:	a0 91 9e 13 	lds	r26, 0x139E	; 0x80139e <_ser_handle+0x6>
    58aa:	b0 91 9f 13 	lds	r27, 0x139F	; 0x80139f <_ser_handle+0x7>
    58ae:	10 97       	sbiw	r26, 0x00	; 0
    58b0:	11 f1       	breq	.+68     	; 0x58f6 <__vector_54+0x7a>
    58b2:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
    58b6:	14 96       	adiw	r26, 0x04	; 4
    58b8:	ed 91       	ld	r30, X+
    58ba:	fc 91       	ld	r31, X
    58bc:	15 97       	sbiw	r26, 0x05	; 5
    58be:	93 81       	ldd	r25, Z+3	; 0x03
    58c0:	82 81       	ldd	r24, Z+2	; 0x02
    58c2:	25 81       	ldd	r18, Z+5	; 0x05
    58c4:	98 1b       	sub	r25, r24
    58c6:	92 23       	and	r25, r18
    58c8:	84 81       	ldd	r24, Z+4	; 0x04
    58ca:	98 17       	cp	r25, r24
    58cc:	61 f0       	breq	.+24     	; 0x58e6 <__vector_54+0x6a>
    58ce:	83 81       	ldd	r24, Z+3	; 0x03
    58d0:	26 95       	lsr	r18
    58d2:	28 23       	and	r18, r24
    58d4:	c0 81       	ld	r28, Z
    58d6:	d1 81       	ldd	r29, Z+1	; 0x01
    58d8:	c2 0f       	add	r28, r18
    58da:	d1 1d       	adc	r29, r1
    58dc:	68 83       	st	Y, r22
    58de:	8f 5f       	subi	r24, 0xFF	; 255
    58e0:	95 81       	ldd	r25, Z+5	; 0x05
    58e2:	89 23       	and	r24, r25
    58e4:	83 83       	std	Z+3, r24	; 0x03
    58e6:	16 96       	adiw	r26, 0x06	; 6
    58e8:	ed 91       	ld	r30, X+
    58ea:	fc 91       	ld	r31, X
    58ec:	17 97       	sbiw	r26, 0x07	; 7
    58ee:	30 97       	sbiw	r30, 0x00	; 0
    58f0:	11 f0       	breq	.+4      	; 0x58f6 <__vector_54+0x7a>
    58f2:	cd 01       	movw	r24, r26
    58f4:	19 95       	eicall
    58f6:	ff 91       	pop	r31
    58f8:	ef 91       	pop	r30
    58fa:	df 91       	pop	r29
    58fc:	cf 91       	pop	r28
    58fe:	bf 91       	pop	r27
    5900:	af 91       	pop	r26
    5902:	9f 91       	pop	r25
    5904:	8f 91       	pop	r24
    5906:	7f 91       	pop	r23
    5908:	6f 91       	pop	r22
    590a:	5f 91       	pop	r21
    590c:	4f 91       	pop	r20
    590e:	3f 91       	pop	r19
    5910:	2f 91       	pop	r18
    5912:	0f 90       	pop	r0
    5914:	0b be       	out	0x3b, r0	; 59
    5916:	0f 90       	pop	r0
    5918:	0f be       	out	0x3f, r0	; 63
    591a:	0f 90       	pop	r0
    591c:	1f 90       	pop	r1
    591e:	18 95       	reti

00005920 <__vector_55>:
    5920:	1f 92       	push	r1
    5922:	0f 92       	push	r0
    5924:	0f b6       	in	r0, 0x3f	; 63
    5926:	0f 92       	push	r0
    5928:	11 24       	eor	r1, r1
    592a:	0b b6       	in	r0, 0x3b	; 59
    592c:	0f 92       	push	r0
    592e:	2f 93       	push	r18
    5930:	8f 93       	push	r24
    5932:	9f 93       	push	r25
    5934:	af 93       	push	r26
    5936:	bf 93       	push	r27
    5938:	ef 93       	push	r30
    593a:	ff 93       	push	r31
    593c:	e0 91 9e 13 	lds	r30, 0x139E	; 0x80139e <_ser_handle+0x6>
    5940:	f0 91 9f 13 	lds	r31, 0x139F	; 0x80139f <_ser_handle+0x7>
    5944:	30 97       	sbiw	r30, 0x00	; 0
    5946:	b9 f0       	breq	.+46     	; 0x5976 <__vector_55+0x56>
    5948:	02 80       	ldd	r0, Z+2	; 0x02
    594a:	f3 81       	ldd	r31, Z+3	; 0x03
    594c:	e0 2d       	mov	r30, r0
    594e:	93 81       	ldd	r25, Z+3	; 0x03
    5950:	82 81       	ldd	r24, Z+2	; 0x02
    5952:	98 17       	cp	r25, r24
    5954:	b1 f0       	breq	.+44     	; 0x5982 <__vector_55+0x62>
    5956:	92 81       	ldd	r25, Z+2	; 0x02
    5958:	85 81       	ldd	r24, Z+5	; 0x05
    595a:	28 2f       	mov	r18, r24
    595c:	26 95       	lsr	r18
    595e:	29 23       	and	r18, r25
    5960:	a0 81       	ld	r26, Z
    5962:	b1 81       	ldd	r27, Z+1	; 0x01
    5964:	a2 0f       	add	r26, r18
    5966:	b1 1d       	adc	r27, r1
    5968:	2c 91       	ld	r18, X
    596a:	9f 5f       	subi	r25, 0xFF	; 255
    596c:	89 23       	and	r24, r25
    596e:	82 83       	std	Z+2, r24	; 0x02
    5970:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
    5974:	0b c0       	rjmp	.+22     	; 0x598c <__vector_55+0x6c>
    5976:	e1 e3       	ldi	r30, 0x31	; 49
    5978:	f1 e0       	ldi	r31, 0x01	; 1
    597a:	80 81       	ld	r24, Z
    597c:	8f 7d       	andi	r24, 0xDF	; 223
    597e:	80 83       	st	Z, r24
    5980:	05 c0       	rjmp	.+10     	; 0x598c <__vector_55+0x6c>
    5982:	e1 e3       	ldi	r30, 0x31	; 49
    5984:	f1 e0       	ldi	r31, 0x01	; 1
    5986:	80 81       	ld	r24, Z
    5988:	8f 7d       	andi	r24, 0xDF	; 223
    598a:	80 83       	st	Z, r24
    598c:	ff 91       	pop	r31
    598e:	ef 91       	pop	r30
    5990:	bf 91       	pop	r27
    5992:	af 91       	pop	r26
    5994:	9f 91       	pop	r25
    5996:	8f 91       	pop	r24
    5998:	2f 91       	pop	r18
    599a:	0f 90       	pop	r0
    599c:	0b be       	out	0x3b, r0	; 59
    599e:	0f 90       	pop	r0
    59a0:	0f be       	out	0x3f, r0	; 63
    59a2:	0f 90       	pop	r0
    59a4:	1f 90       	pop	r1
    59a6:	18 95       	reti

000059a8 <usart_getchar>:
    59a8:	cf 93       	push	r28
    59aa:	df 93       	push	r29
    59ac:	1f 92       	push	r1
    59ae:	cd b7       	in	r28, 0x3d	; 61
    59b0:	de b7       	in	r29, 0x3e	; 62
    59b2:	be 01       	movw	r22, r28
    59b4:	6f 5f       	subi	r22, 0xFF	; 255
    59b6:	7f 4f       	sbci	r23, 0xFF	; 255
    59b8:	80 91 a0 13 	lds	r24, 0x13A0	; 0x8013a0 <_com_serial_instance>
    59bc:	90 91 a1 13 	lds	r25, 0x13A1	; 0x8013a1 <_com_serial_instance+0x1>
    59c0:	7b dd       	rcall	.-1290   	; 0x54b8 <serial_getByte>
    59c2:	81 11       	cpse	r24, r1
    59c4:	f6 cf       	rjmp	.-20     	; 0x59b2 <usart_getchar+0xa>
    59c6:	89 81       	ldd	r24, Y+1	; 0x01
    59c8:	90 e0       	ldi	r25, 0x00	; 0
    59ca:	0f 90       	pop	r0
    59cc:	df 91       	pop	r29
    59ce:	cf 91       	pop	r28
    59d0:	08 95       	ret

000059d2 <usart_putchar>:
    59d2:	68 2f       	mov	r22, r24
    59d4:	80 91 a0 13 	lds	r24, 0x13A0	; 0x8013a0 <_com_serial_instance>
    59d8:	90 91 a1 13 	lds	r25, 0x13A1	; 0x8013a1 <_com_serial_instance+0x1>
    59dc:	ed dc       	rcall	.-1574   	; 0x53b8 <serial_sendByte>
    59de:	80 e0       	ldi	r24, 0x00	; 0
    59e0:	90 e0       	ldi	r25, 0x00	; 0
    59e2:	08 95       	ret

000059e4 <stdio_initialise>:
    59e4:	8f 92       	push	r8
    59e6:	9f 92       	push	r9
    59e8:	af 92       	push	r10
    59ea:	cf 92       	push	r12
    59ec:	ef 92       	push	r14
    59ee:	0f 93       	push	r16
    59f0:	81 2c       	mov	r8, r1
    59f2:	91 2c       	mov	r9, r1
    59f4:	68 94       	set
    59f6:	aa 24       	eor	r10, r10
    59f8:	a7 f8       	bld	r10, 7
    59fa:	68 94       	set
    59fc:	cc 24       	eor	r12, r12
    59fe:	c7 f8       	bld	r12, 7
    5a00:	e1 2c       	mov	r14, r1
    5a02:	00 e0       	ldi	r16, 0x00	; 0
    5a04:	23 e0       	ldi	r18, 0x03	; 3
    5a06:	40 e0       	ldi	r20, 0x00	; 0
    5a08:	51 ee       	ldi	r21, 0xE1	; 225
    5a0a:	60 e0       	ldi	r22, 0x00	; 0
    5a0c:	70 e0       	ldi	r23, 0x00	; 0
    5a0e:	32 dc       	rcall	.-1948   	; 0x5274 <serial_create>
    5a10:	90 93 a1 13 	sts	0x13A1, r25	; 0x8013a1 <_com_serial_instance+0x1>
    5a14:	80 93 a0 13 	sts	0x13A0, r24	; 0x8013a0 <_com_serial_instance>
    5a18:	ed ee       	ldi	r30, 0xED	; 237
    5a1a:	f3 e1       	ldi	r31, 0x13	; 19
    5a1c:	83 e1       	ldi	r24, 0x13	; 19
    5a1e:	92 e0       	ldi	r25, 0x02	; 2
    5a20:	91 83       	std	Z+1, r25	; 0x01
    5a22:	80 83       	st	Z, r24
    5a24:	93 83       	std	Z+3, r25	; 0x03
    5a26:	82 83       	std	Z+2, r24	; 0x02
    5a28:	0f 91       	pop	r16
    5a2a:	ef 90       	pop	r14
    5a2c:	cf 90       	pop	r12
    5a2e:	af 90       	pop	r10
    5a30:	9f 90       	pop	r9
    5a32:	8f 90       	pop	r8
    5a34:	08 95       	ret

00005a36 <_turn_off>:
    5a36:	90 e0       	ldi	r25, 0x00	; 0
    5a38:	fc 01       	movw	r30, r24
    5a3a:	ee 0f       	add	r30, r30
    5a3c:	ff 1f       	adc	r31, r31
    5a3e:	e8 0f       	add	r30, r24
    5a40:	f9 1f       	adc	r31, r25
    5a42:	ee 0f       	add	r30, r30
    5a44:	ff 1f       	adc	r31, r31
    5a46:	ee 55       	subi	r30, 0x5E	; 94
    5a48:	fc 4e       	sbci	r31, 0xEC	; 236
    5a4a:	23 81       	ldd	r18, Z+3	; 0x03
    5a4c:	21 11       	cpse	r18, r1
    5a4e:	1f c0       	rjmp	.+62     	; 0x5a8e <_turn_off+0x58>
    5a50:	9c 01       	movw	r18, r24
    5a52:	22 0f       	add	r18, r18
    5a54:	33 1f       	adc	r19, r19
    5a56:	f9 01       	movw	r30, r18
    5a58:	e8 0f       	add	r30, r24
    5a5a:	f9 1f       	adc	r31, r25
    5a5c:	ee 0f       	add	r30, r30
    5a5e:	ff 1f       	adc	r31, r31
    5a60:	ee 55       	subi	r30, 0x5E	; 94
    5a62:	fc 4e       	sbci	r31, 0xEC	; 236
    5a64:	a0 81       	ld	r26, Z
    5a66:	b1 81       	ldd	r27, Z+1	; 0x01
    5a68:	4c 91       	ld	r20, X
    5a6a:	f9 01       	movw	r30, r18
    5a6c:	e8 0f       	add	r30, r24
    5a6e:	f9 1f       	adc	r31, r25
    5a70:	ee 0f       	add	r30, r30
    5a72:	ff 1f       	adc	r31, r31
    5a74:	ee 55       	subi	r30, 0x5E	; 94
    5a76:	fc 4e       	sbci	r31, 0xEC	; 236
    5a78:	81 e0       	ldi	r24, 0x01	; 1
    5a7a:	90 e0       	ldi	r25, 0x00	; 0
    5a7c:	02 80       	ldd	r0, Z+2	; 0x02
    5a7e:	02 c0       	rjmp	.+4      	; 0x5a84 <_turn_off+0x4e>
    5a80:	88 0f       	add	r24, r24
    5a82:	99 1f       	adc	r25, r25
    5a84:	0a 94       	dec	r0
    5a86:	e2 f7       	brpl	.-8      	; 0x5a80 <_turn_off+0x4a>
    5a88:	84 2b       	or	r24, r20
    5a8a:	8c 93       	st	X, r24
    5a8c:	08 95       	ret
    5a8e:	fc 01       	movw	r30, r24
    5a90:	ee 0f       	add	r30, r30
    5a92:	ff 1f       	adc	r31, r31
    5a94:	df 01       	movw	r26, r30
    5a96:	a8 0f       	add	r26, r24
    5a98:	b9 1f       	adc	r27, r25
    5a9a:	aa 0f       	add	r26, r26
    5a9c:	bb 1f       	adc	r27, r27
    5a9e:	ae 55       	subi	r26, 0x5E	; 94
    5aa0:	bc 4e       	sbci	r27, 0xEC	; 236
    5aa2:	0d 90       	ld	r0, X+
    5aa4:	bc 91       	ld	r27, X
    5aa6:	a0 2d       	mov	r26, r0
    5aa8:	2c 91       	ld	r18, X
    5aaa:	e8 0f       	add	r30, r24
    5aac:	f9 1f       	adc	r31, r25
    5aae:	ee 0f       	add	r30, r30
    5ab0:	ff 1f       	adc	r31, r31
    5ab2:	ee 55       	subi	r30, 0x5E	; 94
    5ab4:	fc 4e       	sbci	r31, 0xEC	; 236
    5ab6:	81 e0       	ldi	r24, 0x01	; 1
    5ab8:	90 e0       	ldi	r25, 0x00	; 0
    5aba:	02 80       	ldd	r0, Z+2	; 0x02
    5abc:	02 c0       	rjmp	.+4      	; 0x5ac2 <_turn_off+0x8c>
    5abe:	88 0f       	add	r24, r24
    5ac0:	99 1f       	adc	r25, r25
    5ac2:	0a 94       	dec	r0
    5ac4:	e2 f7       	brpl	.-8      	; 0x5abe <_turn_off+0x88>
    5ac6:	80 95       	com	r24
    5ac8:	82 23       	and	r24, r18
    5aca:	8c 93       	st	X, r24
    5acc:	08 95       	ret

00005ace <_turn_on>:
    5ace:	90 e0       	ldi	r25, 0x00	; 0
    5ad0:	fc 01       	movw	r30, r24
    5ad2:	ee 0f       	add	r30, r30
    5ad4:	ff 1f       	adc	r31, r31
    5ad6:	e8 0f       	add	r30, r24
    5ad8:	f9 1f       	adc	r31, r25
    5ada:	ee 0f       	add	r30, r30
    5adc:	ff 1f       	adc	r31, r31
    5ade:	ee 55       	subi	r30, 0x5E	; 94
    5ae0:	fc 4e       	sbci	r31, 0xEC	; 236
    5ae2:	23 81       	ldd	r18, Z+3	; 0x03
    5ae4:	21 11       	cpse	r18, r1
    5ae6:	20 c0       	rjmp	.+64     	; 0x5b28 <_turn_on+0x5a>
    5ae8:	9c 01       	movw	r18, r24
    5aea:	22 0f       	add	r18, r18
    5aec:	33 1f       	adc	r19, r19
    5aee:	f9 01       	movw	r30, r18
    5af0:	e8 0f       	add	r30, r24
    5af2:	f9 1f       	adc	r31, r25
    5af4:	ee 0f       	add	r30, r30
    5af6:	ff 1f       	adc	r31, r31
    5af8:	ee 55       	subi	r30, 0x5E	; 94
    5afa:	fc 4e       	sbci	r31, 0xEC	; 236
    5afc:	a0 81       	ld	r26, Z
    5afe:	b1 81       	ldd	r27, Z+1	; 0x01
    5b00:	4c 91       	ld	r20, X
    5b02:	f9 01       	movw	r30, r18
    5b04:	e8 0f       	add	r30, r24
    5b06:	f9 1f       	adc	r31, r25
    5b08:	ee 0f       	add	r30, r30
    5b0a:	ff 1f       	adc	r31, r31
    5b0c:	ee 55       	subi	r30, 0x5E	; 94
    5b0e:	fc 4e       	sbci	r31, 0xEC	; 236
    5b10:	81 e0       	ldi	r24, 0x01	; 1
    5b12:	90 e0       	ldi	r25, 0x00	; 0
    5b14:	02 80       	ldd	r0, Z+2	; 0x02
    5b16:	02 c0       	rjmp	.+4      	; 0x5b1c <_turn_on+0x4e>
    5b18:	88 0f       	add	r24, r24
    5b1a:	99 1f       	adc	r25, r25
    5b1c:	0a 94       	dec	r0
    5b1e:	e2 f7       	brpl	.-8      	; 0x5b18 <_turn_on+0x4a>
    5b20:	80 95       	com	r24
    5b22:	84 23       	and	r24, r20
    5b24:	8c 93       	st	X, r24
    5b26:	08 95       	ret
    5b28:	fc 01       	movw	r30, r24
    5b2a:	ee 0f       	add	r30, r30
    5b2c:	ff 1f       	adc	r31, r31
    5b2e:	df 01       	movw	r26, r30
    5b30:	a8 0f       	add	r26, r24
    5b32:	b9 1f       	adc	r27, r25
    5b34:	aa 0f       	add	r26, r26
    5b36:	bb 1f       	adc	r27, r27
    5b38:	ae 55       	subi	r26, 0x5E	; 94
    5b3a:	bc 4e       	sbci	r27, 0xEC	; 236
    5b3c:	0d 90       	ld	r0, X+
    5b3e:	bc 91       	ld	r27, X
    5b40:	a0 2d       	mov	r26, r0
    5b42:	2c 91       	ld	r18, X
    5b44:	e8 0f       	add	r30, r24
    5b46:	f9 1f       	adc	r31, r25
    5b48:	ee 0f       	add	r30, r30
    5b4a:	ff 1f       	adc	r31, r31
    5b4c:	ee 55       	subi	r30, 0x5E	; 94
    5b4e:	fc 4e       	sbci	r31, 0xEC	; 236
    5b50:	81 e0       	ldi	r24, 0x01	; 1
    5b52:	90 e0       	ldi	r25, 0x00	; 0
    5b54:	02 80       	ldd	r0, Z+2	; 0x02
    5b56:	02 c0       	rjmp	.+4      	; 0x5b5c <_turn_on+0x8e>
    5b58:	88 0f       	add	r24, r24
    5b5a:	99 1f       	adc	r25, r25
    5b5c:	0a 94       	dec	r0
    5b5e:	e2 f7       	brpl	.-8      	; 0x5b58 <_turn_on+0x8a>
    5b60:	82 2b       	or	r24, r18
    5b62:	8c 93       	st	X, r24
    5b64:	08 95       	ret

00005b66 <_hal_led_task>:
    5b66:	cc 24       	eor	r12, r12
    5b68:	c3 94       	inc	r12
    5b6a:	d1 2c       	mov	r13, r1
    5b6c:	68 94       	set
    5b6e:	bb 24       	eor	r11, r11
    5b70:	b2 f8       	bld	r11, 2
    5b72:	c2 ea       	ldi	r28, 0xA2	; 162
    5b74:	d3 e1       	ldi	r29, 0x13	; 19
    5b76:	10 e0       	ldi	r17, 0x00	; 0
    5b78:	8c 81       	ldd	r24, Y+4	; 0x04
    5b7a:	81 30       	cpi	r24, 0x01	; 1
    5b7c:	81 f0       	breq	.+32     	; 0x5b9e <_hal_led_task+0x38>
    5b7e:	18 f1       	brcs	.+70     	; 0x5bc6 <_hal_led_task+0x60>
    5b80:	82 30       	cpi	r24, 0x02	; 2
    5b82:	61 f5       	brne	.+88     	; 0x5bdc <_hal_led_task+0x76>
    5b84:	e8 81       	ld	r30, Y
    5b86:	f9 81       	ldd	r31, Y+1	; 0x01
    5b88:	20 81       	ld	r18, Z
    5b8a:	c6 01       	movw	r24, r12
    5b8c:	0a 80       	ldd	r0, Y+2	; 0x02
    5b8e:	02 c0       	rjmp	.+4      	; 0x5b94 <_hal_led_task+0x2e>
    5b90:	88 0f       	add	r24, r24
    5b92:	99 1f       	adc	r25, r25
    5b94:	0a 94       	dec	r0
    5b96:	e2 f7       	brpl	.-8      	; 0x5b90 <_hal_led_task+0x2a>
    5b98:	82 27       	eor	r24, r18
    5b9a:	80 83       	st	Z, r24
    5b9c:	1f c0       	rjmp	.+62     	; 0x5bdc <_hal_led_task+0x76>
    5b9e:	8d 81       	ldd	r24, Y+5	; 0x05
    5ba0:	8f 5f       	subi	r24, 0xFF	; 255
    5ba2:	8a 30       	cpi	r24, 0x0A	; 10
    5ba4:	10 f4       	brcc	.+4      	; 0x5baa <_hal_led_task+0x44>
    5ba6:	8d 83       	std	Y+5, r24	; 0x05
    5ba8:	19 c0       	rjmp	.+50     	; 0x5bdc <_hal_led_task+0x76>
    5baa:	1d 82       	std	Y+5, r1	; 0x05
    5bac:	e8 81       	ld	r30, Y
    5bae:	f9 81       	ldd	r31, Y+1	; 0x01
    5bb0:	20 81       	ld	r18, Z
    5bb2:	c6 01       	movw	r24, r12
    5bb4:	0a 80       	ldd	r0, Y+2	; 0x02
    5bb6:	02 c0       	rjmp	.+4      	; 0x5bbc <_hal_led_task+0x56>
    5bb8:	88 0f       	add	r24, r24
    5bba:	99 1f       	adc	r25, r25
    5bbc:	0a 94       	dec	r0
    5bbe:	e2 f7       	brpl	.-8      	; 0x5bb8 <_hal_led_task+0x52>
    5bc0:	82 27       	eor	r24, r18
    5bc2:	80 83       	st	Z, r24
    5bc4:	0b c0       	rjmp	.+22     	; 0x5bdc <_hal_led_task+0x76>
    5bc6:	0d 81       	ldd	r16, Y+5	; 0x05
    5bc8:	00 23       	and	r16, r16
    5bca:	29 f0       	breq	.+10     	; 0x5bd6 <_hal_led_task+0x70>
    5bcc:	81 2f       	mov	r24, r17
    5bce:	7f df       	rcall	.-258    	; 0x5ace <_turn_on>
    5bd0:	01 50       	subi	r16, 0x01	; 1
    5bd2:	0d 83       	std	Y+5, r16	; 0x05
    5bd4:	03 c0       	rjmp	.+6      	; 0x5bdc <_hal_led_task+0x76>
    5bd6:	bc 82       	std	Y+4, r11	; 0x04
    5bd8:	81 2f       	mov	r24, r17
    5bda:	2d df       	rcall	.-422    	; 0x5a36 <_turn_off>
    5bdc:	1f 5f       	subi	r17, 0xFF	; 255
    5bde:	26 96       	adiw	r28, 0x06	; 6
    5be0:	14 30       	cpi	r17, 0x04	; 4
    5be2:	51 f6       	brne	.-108    	; 0x5b78 <_hal_led_task+0x12>
    5be4:	65 e0       	ldi	r22, 0x05	; 5
    5be6:	70 e0       	ldi	r23, 0x00	; 0
    5be8:	80 e0       	ldi	r24, 0x00	; 0
    5bea:	90 e0       	ldi	r25, 0x00	; 0
    5bec:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vTaskDelay>
    5bf0:	c0 cf       	rjmp	.-128    	; 0x5b72 <_hal_led_task+0xc>

00005bf2 <status_leds_initialise>:
    5bf2:	ef 92       	push	r14
    5bf4:	ff 92       	push	r15
    5bf6:	0f 93       	push	r16
    5bf8:	1f 93       	push	r17
    5bfa:	cf 93       	push	r28
    5bfc:	df 93       	push	r29
    5bfe:	08 2f       	mov	r16, r24
    5c00:	80 e4       	ldi	r24, 0x40	; 64
    5c02:	87 b9       	out	0x07, r24	; 7
    5c04:	c2 ea       	ldi	r28, 0xA2	; 162
    5c06:	d3 e1       	ldi	r29, 0x13	; 19
    5c08:	0f 2e       	mov	r0, r31
    5c0a:	f8 e2       	ldi	r31, 0x28	; 40
    5c0c:	ef 2e       	mov	r14, r31
    5c0e:	f1 2c       	mov	r15, r1
    5c10:	f0 2d       	mov	r31, r0
    5c12:	f9 82       	std	Y+1, r15	; 0x01
    5c14:	e8 82       	st	Y, r14
    5c16:	86 e0       	ldi	r24, 0x06	; 6
    5c18:	8a 83       	std	Y+2, r24	; 0x02
    5c1a:	1b 82       	std	Y+3, r1	; 0x03
    5c1c:	14 e0       	ldi	r17, 0x04	; 4
    5c1e:	1c 83       	std	Y+4, r17	; 0x04
    5c20:	80 e0       	ldi	r24, 0x00	; 0
    5c22:	09 df       	rcall	.-494    	; 0x5a36 <_turn_off>
    5c24:	80 e8       	ldi	r24, 0x80	; 128
    5c26:	87 b9       	out	0x07, r24	; 7
    5c28:	ff 82       	std	Y+7, r15	; 0x07
    5c2a:	ee 82       	std	Y+6, r14	; 0x06
    5c2c:	87 e0       	ldi	r24, 0x07	; 7
    5c2e:	88 87       	std	Y+8, r24	; 0x08
    5c30:	19 86       	std	Y+9, r1	; 0x09
    5c32:	1a 87       	std	Y+10, r17	; 0x0a
    5c34:	81 e0       	ldi	r24, 0x01	; 1
    5c36:	ff de       	rcall	.-514    	; 0x5a36 <_turn_off>
    5c38:	80 e2       	ldi	r24, 0x20	; 32
    5c3a:	83 bb       	out	0x13, r24	; 19
    5c3c:	84 e3       	ldi	r24, 0x34	; 52
    5c3e:	90 e0       	ldi	r25, 0x00	; 0
    5c40:	9d 87       	std	Y+13, r25	; 0x0d
    5c42:	8c 87       	std	Y+12, r24	; 0x0c
    5c44:	85 e0       	ldi	r24, 0x05	; 5
    5c46:	8e 87       	std	Y+14, r24	; 0x0e
    5c48:	1f 86       	std	Y+15, r1	; 0x0f
    5c4a:	18 8b       	std	Y+16, r17	; 0x10
    5c4c:	82 e0       	ldi	r24, 0x02	; 2
    5c4e:	f3 de       	rcall	.-538    	; 0x5a36 <_turn_off>
    5c50:	80 e1       	ldi	r24, 0x10	; 16
    5c52:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
    5c56:	82 e0       	ldi	r24, 0x02	; 2
    5c58:	91 e0       	ldi	r25, 0x01	; 1
    5c5a:	9b 8b       	std	Y+19, r25	; 0x13
    5c5c:	8a 8b       	std	Y+18, r24	; 0x12
    5c5e:	1c 8b       	std	Y+20, r17	; 0x14
    5c60:	1d 8a       	std	Y+21, r1	; 0x15
    5c62:	1e 8b       	std	Y+22, r17	; 0x16
    5c64:	83 e0       	ldi	r24, 0x03	; 3
    5c66:	e7 de       	rcall	.-562    	; 0x5a36 <_turn_off>
    5c68:	e1 2c       	mov	r14, r1
    5c6a:	f1 2c       	mov	r15, r1
    5c6c:	20 e0       	ldi	r18, 0x00	; 0
    5c6e:	30 e0       	ldi	r19, 0x00	; 0
    5c70:	40 ec       	ldi	r20, 0xC0	; 192
    5c72:	50 e0       	ldi	r21, 0x00	; 0
    5c74:	68 e5       	ldi	r22, 0x58	; 88
    5c76:	77 e0       	ldi	r23, 0x07	; 7
    5c78:	83 eb       	ldi	r24, 0xB3	; 179
    5c7a:	9d e2       	ldi	r25, 0x2D	; 45
    5c7c:	0e 94 c7 12 	call	0x258e	; 0x258e <xTaskCreate>
    5c80:	df 91       	pop	r29
    5c82:	cf 91       	pop	r28
    5c84:	1f 91       	pop	r17
    5c86:	0f 91       	pop	r16
    5c88:	ff 90       	pop	r15
    5c8a:	ef 90       	pop	r14
    5c8c:	08 95       	ret

00005c8e <status_leds_slowBlink>:
    5c8e:	cf 93       	push	r28
    5c90:	df 93       	push	r29
    5c92:	90 e0       	ldi	r25, 0x00	; 0
    5c94:	fc 01       	movw	r30, r24
    5c96:	ee 0f       	add	r30, r30
    5c98:	ff 1f       	adc	r31, r31
    5c9a:	df 01       	movw	r26, r30
    5c9c:	a8 0f       	add	r26, r24
    5c9e:	b9 1f       	adc	r27, r25
    5ca0:	aa 0f       	add	r26, r26
    5ca2:	bb 1f       	adc	r27, r27
    5ca4:	ae 55       	subi	r26, 0x5E	; 94
    5ca6:	bc 4e       	sbci	r27, 0xEC	; 236
    5ca8:	cd 91       	ld	r28, X+
    5caa:	dc 91       	ld	r29, X
    5cac:	11 97       	sbiw	r26, 0x01	; 1
    5cae:	48 81       	ld	r20, Y
    5cb0:	21 e0       	ldi	r18, 0x01	; 1
    5cb2:	30 e0       	ldi	r19, 0x00	; 0
    5cb4:	12 96       	adiw	r26, 0x02	; 2
    5cb6:	0c 90       	ld	r0, X
    5cb8:	12 97       	sbiw	r26, 0x02	; 2
    5cba:	02 c0       	rjmp	.+4      	; 0x5cc0 <status_leds_slowBlink+0x32>
    5cbc:	22 0f       	add	r18, r18
    5cbe:	33 1f       	adc	r19, r19
    5cc0:	0a 94       	dec	r0
    5cc2:	e2 f7       	brpl	.-8      	; 0x5cbc <status_leds_slowBlink+0x2e>
    5cc4:	24 27       	eor	r18, r20
    5cc6:	28 83       	st	Y, r18
    5cc8:	fd 01       	movw	r30, r26
    5cca:	81 e0       	ldi	r24, 0x01	; 1
    5ccc:	84 83       	std	Z+4, r24	; 0x04
    5cce:	df 91       	pop	r29
    5cd0:	cf 91       	pop	r28
    5cd2:	08 95       	ret

00005cd4 <status_leds_fastBlink>:
    5cd4:	cf 93       	push	r28
    5cd6:	df 93       	push	r29
    5cd8:	90 e0       	ldi	r25, 0x00	; 0
    5cda:	fc 01       	movw	r30, r24
    5cdc:	ee 0f       	add	r30, r30
    5cde:	ff 1f       	adc	r31, r31
    5ce0:	df 01       	movw	r26, r30
    5ce2:	a8 0f       	add	r26, r24
    5ce4:	b9 1f       	adc	r27, r25
    5ce6:	aa 0f       	add	r26, r26
    5ce8:	bb 1f       	adc	r27, r27
    5cea:	ae 55       	subi	r26, 0x5E	; 94
    5cec:	bc 4e       	sbci	r27, 0xEC	; 236
    5cee:	cd 91       	ld	r28, X+
    5cf0:	dc 91       	ld	r29, X
    5cf2:	11 97       	sbiw	r26, 0x01	; 1
    5cf4:	48 81       	ld	r20, Y
    5cf6:	21 e0       	ldi	r18, 0x01	; 1
    5cf8:	30 e0       	ldi	r19, 0x00	; 0
    5cfa:	12 96       	adiw	r26, 0x02	; 2
    5cfc:	0c 90       	ld	r0, X
    5cfe:	12 97       	sbiw	r26, 0x02	; 2
    5d00:	02 c0       	rjmp	.+4      	; 0x5d06 <status_leds_fastBlink+0x32>
    5d02:	22 0f       	add	r18, r18
    5d04:	33 1f       	adc	r19, r19
    5d06:	0a 94       	dec	r0
    5d08:	e2 f7       	brpl	.-8      	; 0x5d02 <status_leds_fastBlink+0x2e>
    5d0a:	24 27       	eor	r18, r20
    5d0c:	28 83       	st	Y, r18
    5d0e:	fd 01       	movw	r30, r26
    5d10:	82 e0       	ldi	r24, 0x02	; 2
    5d12:	84 83       	std	Z+4, r24	; 0x04
    5d14:	df 91       	pop	r29
    5d16:	cf 91       	pop	r28
    5d18:	08 95       	ret

00005d1a <status_leds_ledOn>:
    5d1a:	28 2f       	mov	r18, r24
    5d1c:	30 e0       	ldi	r19, 0x00	; 0
    5d1e:	f9 01       	movw	r30, r18
    5d20:	ee 0f       	add	r30, r30
    5d22:	ff 1f       	adc	r31, r31
    5d24:	e2 0f       	add	r30, r18
    5d26:	f3 1f       	adc	r31, r19
    5d28:	ee 0f       	add	r30, r30
    5d2a:	ff 1f       	adc	r31, r31
    5d2c:	ee 55       	subi	r30, 0x5E	; 94
    5d2e:	fc 4e       	sbci	r31, 0xEC	; 236
    5d30:	93 e0       	ldi	r25, 0x03	; 3
    5d32:	94 83       	std	Z+4, r25	; 0x04
    5d34:	cc ce       	rjmp	.-616    	; 0x5ace <_turn_on>
    5d36:	08 95       	ret

00005d38 <status_leds_ledOff>:
    5d38:	28 2f       	mov	r18, r24
    5d3a:	30 e0       	ldi	r19, 0x00	; 0
    5d3c:	f9 01       	movw	r30, r18
    5d3e:	ee 0f       	add	r30, r30
    5d40:	ff 1f       	adc	r31, r31
    5d42:	e2 0f       	add	r30, r18
    5d44:	f3 1f       	adc	r31, r19
    5d46:	ee 0f       	add	r30, r30
    5d48:	ff 1f       	adc	r31, r31
    5d4a:	ee 55       	subi	r30, 0x5E	; 94
    5d4c:	fc 4e       	sbci	r31, 0xEC	; 236
    5d4e:	94 e0       	ldi	r25, 0x04	; 4
    5d50:	94 83       	std	Z+4, r25	; 0x04
    5d52:	71 ce       	rjmp	.-798    	; 0x5a36 <_turn_off>
    5d54:	08 95       	ret

00005d56 <status_leds_longPuls>:
    5d56:	90 e0       	ldi	r25, 0x00	; 0
    5d58:	fc 01       	movw	r30, r24
    5d5a:	ee 0f       	add	r30, r30
    5d5c:	ff 1f       	adc	r31, r31
    5d5e:	df 01       	movw	r26, r30
    5d60:	a8 0f       	add	r26, r24
    5d62:	b9 1f       	adc	r27, r25
    5d64:	aa 0f       	add	r26, r26
    5d66:	bb 1f       	adc	r27, r27
    5d68:	ae 55       	subi	r26, 0x5E	; 94
    5d6a:	bc 4e       	sbci	r27, 0xEC	; 236
    5d6c:	24 e0       	ldi	r18, 0x04	; 4
    5d6e:	15 96       	adiw	r26, 0x05	; 5
    5d70:	2c 93       	st	X, r18
    5d72:	15 97       	sbiw	r26, 0x05	; 5
    5d74:	fd 01       	movw	r30, r26
    5d76:	14 82       	std	Z+4, r1	; 0x04
    5d78:	08 95       	ret

00005d7a <status_leds_shortPuls>:
    5d7a:	90 e0       	ldi	r25, 0x00	; 0
    5d7c:	fc 01       	movw	r30, r24
    5d7e:	ee 0f       	add	r30, r30
    5d80:	ff 1f       	adc	r31, r31
    5d82:	df 01       	movw	r26, r30
    5d84:	a8 0f       	add	r26, r24
    5d86:	b9 1f       	adc	r27, r25
    5d88:	aa 0f       	add	r26, r26
    5d8a:	bb 1f       	adc	r27, r27
    5d8c:	ae 55       	subi	r26, 0x5E	; 94
    5d8e:	bc 4e       	sbci	r27, 0xEC	; 236
    5d90:	21 e0       	ldi	r18, 0x01	; 1
    5d92:	15 96       	adiw	r26, 0x05	; 5
    5d94:	2c 93       	st	X, r18
    5d96:	15 97       	sbiw	r26, 0x05	; 5
    5d98:	fd 01       	movw	r30, r26
    5d9a:	14 82       	std	Z+4, r1	; 0x04
    5d9c:	08 95       	ret

00005d9e <_initTwiInterface>:
    5d9e:	80 91 c8 13 	lds	r24, 0x13C8	; 0x8013c8 <_twiIsInitiated>
    5da2:	81 11       	cpse	r24, r1
    5da4:	0c c0       	rjmp	.+24     	; 0x5dbe <_initTwiInterface+0x20>
    5da6:	8c e0       	ldi	r24, 0x0C	; 12
    5da8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
    5dac:	8f ef       	ldi	r24, 0xFF	; 255
    5dae:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    5db2:	84 e0       	ldi	r24, 0x04	; 4
    5db4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    5db8:	81 e0       	ldi	r24, 0x01	; 1
    5dba:	80 93 c8 13 	sts	0x13C8, r24	; 0x8013c8 <_twiIsInitiated>
    5dbe:	08 95       	ret

00005dc0 <twiCreate>:
    5dc0:	af 92       	push	r10
    5dc2:	bf 92       	push	r11
    5dc4:	cf 92       	push	r12
    5dc6:	df 92       	push	r13
    5dc8:	ef 92       	push	r14
    5dca:	ff 92       	push	r15
    5dcc:	0f 93       	push	r16
    5dce:	1f 93       	push	r17
    5dd0:	cf 93       	push	r28
    5dd2:	df 93       	push	r29
    5dd4:	a8 2e       	mov	r10, r24
    5dd6:	b6 2e       	mov	r11, r22
    5dd8:	69 01       	movw	r12, r18
    5dda:	7a 01       	movw	r14, r20
    5ddc:	84 e0       	ldi	r24, 0x04	; 4
    5dde:	90 e0       	ldi	r25, 0x00	; 0
    5de0:	b1 d3       	rcall	.+1890   	; 0x6544 <malloc>
    5de2:	ec 01       	movw	r28, r24
    5de4:	89 2b       	or	r24, r25
    5de6:	61 f1       	breq	.+88     	; 0x5e40 <twiCreate+0x80>
    5de8:	a8 82       	st	Y, r10
    5dea:	81 e0       	ldi	r24, 0x01	; 1
    5dec:	b8 12       	cpse	r11, r24
    5dee:	12 c0       	rjmp	.+36     	; 0x5e14 <twiCreate+0x54>
    5df0:	c7 01       	movw	r24, r14
    5df2:	b6 01       	movw	r22, r12
    5df4:	20 ea       	ldi	r18, 0xA0	; 160
    5df6:	36 e8       	ldi	r19, 0x86	; 134
    5df8:	41 e0       	ldi	r20, 0x01	; 1
    5dfa:	50 e0       	ldi	r21, 0x00	; 0
    5dfc:	79 d3       	rcall	.+1778   	; 0x64f0 <__udivmodsi4>
    5dfe:	da 01       	movw	r26, r20
    5e00:	c9 01       	movw	r24, r18
    5e02:	40 97       	sbiw	r24, 0x10	; 16
    5e04:	a1 09       	sbc	r26, r1
    5e06:	b1 09       	sbc	r27, r1
    5e08:	b6 95       	lsr	r27
    5e0a:	a7 95       	ror	r26
    5e0c:	97 95       	ror	r25
    5e0e:	87 95       	ror	r24
    5e10:	89 83       	std	Y+1, r24	; 0x01
    5e12:	11 c0       	rjmp	.+34     	; 0x5e36 <twiCreate+0x76>
    5e14:	c7 01       	movw	r24, r14
    5e16:	b6 01       	movw	r22, r12
    5e18:	20 e8       	ldi	r18, 0x80	; 128
    5e1a:	3a e1       	ldi	r19, 0x1A	; 26
    5e1c:	46 e0       	ldi	r20, 0x06	; 6
    5e1e:	50 e0       	ldi	r21, 0x00	; 0
    5e20:	67 d3       	rcall	.+1742   	; 0x64f0 <__udivmodsi4>
    5e22:	da 01       	movw	r26, r20
    5e24:	c9 01       	movw	r24, r18
    5e26:	40 97       	sbiw	r24, 0x10	; 16
    5e28:	a1 09       	sbc	r26, r1
    5e2a:	b1 09       	sbc	r27, r1
    5e2c:	b6 95       	lsr	r27
    5e2e:	a7 95       	ror	r26
    5e30:	97 95       	ror	r25
    5e32:	87 95       	ror	r24
    5e34:	89 83       	std	Y+1, r24	; 0x01
    5e36:	1b 83       	std	Y+3, r17	; 0x03
    5e38:	0a 83       	std	Y+2, r16	; 0x02
    5e3a:	8c 2f       	mov	r24, r28
    5e3c:	9d 2f       	mov	r25, r29
    5e3e:	02 c0       	rjmp	.+4      	; 0x5e44 <twiCreate+0x84>
    5e40:	80 e0       	ldi	r24, 0x00	; 0
    5e42:	90 e0       	ldi	r25, 0x00	; 0
    5e44:	df 91       	pop	r29
    5e46:	cf 91       	pop	r28
    5e48:	1f 91       	pop	r17
    5e4a:	0f 91       	pop	r16
    5e4c:	ff 90       	pop	r15
    5e4e:	ef 90       	pop	r14
    5e50:	df 90       	pop	r13
    5e52:	cf 90       	pop	r12
    5e54:	bf 90       	pop	r11
    5e56:	af 90       	pop	r10
    5e58:	08 95       	ret

00005e5a <twiIsBusy>:
    5e5a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    5e5e:	81 70       	andi	r24, 0x01	; 1
    5e60:	08 95       	ret

00005e62 <twiTransmit>:
    5e62:	ff 92       	push	r15
    5e64:	0f 93       	push	r16
    5e66:	1f 93       	push	r17
    5e68:	cf 93       	push	r28
    5e6a:	df 93       	push	r29
    5e6c:	00 97       	sbiw	r24, 0x00	; 0
    5e6e:	d1 f1       	breq	.+116    	; 0x5ee4 <twiTransmit+0x82>
    5e70:	4a 30       	cpi	r20, 0x0A	; 10
    5e72:	d0 f5       	brcc	.+116    	; 0x5ee8 <twiTransmit+0x86>
    5e74:	f4 2e       	mov	r15, r20
    5e76:	8b 01       	movw	r16, r22
    5e78:	ec 01       	movw	r28, r24
    5e7a:	ef df       	rcall	.-34     	; 0x5e5a <twiIsBusy>
    5e7c:	81 11       	cpse	r24, r1
    5e7e:	36 c0       	rjmp	.+108    	; 0x5eec <twiTransmit+0x8a>
    5e80:	80 91 bb 13 	lds	r24, 0x13BB	; 0x8013bb <_twiCurrentHandler>
    5e84:	90 91 bc 13 	lds	r25, 0x13BC	; 0x8013bc <_twiCurrentHandler+0x1>
    5e88:	c8 17       	cp	r28, r24
    5e8a:	d9 07       	cpc	r29, r25
    5e8c:	41 f0       	breq	.+16     	; 0x5e9e <twiTransmit+0x3c>
    5e8e:	87 df       	rcall	.-242    	; 0x5d9e <_initTwiInterface>
    5e90:	89 81       	ldd	r24, Y+1	; 0x01
    5e92:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
    5e96:	d0 93 bc 13 	sts	0x13BC, r29	; 0x8013bc <_twiCurrentHandler+0x1>
    5e9a:	c0 93 bb 13 	sts	0x13BB, r28	; 0x8013bb <_twiCurrentHandler>
    5e9e:	81 e0       	ldi	r24, 0x01	; 1
    5ea0:	8f 0d       	add	r24, r15
    5ea2:	80 93 bd 13 	sts	0x13BD, r24	; 0x8013bd <_twiMessageLen>
    5ea6:	88 81       	ld	r24, Y
    5ea8:	88 0f       	add	r24, r24
    5eaa:	80 93 be 13 	sts	0x13BE, r24	; 0x8013be <_twiMessageBuffer>
    5eae:	ff 20       	and	r15, r15
    5eb0:	89 f0       	breq	.+34     	; 0x5ed4 <twiTransmit+0x72>
    5eb2:	f8 01       	movw	r30, r16
    5eb4:	af eb       	ldi	r26, 0xBF	; 191
    5eb6:	b3 e1       	ldi	r27, 0x13	; 19
    5eb8:	4f ef       	ldi	r20, 0xFF	; 255
    5eba:	4f 0d       	add	r20, r15
    5ebc:	64 2f       	mov	r22, r20
    5ebe:	70 e0       	ldi	r23, 0x00	; 0
    5ec0:	cb 01       	movw	r24, r22
    5ec2:	01 96       	adiw	r24, 0x01	; 1
    5ec4:	b8 01       	movw	r22, r16
    5ec6:	68 0f       	add	r22, r24
    5ec8:	79 1f       	adc	r23, r25
    5eca:	81 91       	ld	r24, Z+
    5ecc:	8d 93       	st	X+, r24
    5ece:	e6 17       	cp	r30, r22
    5ed0:	f7 07       	cpc	r31, r23
    5ed2:	d9 f7       	brne	.-10     	; 0x5eca <twiTransmit+0x68>
    5ed4:	88 ef       	ldi	r24, 0xF8	; 248
    5ed6:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <_twiCurrentState>
    5eda:	85 ea       	ldi	r24, 0xA5	; 165
    5edc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    5ee0:	84 e0       	ldi	r24, 0x04	; 4
    5ee2:	05 c0       	rjmp	.+10     	; 0x5eee <twiTransmit+0x8c>
    5ee4:	86 e0       	ldi	r24, 0x06	; 6
    5ee6:	03 c0       	rjmp	.+6      	; 0x5eee <twiTransmit+0x8c>
    5ee8:	87 e0       	ldi	r24, 0x07	; 7
    5eea:	01 c0       	rjmp	.+2      	; 0x5eee <twiTransmit+0x8c>
    5eec:	82 e0       	ldi	r24, 0x02	; 2
    5eee:	df 91       	pop	r29
    5ef0:	cf 91       	pop	r28
    5ef2:	1f 91       	pop	r17
    5ef4:	0f 91       	pop	r16
    5ef6:	ff 90       	pop	r15
    5ef8:	08 95       	ret

00005efa <twiReceive>:
    5efa:	1f 93       	push	r17
    5efc:	cf 93       	push	r28
    5efe:	df 93       	push	r29
    5f00:	00 97       	sbiw	r24, 0x00	; 0
    5f02:	29 f1       	breq	.+74     	; 0x5f4e <twiReceive+0x54>
    5f04:	6b 30       	cpi	r22, 0x0B	; 11
    5f06:	28 f5       	brcc	.+74     	; 0x5f52 <twiReceive+0x58>
    5f08:	16 2f       	mov	r17, r22
    5f0a:	ec 01       	movw	r28, r24
    5f0c:	a6 df       	rcall	.-180    	; 0x5e5a <twiIsBusy>
    5f0e:	81 11       	cpse	r24, r1
    5f10:	22 c0       	rjmp	.+68     	; 0x5f56 <twiReceive+0x5c>
    5f12:	80 91 bb 13 	lds	r24, 0x13BB	; 0x8013bb <_twiCurrentHandler>
    5f16:	90 91 bc 13 	lds	r25, 0x13BC	; 0x8013bc <_twiCurrentHandler+0x1>
    5f1a:	c8 17       	cp	r28, r24
    5f1c:	d9 07       	cpc	r29, r25
    5f1e:	41 f0       	breq	.+16     	; 0x5f30 <twiReceive+0x36>
    5f20:	3e df       	rcall	.-388    	; 0x5d9e <_initTwiInterface>
    5f22:	89 81       	ldd	r24, Y+1	; 0x01
    5f24:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
    5f28:	d0 93 bc 13 	sts	0x13BC, r29	; 0x8013bc <_twiCurrentHandler+0x1>
    5f2c:	c0 93 bb 13 	sts	0x13BB, r28	; 0x8013bb <_twiCurrentHandler>
    5f30:	10 93 bd 13 	sts	0x13BD, r17	; 0x8013bd <_twiMessageLen>
    5f34:	88 81       	ld	r24, Y
    5f36:	88 0f       	add	r24, r24
    5f38:	81 60       	ori	r24, 0x01	; 1
    5f3a:	80 93 be 13 	sts	0x13BE, r24	; 0x8013be <_twiMessageBuffer>
    5f3e:	88 ef       	ldi	r24, 0xF8	; 248
    5f40:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <_twiCurrentState>
    5f44:	85 ea       	ldi	r24, 0xA5	; 165
    5f46:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    5f4a:	85 e0       	ldi	r24, 0x05	; 5
    5f4c:	05 c0       	rjmp	.+10     	; 0x5f58 <twiReceive+0x5e>
    5f4e:	86 e0       	ldi	r24, 0x06	; 6
    5f50:	03 c0       	rjmp	.+6      	; 0x5f58 <twiReceive+0x5e>
    5f52:	87 e0       	ldi	r24, 0x07	; 7
    5f54:	01 c0       	rjmp	.+2      	; 0x5f58 <twiReceive+0x5e>
    5f56:	82 e0       	ldi	r24, 0x02	; 2
    5f58:	df 91       	pop	r29
    5f5a:	cf 91       	pop	r28
    5f5c:	1f 91       	pop	r17
    5f5e:	08 95       	ret

00005f60 <__vector_39>:
    5f60:	1f 92       	push	r1
    5f62:	0f 92       	push	r0
    5f64:	0f b6       	in	r0, 0x3f	; 63
    5f66:	0f 92       	push	r0
    5f68:	11 24       	eor	r1, r1
    5f6a:	0b b6       	in	r0, 0x3b	; 59
    5f6c:	0f 92       	push	r0
    5f6e:	2f 93       	push	r18
    5f70:	3f 93       	push	r19
    5f72:	4f 93       	push	r20
    5f74:	5f 93       	push	r21
    5f76:	6f 93       	push	r22
    5f78:	7f 93       	push	r23
    5f7a:	8f 93       	push	r24
    5f7c:	9f 93       	push	r25
    5f7e:	af 93       	push	r26
    5f80:	bf 93       	push	r27
    5f82:	ef 93       	push	r30
    5f84:	ff 93       	push	r31
    5f86:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    5f8a:	8e 2f       	mov	r24, r30
    5f8c:	90 e0       	ldi	r25, 0x00	; 0
    5f8e:	fc 01       	movw	r30, r24
    5f90:	38 97       	sbiw	r30, 0x08	; 8
    5f92:	e1 35       	cpi	r30, 0x51	; 81
    5f94:	f1 05       	cpc	r31, r1
    5f96:	08 f0       	brcs	.+2      	; 0x5f9a <__vector_39+0x3a>
    5f98:	75 c0       	rjmp	.+234    	; 0x6084 <__vector_39+0x124>
    5f9a:	88 27       	eor	r24, r24
    5f9c:	e4 58       	subi	r30, 0x84	; 132
    5f9e:	ff 4f       	sbci	r31, 0xFF	; 255
    5fa0:	8f 4f       	sbci	r24, 0xFF	; 255
    5fa2:	c8 c2       	rjmp	.+1424   	; 0x6534 <__tablejump2__>
    5fa4:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_index.1885>
    5fa8:	e0 91 ba 13 	lds	r30, 0x13BA	; 0x8013ba <_index.1885>
    5fac:	80 91 bd 13 	lds	r24, 0x13BD	; 0x8013bd <_twiMessageLen>
    5fb0:	e8 17       	cp	r30, r24
    5fb2:	70 f4       	brcc	.+28     	; 0x5fd0 <__vector_39+0x70>
    5fb4:	81 e0       	ldi	r24, 0x01	; 1
    5fb6:	8e 0f       	add	r24, r30
    5fb8:	80 93 ba 13 	sts	0x13BA, r24	; 0x8013ba <_index.1885>
    5fbc:	f0 e0       	ldi	r31, 0x00	; 0
    5fbe:	e2 54       	subi	r30, 0x42	; 66
    5fc0:	fc 4e       	sbci	r31, 0xEC	; 236
    5fc2:	80 81       	ld	r24, Z
    5fc4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    5fc8:	85 e8       	ldi	r24, 0x85	; 133
    5fca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    5fce:	72 c0       	rjmp	.+228    	; 0x60b4 <__vector_39+0x154>
    5fd0:	84 e9       	ldi	r24, 0x94	; 148
    5fd2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    5fd6:	80 91 bb 13 	lds	r24, 0x13BB	; 0x8013bb <_twiCurrentHandler>
    5fda:	90 91 bc 13 	lds	r25, 0x13BC	; 0x8013bc <_twiCurrentHandler+0x1>
    5fde:	dc 01       	movw	r26, r24
    5fe0:	12 96       	adiw	r26, 0x02	; 2
    5fe2:	ed 91       	ld	r30, X+
    5fe4:	fc 91       	ld	r31, X
    5fe6:	13 97       	sbiw	r26, 0x03	; 3
    5fe8:	30 97       	sbiw	r30, 0x00	; 0
    5fea:	09 f4       	brne	.+2      	; 0x5fee <__vector_39+0x8e>
    5fec:	63 c0       	rjmp	.+198    	; 0x60b4 <__vector_39+0x154>
    5fee:	20 e0       	ldi	r18, 0x00	; 0
    5ff0:	40 e0       	ldi	r20, 0x00	; 0
    5ff2:	50 e0       	ldi	r21, 0x00	; 0
    5ff4:	64 e0       	ldi	r22, 0x04	; 4
    5ff6:	19 95       	eicall
    5ff8:	5d c0       	rjmp	.+186    	; 0x60b4 <__vector_39+0x154>
    5ffa:	e0 91 ba 13 	lds	r30, 0x13BA	; 0x8013ba <_index.1885>
    5ffe:	81 e0       	ldi	r24, 0x01	; 1
    6000:	8e 0f       	add	r24, r30
    6002:	80 93 ba 13 	sts	0x13BA, r24	; 0x8013ba <_index.1885>
    6006:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    600a:	f0 e0       	ldi	r31, 0x00	; 0
    600c:	e2 54       	subi	r30, 0x42	; 66
    600e:	fc 4e       	sbci	r31, 0xEC	; 236
    6010:	80 83       	st	Z, r24
    6012:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    6016:	80 34       	cpi	r24, 0x40	; 64
    6018:	11 f4       	brne	.+4      	; 0x601e <__vector_39+0xbe>
    601a:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_index.1885>
    601e:	20 91 ba 13 	lds	r18, 0x13BA	; 0x8013ba <_index.1885>
    6022:	30 e0       	ldi	r19, 0x00	; 0
    6024:	80 91 bd 13 	lds	r24, 0x13BD	; 0x8013bd <_twiMessageLen>
    6028:	90 e0       	ldi	r25, 0x00	; 0
    602a:	01 97       	sbiw	r24, 0x01	; 1
    602c:	28 17       	cp	r18, r24
    602e:	39 07       	cpc	r19, r25
    6030:	24 f4       	brge	.+8      	; 0x603a <__vector_39+0xda>
    6032:	85 ec       	ldi	r24, 0xC5	; 197
    6034:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    6038:	3d c0       	rjmp	.+122    	; 0x60b4 <__vector_39+0x154>
    603a:	85 e8       	ldi	r24, 0x85	; 133
    603c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    6040:	39 c0       	rjmp	.+114    	; 0x60b4 <__vector_39+0x154>
    6042:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    6046:	e0 91 ba 13 	lds	r30, 0x13BA	; 0x8013ba <_index.1885>
    604a:	f0 e0       	ldi	r31, 0x00	; 0
    604c:	e2 54       	subi	r30, 0x42	; 66
    604e:	fc 4e       	sbci	r31, 0xEC	; 236
    6050:	80 83       	st	Z, r24
    6052:	84 e9       	ldi	r24, 0x94	; 148
    6054:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    6058:	80 91 bb 13 	lds	r24, 0x13BB	; 0x8013bb <_twiCurrentHandler>
    605c:	90 91 bc 13 	lds	r25, 0x13BC	; 0x8013bc <_twiCurrentHandler+0x1>
    6060:	dc 01       	movw	r26, r24
    6062:	12 96       	adiw	r26, 0x02	; 2
    6064:	ed 91       	ld	r30, X+
    6066:	fc 91       	ld	r31, X
    6068:	13 97       	sbiw	r26, 0x03	; 3
    606a:	30 97       	sbiw	r30, 0x00	; 0
    606c:	19 f1       	breq	.+70     	; 0x60b4 <__vector_39+0x154>
    606e:	20 91 bd 13 	lds	r18, 0x13BD	; 0x8013bd <_twiMessageLen>
    6072:	4e eb       	ldi	r20, 0xBE	; 190
    6074:	53 e1       	ldi	r21, 0x13	; 19
    6076:	65 e0       	ldi	r22, 0x05	; 5
    6078:	19 95       	eicall
    607a:	1c c0       	rjmp	.+56     	; 0x60b4 <__vector_39+0x154>
    607c:	85 ea       	ldi	r24, 0xA5	; 165
    607e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    6082:	18 c0       	rjmp	.+48     	; 0x60b4 <__vector_39+0x154>
    6084:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    6088:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <_twiCurrentState>
    608c:	84 e0       	ldi	r24, 0x04	; 4
    608e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    6092:	80 91 bb 13 	lds	r24, 0x13BB	; 0x8013bb <_twiCurrentHandler>
    6096:	90 91 bc 13 	lds	r25, 0x13BC	; 0x8013bc <_twiCurrentHandler+0x1>
    609a:	dc 01       	movw	r26, r24
    609c:	12 96       	adiw	r26, 0x02	; 2
    609e:	ed 91       	ld	r30, X+
    60a0:	fc 91       	ld	r31, X
    60a2:	13 97       	sbiw	r26, 0x03	; 3
    60a4:	30 97       	sbiw	r30, 0x00	; 0
    60a6:	31 f0       	breq	.+12     	; 0x60b4 <__vector_39+0x154>
    60a8:	20 e0       	ldi	r18, 0x00	; 0
    60aa:	40 e0       	ldi	r20, 0x00	; 0
    60ac:	50 e0       	ldi	r21, 0x00	; 0
    60ae:	60 91 21 02 	lds	r22, 0x0221	; 0x800221 <_twiCurrentState>
    60b2:	19 95       	eicall
    60b4:	ff 91       	pop	r31
    60b6:	ef 91       	pop	r30
    60b8:	bf 91       	pop	r27
    60ba:	af 91       	pop	r26
    60bc:	9f 91       	pop	r25
    60be:	8f 91       	pop	r24
    60c0:	7f 91       	pop	r23
    60c2:	6f 91       	pop	r22
    60c4:	5f 91       	pop	r21
    60c6:	4f 91       	pop	r20
    60c8:	3f 91       	pop	r19
    60ca:	2f 91       	pop	r18
    60cc:	0f 90       	pop	r0
    60ce:	0b be       	out	0x3b, r0	; 59
    60d0:	0f 90       	pop	r0
    60d2:	0f be       	out	0x3f, r0	; 63
    60d4:	0f 90       	pop	r0
    60d6:	1f 90       	pop	r1
    60d8:	18 95       	reti

000060da <fifo_init>:
    60da:	fc 01       	movw	r30, r24
    60dc:	41 11       	cpse	r20, r1
    60de:	01 c0       	rjmp	.+2      	; 0x60e2 <fifo_init+0x8>
    60e0:	52 d3       	rcall	.+1700   	; 0x6786 <abort>
    60e2:	84 2f       	mov	r24, r20
    60e4:	90 e0       	ldi	r25, 0x00	; 0
    60e6:	9c 01       	movw	r18, r24
    60e8:	21 50       	subi	r18, 0x01	; 1
    60ea:	31 09       	sbc	r19, r1
    60ec:	82 23       	and	r24, r18
    60ee:	93 23       	and	r25, r19
    60f0:	89 2b       	or	r24, r25
    60f2:	09 f0       	breq	.+2      	; 0x60f6 <fifo_init+0x1c>
    60f4:	48 d3       	rcall	.+1680   	; 0x6786 <abort>
    60f6:	41 38       	cpi	r20, 0x81	; 129
    60f8:	08 f0       	brcs	.+2      	; 0x60fc <fifo_init+0x22>
    60fa:	45 d3       	rcall	.+1674   	; 0x6786 <abort>
    60fc:	12 82       	std	Z+2, r1	; 0x02
    60fe:	13 82       	std	Z+3, r1	; 0x03
    6100:	44 83       	std	Z+4, r20	; 0x04
    6102:	44 0f       	add	r20, r20
    6104:	41 50       	subi	r20, 0x01	; 1
    6106:	45 83       	std	Z+5, r20	; 0x05
    6108:	71 83       	std	Z+1, r23	; 0x01
    610a:	60 83       	st	Z, r22
    610c:	80 e0       	ldi	r24, 0x00	; 0
    610e:	90 e0       	ldi	r25, 0x00	; 0
    6110:	08 95       	ret

00006112 <__subsf3>:
    6112:	50 58       	subi	r21, 0x80	; 128

00006114 <__addsf3>:
    6114:	bb 27       	eor	r27, r27
    6116:	aa 27       	eor	r26, r26
    6118:	0e d0       	rcall	.+28     	; 0x6136 <__addsf3x>
    611a:	4d c1       	rjmp	.+666    	; 0x63b6 <__fp_round>
    611c:	3e d1       	rcall	.+636    	; 0x639a <__fp_pscA>
    611e:	30 f0       	brcs	.+12     	; 0x612c <__addsf3+0x18>
    6120:	43 d1       	rcall	.+646    	; 0x63a8 <__fp_pscB>
    6122:	20 f0       	brcs	.+8      	; 0x612c <__addsf3+0x18>
    6124:	31 f4       	brne	.+12     	; 0x6132 <__addsf3+0x1e>
    6126:	9f 3f       	cpi	r25, 0xFF	; 255
    6128:	11 f4       	brne	.+4      	; 0x612e <__addsf3+0x1a>
    612a:	1e f4       	brtc	.+6      	; 0x6132 <__addsf3+0x1e>
    612c:	33 c1       	rjmp	.+614    	; 0x6394 <__fp_nan>
    612e:	0e f4       	brtc	.+2      	; 0x6132 <__addsf3+0x1e>
    6130:	e0 95       	com	r30
    6132:	e7 fb       	bst	r30, 7
    6134:	29 c1       	rjmp	.+594    	; 0x6388 <__fp_inf>

00006136 <__addsf3x>:
    6136:	e9 2f       	mov	r30, r25
    6138:	4f d1       	rcall	.+670    	; 0x63d8 <__fp_split3>
    613a:	80 f3       	brcs	.-32     	; 0x611c <__addsf3+0x8>
    613c:	ba 17       	cp	r27, r26
    613e:	62 07       	cpc	r22, r18
    6140:	73 07       	cpc	r23, r19
    6142:	84 07       	cpc	r24, r20
    6144:	95 07       	cpc	r25, r21
    6146:	18 f0       	brcs	.+6      	; 0x614e <__addsf3x+0x18>
    6148:	71 f4       	brne	.+28     	; 0x6166 <__addsf3x+0x30>
    614a:	9e f5       	brtc	.+102    	; 0x61b2 <__addsf3x+0x7c>
    614c:	67 c1       	rjmp	.+718    	; 0x641c <__fp_zero>
    614e:	0e f4       	brtc	.+2      	; 0x6152 <__addsf3x+0x1c>
    6150:	e0 95       	com	r30
    6152:	0b 2e       	mov	r0, r27
    6154:	ba 2f       	mov	r27, r26
    6156:	a0 2d       	mov	r26, r0
    6158:	0b 01       	movw	r0, r22
    615a:	b9 01       	movw	r22, r18
    615c:	90 01       	movw	r18, r0
    615e:	0c 01       	movw	r0, r24
    6160:	ca 01       	movw	r24, r20
    6162:	a0 01       	movw	r20, r0
    6164:	11 24       	eor	r1, r1
    6166:	ff 27       	eor	r31, r31
    6168:	59 1b       	sub	r21, r25
    616a:	99 f0       	breq	.+38     	; 0x6192 <__addsf3x+0x5c>
    616c:	59 3f       	cpi	r21, 0xF9	; 249
    616e:	50 f4       	brcc	.+20     	; 0x6184 <__addsf3x+0x4e>
    6170:	50 3e       	cpi	r21, 0xE0	; 224
    6172:	68 f1       	brcs	.+90     	; 0x61ce <__addsf3x+0x98>
    6174:	1a 16       	cp	r1, r26
    6176:	f0 40       	sbci	r31, 0x00	; 0
    6178:	a2 2f       	mov	r26, r18
    617a:	23 2f       	mov	r18, r19
    617c:	34 2f       	mov	r19, r20
    617e:	44 27       	eor	r20, r20
    6180:	58 5f       	subi	r21, 0xF8	; 248
    6182:	f3 cf       	rjmp	.-26     	; 0x616a <__addsf3x+0x34>
    6184:	46 95       	lsr	r20
    6186:	37 95       	ror	r19
    6188:	27 95       	ror	r18
    618a:	a7 95       	ror	r26
    618c:	f0 40       	sbci	r31, 0x00	; 0
    618e:	53 95       	inc	r21
    6190:	c9 f7       	brne	.-14     	; 0x6184 <__addsf3x+0x4e>
    6192:	7e f4       	brtc	.+30     	; 0x61b2 <__addsf3x+0x7c>
    6194:	1f 16       	cp	r1, r31
    6196:	ba 0b       	sbc	r27, r26
    6198:	62 0b       	sbc	r22, r18
    619a:	73 0b       	sbc	r23, r19
    619c:	84 0b       	sbc	r24, r20
    619e:	ba f0       	brmi	.+46     	; 0x61ce <__addsf3x+0x98>
    61a0:	91 50       	subi	r25, 0x01	; 1
    61a2:	a1 f0       	breq	.+40     	; 0x61cc <__addsf3x+0x96>
    61a4:	ff 0f       	add	r31, r31
    61a6:	bb 1f       	adc	r27, r27
    61a8:	66 1f       	adc	r22, r22
    61aa:	77 1f       	adc	r23, r23
    61ac:	88 1f       	adc	r24, r24
    61ae:	c2 f7       	brpl	.-16     	; 0x61a0 <__addsf3x+0x6a>
    61b0:	0e c0       	rjmp	.+28     	; 0x61ce <__addsf3x+0x98>
    61b2:	ba 0f       	add	r27, r26
    61b4:	62 1f       	adc	r22, r18
    61b6:	73 1f       	adc	r23, r19
    61b8:	84 1f       	adc	r24, r20
    61ba:	48 f4       	brcc	.+18     	; 0x61ce <__addsf3x+0x98>
    61bc:	87 95       	ror	r24
    61be:	77 95       	ror	r23
    61c0:	67 95       	ror	r22
    61c2:	b7 95       	ror	r27
    61c4:	f7 95       	ror	r31
    61c6:	9e 3f       	cpi	r25, 0xFE	; 254
    61c8:	08 f0       	brcs	.+2      	; 0x61cc <__addsf3x+0x96>
    61ca:	b3 cf       	rjmp	.-154    	; 0x6132 <__addsf3+0x1e>
    61cc:	93 95       	inc	r25
    61ce:	88 0f       	add	r24, r24
    61d0:	08 f0       	brcs	.+2      	; 0x61d4 <__addsf3x+0x9e>
    61d2:	99 27       	eor	r25, r25
    61d4:	ee 0f       	add	r30, r30
    61d6:	97 95       	ror	r25
    61d8:	87 95       	ror	r24
    61da:	08 95       	ret

000061dc <__divsf3>:
    61dc:	0c d0       	rcall	.+24     	; 0x61f6 <__divsf3x>
    61de:	eb c0       	rjmp	.+470    	; 0x63b6 <__fp_round>
    61e0:	e3 d0       	rcall	.+454    	; 0x63a8 <__fp_pscB>
    61e2:	40 f0       	brcs	.+16     	; 0x61f4 <__divsf3+0x18>
    61e4:	da d0       	rcall	.+436    	; 0x639a <__fp_pscA>
    61e6:	30 f0       	brcs	.+12     	; 0x61f4 <__divsf3+0x18>
    61e8:	21 f4       	brne	.+8      	; 0x61f2 <__divsf3+0x16>
    61ea:	5f 3f       	cpi	r21, 0xFF	; 255
    61ec:	19 f0       	breq	.+6      	; 0x61f4 <__divsf3+0x18>
    61ee:	cc c0       	rjmp	.+408    	; 0x6388 <__fp_inf>
    61f0:	51 11       	cpse	r21, r1
    61f2:	15 c1       	rjmp	.+554    	; 0x641e <__fp_szero>
    61f4:	cf c0       	rjmp	.+414    	; 0x6394 <__fp_nan>

000061f6 <__divsf3x>:
    61f6:	f0 d0       	rcall	.+480    	; 0x63d8 <__fp_split3>
    61f8:	98 f3       	brcs	.-26     	; 0x61e0 <__divsf3+0x4>

000061fa <__divsf3_pse>:
    61fa:	99 23       	and	r25, r25
    61fc:	c9 f3       	breq	.-14     	; 0x61f0 <__divsf3+0x14>
    61fe:	55 23       	and	r21, r21
    6200:	b1 f3       	breq	.-20     	; 0x61ee <__divsf3+0x12>
    6202:	95 1b       	sub	r25, r21
    6204:	55 0b       	sbc	r21, r21
    6206:	bb 27       	eor	r27, r27
    6208:	aa 27       	eor	r26, r26
    620a:	62 17       	cp	r22, r18
    620c:	73 07       	cpc	r23, r19
    620e:	84 07       	cpc	r24, r20
    6210:	38 f0       	brcs	.+14     	; 0x6220 <__divsf3_pse+0x26>
    6212:	9f 5f       	subi	r25, 0xFF	; 255
    6214:	5f 4f       	sbci	r21, 0xFF	; 255
    6216:	22 0f       	add	r18, r18
    6218:	33 1f       	adc	r19, r19
    621a:	44 1f       	adc	r20, r20
    621c:	aa 1f       	adc	r26, r26
    621e:	a9 f3       	breq	.-22     	; 0x620a <__divsf3_pse+0x10>
    6220:	33 d0       	rcall	.+102    	; 0x6288 <__divsf3_pse+0x8e>
    6222:	0e 2e       	mov	r0, r30
    6224:	3a f0       	brmi	.+14     	; 0x6234 <__divsf3_pse+0x3a>
    6226:	e0 e8       	ldi	r30, 0x80	; 128
    6228:	30 d0       	rcall	.+96     	; 0x628a <__divsf3_pse+0x90>
    622a:	91 50       	subi	r25, 0x01	; 1
    622c:	50 40       	sbci	r21, 0x00	; 0
    622e:	e6 95       	lsr	r30
    6230:	00 1c       	adc	r0, r0
    6232:	ca f7       	brpl	.-14     	; 0x6226 <__divsf3_pse+0x2c>
    6234:	29 d0       	rcall	.+82     	; 0x6288 <__divsf3_pse+0x8e>
    6236:	fe 2f       	mov	r31, r30
    6238:	27 d0       	rcall	.+78     	; 0x6288 <__divsf3_pse+0x8e>
    623a:	66 0f       	add	r22, r22
    623c:	77 1f       	adc	r23, r23
    623e:	88 1f       	adc	r24, r24
    6240:	bb 1f       	adc	r27, r27
    6242:	26 17       	cp	r18, r22
    6244:	37 07       	cpc	r19, r23
    6246:	48 07       	cpc	r20, r24
    6248:	ab 07       	cpc	r26, r27
    624a:	b0 e8       	ldi	r27, 0x80	; 128
    624c:	09 f0       	breq	.+2      	; 0x6250 <__divsf3_pse+0x56>
    624e:	bb 0b       	sbc	r27, r27
    6250:	80 2d       	mov	r24, r0
    6252:	bf 01       	movw	r22, r30
    6254:	ff 27       	eor	r31, r31
    6256:	93 58       	subi	r25, 0x83	; 131
    6258:	5f 4f       	sbci	r21, 0xFF	; 255
    625a:	2a f0       	brmi	.+10     	; 0x6266 <__divsf3_pse+0x6c>
    625c:	9e 3f       	cpi	r25, 0xFE	; 254
    625e:	51 05       	cpc	r21, r1
    6260:	68 f0       	brcs	.+26     	; 0x627c <__divsf3_pse+0x82>
    6262:	92 c0       	rjmp	.+292    	; 0x6388 <__fp_inf>
    6264:	dc c0       	rjmp	.+440    	; 0x641e <__fp_szero>
    6266:	5f 3f       	cpi	r21, 0xFF	; 255
    6268:	ec f3       	brlt	.-6      	; 0x6264 <__divsf3_pse+0x6a>
    626a:	98 3e       	cpi	r25, 0xE8	; 232
    626c:	dc f3       	brlt	.-10     	; 0x6264 <__divsf3_pse+0x6a>
    626e:	86 95       	lsr	r24
    6270:	77 95       	ror	r23
    6272:	67 95       	ror	r22
    6274:	b7 95       	ror	r27
    6276:	f7 95       	ror	r31
    6278:	9f 5f       	subi	r25, 0xFF	; 255
    627a:	c9 f7       	brne	.-14     	; 0x626e <__divsf3_pse+0x74>
    627c:	88 0f       	add	r24, r24
    627e:	91 1d       	adc	r25, r1
    6280:	96 95       	lsr	r25
    6282:	87 95       	ror	r24
    6284:	97 f9       	bld	r25, 7
    6286:	08 95       	ret
    6288:	e1 e0       	ldi	r30, 0x01	; 1
    628a:	66 0f       	add	r22, r22
    628c:	77 1f       	adc	r23, r23
    628e:	88 1f       	adc	r24, r24
    6290:	bb 1f       	adc	r27, r27
    6292:	62 17       	cp	r22, r18
    6294:	73 07       	cpc	r23, r19
    6296:	84 07       	cpc	r24, r20
    6298:	ba 07       	cpc	r27, r26
    629a:	20 f0       	brcs	.+8      	; 0x62a4 <__divsf3_pse+0xaa>
    629c:	62 1b       	sub	r22, r18
    629e:	73 0b       	sbc	r23, r19
    62a0:	84 0b       	sbc	r24, r20
    62a2:	ba 0b       	sbc	r27, r26
    62a4:	ee 1f       	adc	r30, r30
    62a6:	88 f7       	brcc	.-30     	; 0x628a <__divsf3_pse+0x90>
    62a8:	e0 95       	com	r30
    62aa:	08 95       	ret

000062ac <__fixsfsi>:
    62ac:	04 d0       	rcall	.+8      	; 0x62b6 <__fixunssfsi>
    62ae:	68 94       	set
    62b0:	b1 11       	cpse	r27, r1
    62b2:	b5 c0       	rjmp	.+362    	; 0x641e <__fp_szero>
    62b4:	08 95       	ret

000062b6 <__fixunssfsi>:
    62b6:	98 d0       	rcall	.+304    	; 0x63e8 <__fp_splitA>
    62b8:	88 f0       	brcs	.+34     	; 0x62dc <__fixunssfsi+0x26>
    62ba:	9f 57       	subi	r25, 0x7F	; 127
    62bc:	90 f0       	brcs	.+36     	; 0x62e2 <__fixunssfsi+0x2c>
    62be:	b9 2f       	mov	r27, r25
    62c0:	99 27       	eor	r25, r25
    62c2:	b7 51       	subi	r27, 0x17	; 23
    62c4:	a0 f0       	brcs	.+40     	; 0x62ee <__fixunssfsi+0x38>
    62c6:	d1 f0       	breq	.+52     	; 0x62fc <__fixunssfsi+0x46>
    62c8:	66 0f       	add	r22, r22
    62ca:	77 1f       	adc	r23, r23
    62cc:	88 1f       	adc	r24, r24
    62ce:	99 1f       	adc	r25, r25
    62d0:	1a f0       	brmi	.+6      	; 0x62d8 <__fixunssfsi+0x22>
    62d2:	ba 95       	dec	r27
    62d4:	c9 f7       	brne	.-14     	; 0x62c8 <__fixunssfsi+0x12>
    62d6:	12 c0       	rjmp	.+36     	; 0x62fc <__fixunssfsi+0x46>
    62d8:	b1 30       	cpi	r27, 0x01	; 1
    62da:	81 f0       	breq	.+32     	; 0x62fc <__fixunssfsi+0x46>
    62dc:	9f d0       	rcall	.+318    	; 0x641c <__fp_zero>
    62de:	b1 e0       	ldi	r27, 0x01	; 1
    62e0:	08 95       	ret
    62e2:	9c c0       	rjmp	.+312    	; 0x641c <__fp_zero>
    62e4:	67 2f       	mov	r22, r23
    62e6:	78 2f       	mov	r23, r24
    62e8:	88 27       	eor	r24, r24
    62ea:	b8 5f       	subi	r27, 0xF8	; 248
    62ec:	39 f0       	breq	.+14     	; 0x62fc <__fixunssfsi+0x46>
    62ee:	b9 3f       	cpi	r27, 0xF9	; 249
    62f0:	cc f3       	brlt	.-14     	; 0x62e4 <__fixunssfsi+0x2e>
    62f2:	86 95       	lsr	r24
    62f4:	77 95       	ror	r23
    62f6:	67 95       	ror	r22
    62f8:	b3 95       	inc	r27
    62fa:	d9 f7       	brne	.-10     	; 0x62f2 <__fixunssfsi+0x3c>
    62fc:	3e f4       	brtc	.+14     	; 0x630c <__fixunssfsi+0x56>
    62fe:	90 95       	com	r25
    6300:	80 95       	com	r24
    6302:	70 95       	com	r23
    6304:	61 95       	neg	r22
    6306:	7f 4f       	sbci	r23, 0xFF	; 255
    6308:	8f 4f       	sbci	r24, 0xFF	; 255
    630a:	9f 4f       	sbci	r25, 0xFF	; 255
    630c:	08 95       	ret

0000630e <__floatunsisf>:
    630e:	e8 94       	clt
    6310:	09 c0       	rjmp	.+18     	; 0x6324 <__floatsisf+0x12>

00006312 <__floatsisf>:
    6312:	97 fb       	bst	r25, 7
    6314:	3e f4       	brtc	.+14     	; 0x6324 <__floatsisf+0x12>
    6316:	90 95       	com	r25
    6318:	80 95       	com	r24
    631a:	70 95       	com	r23
    631c:	61 95       	neg	r22
    631e:	7f 4f       	sbci	r23, 0xFF	; 255
    6320:	8f 4f       	sbci	r24, 0xFF	; 255
    6322:	9f 4f       	sbci	r25, 0xFF	; 255
    6324:	99 23       	and	r25, r25
    6326:	a9 f0       	breq	.+42     	; 0x6352 <__floatsisf+0x40>
    6328:	f9 2f       	mov	r31, r25
    632a:	96 e9       	ldi	r25, 0x96	; 150
    632c:	bb 27       	eor	r27, r27
    632e:	93 95       	inc	r25
    6330:	f6 95       	lsr	r31
    6332:	87 95       	ror	r24
    6334:	77 95       	ror	r23
    6336:	67 95       	ror	r22
    6338:	b7 95       	ror	r27
    633a:	f1 11       	cpse	r31, r1
    633c:	f8 cf       	rjmp	.-16     	; 0x632e <__floatsisf+0x1c>
    633e:	fa f4       	brpl	.+62     	; 0x637e <__floatsisf+0x6c>
    6340:	bb 0f       	add	r27, r27
    6342:	11 f4       	brne	.+4      	; 0x6348 <__floatsisf+0x36>
    6344:	60 ff       	sbrs	r22, 0
    6346:	1b c0       	rjmp	.+54     	; 0x637e <__floatsisf+0x6c>
    6348:	6f 5f       	subi	r22, 0xFF	; 255
    634a:	7f 4f       	sbci	r23, 0xFF	; 255
    634c:	8f 4f       	sbci	r24, 0xFF	; 255
    634e:	9f 4f       	sbci	r25, 0xFF	; 255
    6350:	16 c0       	rjmp	.+44     	; 0x637e <__floatsisf+0x6c>
    6352:	88 23       	and	r24, r24
    6354:	11 f0       	breq	.+4      	; 0x635a <__floatsisf+0x48>
    6356:	96 e9       	ldi	r25, 0x96	; 150
    6358:	11 c0       	rjmp	.+34     	; 0x637c <__floatsisf+0x6a>
    635a:	77 23       	and	r23, r23
    635c:	21 f0       	breq	.+8      	; 0x6366 <__floatsisf+0x54>
    635e:	9e e8       	ldi	r25, 0x8E	; 142
    6360:	87 2f       	mov	r24, r23
    6362:	76 2f       	mov	r23, r22
    6364:	05 c0       	rjmp	.+10     	; 0x6370 <__floatsisf+0x5e>
    6366:	66 23       	and	r22, r22
    6368:	71 f0       	breq	.+28     	; 0x6386 <__floatsisf+0x74>
    636a:	96 e8       	ldi	r25, 0x86	; 134
    636c:	86 2f       	mov	r24, r22
    636e:	70 e0       	ldi	r23, 0x00	; 0
    6370:	60 e0       	ldi	r22, 0x00	; 0
    6372:	2a f0       	brmi	.+10     	; 0x637e <__floatsisf+0x6c>
    6374:	9a 95       	dec	r25
    6376:	66 0f       	add	r22, r22
    6378:	77 1f       	adc	r23, r23
    637a:	88 1f       	adc	r24, r24
    637c:	da f7       	brpl	.-10     	; 0x6374 <__floatsisf+0x62>
    637e:	88 0f       	add	r24, r24
    6380:	96 95       	lsr	r25
    6382:	87 95       	ror	r24
    6384:	97 f9       	bld	r25, 7
    6386:	08 95       	ret

00006388 <__fp_inf>:
    6388:	97 f9       	bld	r25, 7
    638a:	9f 67       	ori	r25, 0x7F	; 127
    638c:	80 e8       	ldi	r24, 0x80	; 128
    638e:	70 e0       	ldi	r23, 0x00	; 0
    6390:	60 e0       	ldi	r22, 0x00	; 0
    6392:	08 95       	ret

00006394 <__fp_nan>:
    6394:	9f ef       	ldi	r25, 0xFF	; 255
    6396:	80 ec       	ldi	r24, 0xC0	; 192
    6398:	08 95       	ret

0000639a <__fp_pscA>:
    639a:	00 24       	eor	r0, r0
    639c:	0a 94       	dec	r0
    639e:	16 16       	cp	r1, r22
    63a0:	17 06       	cpc	r1, r23
    63a2:	18 06       	cpc	r1, r24
    63a4:	09 06       	cpc	r0, r25
    63a6:	08 95       	ret

000063a8 <__fp_pscB>:
    63a8:	00 24       	eor	r0, r0
    63aa:	0a 94       	dec	r0
    63ac:	12 16       	cp	r1, r18
    63ae:	13 06       	cpc	r1, r19
    63b0:	14 06       	cpc	r1, r20
    63b2:	05 06       	cpc	r0, r21
    63b4:	08 95       	ret

000063b6 <__fp_round>:
    63b6:	09 2e       	mov	r0, r25
    63b8:	03 94       	inc	r0
    63ba:	00 0c       	add	r0, r0
    63bc:	11 f4       	brne	.+4      	; 0x63c2 <__fp_round+0xc>
    63be:	88 23       	and	r24, r24
    63c0:	52 f0       	brmi	.+20     	; 0x63d6 <__fp_round+0x20>
    63c2:	bb 0f       	add	r27, r27
    63c4:	40 f4       	brcc	.+16     	; 0x63d6 <__fp_round+0x20>
    63c6:	bf 2b       	or	r27, r31
    63c8:	11 f4       	brne	.+4      	; 0x63ce <__fp_round+0x18>
    63ca:	60 ff       	sbrs	r22, 0
    63cc:	04 c0       	rjmp	.+8      	; 0x63d6 <__fp_round+0x20>
    63ce:	6f 5f       	subi	r22, 0xFF	; 255
    63d0:	7f 4f       	sbci	r23, 0xFF	; 255
    63d2:	8f 4f       	sbci	r24, 0xFF	; 255
    63d4:	9f 4f       	sbci	r25, 0xFF	; 255
    63d6:	08 95       	ret

000063d8 <__fp_split3>:
    63d8:	57 fd       	sbrc	r21, 7
    63da:	90 58       	subi	r25, 0x80	; 128
    63dc:	44 0f       	add	r20, r20
    63de:	55 1f       	adc	r21, r21
    63e0:	59 f0       	breq	.+22     	; 0x63f8 <__fp_splitA+0x10>
    63e2:	5f 3f       	cpi	r21, 0xFF	; 255
    63e4:	71 f0       	breq	.+28     	; 0x6402 <__fp_splitA+0x1a>
    63e6:	47 95       	ror	r20

000063e8 <__fp_splitA>:
    63e8:	88 0f       	add	r24, r24
    63ea:	97 fb       	bst	r25, 7
    63ec:	99 1f       	adc	r25, r25
    63ee:	61 f0       	breq	.+24     	; 0x6408 <__fp_splitA+0x20>
    63f0:	9f 3f       	cpi	r25, 0xFF	; 255
    63f2:	79 f0       	breq	.+30     	; 0x6412 <__fp_splitA+0x2a>
    63f4:	87 95       	ror	r24
    63f6:	08 95       	ret
    63f8:	12 16       	cp	r1, r18
    63fa:	13 06       	cpc	r1, r19
    63fc:	14 06       	cpc	r1, r20
    63fe:	55 1f       	adc	r21, r21
    6400:	f2 cf       	rjmp	.-28     	; 0x63e6 <__fp_split3+0xe>
    6402:	46 95       	lsr	r20
    6404:	f1 df       	rcall	.-30     	; 0x63e8 <__fp_splitA>
    6406:	08 c0       	rjmp	.+16     	; 0x6418 <__fp_splitA+0x30>
    6408:	16 16       	cp	r1, r22
    640a:	17 06       	cpc	r1, r23
    640c:	18 06       	cpc	r1, r24
    640e:	99 1f       	adc	r25, r25
    6410:	f1 cf       	rjmp	.-30     	; 0x63f4 <__fp_splitA+0xc>
    6412:	86 95       	lsr	r24
    6414:	71 05       	cpc	r23, r1
    6416:	61 05       	cpc	r22, r1
    6418:	08 94       	sec
    641a:	08 95       	ret

0000641c <__fp_zero>:
    641c:	e8 94       	clt

0000641e <__fp_szero>:
    641e:	bb 27       	eor	r27, r27
    6420:	66 27       	eor	r22, r22
    6422:	77 27       	eor	r23, r23
    6424:	cb 01       	movw	r24, r22
    6426:	97 f9       	bld	r25, 7
    6428:	08 95       	ret

0000642a <__mulsf3>:
    642a:	0b d0       	rcall	.+22     	; 0x6442 <__mulsf3x>
    642c:	c4 cf       	rjmp	.-120    	; 0x63b6 <__fp_round>
    642e:	b5 df       	rcall	.-150    	; 0x639a <__fp_pscA>
    6430:	28 f0       	brcs	.+10     	; 0x643c <__mulsf3+0x12>
    6432:	ba df       	rcall	.-140    	; 0x63a8 <__fp_pscB>
    6434:	18 f0       	brcs	.+6      	; 0x643c <__mulsf3+0x12>
    6436:	95 23       	and	r25, r21
    6438:	09 f0       	breq	.+2      	; 0x643c <__mulsf3+0x12>
    643a:	a6 cf       	rjmp	.-180    	; 0x6388 <__fp_inf>
    643c:	ab cf       	rjmp	.-170    	; 0x6394 <__fp_nan>
    643e:	11 24       	eor	r1, r1
    6440:	ee cf       	rjmp	.-36     	; 0x641e <__fp_szero>

00006442 <__mulsf3x>:
    6442:	ca df       	rcall	.-108    	; 0x63d8 <__fp_split3>
    6444:	a0 f3       	brcs	.-24     	; 0x642e <__mulsf3+0x4>

00006446 <__mulsf3_pse>:
    6446:	95 9f       	mul	r25, r21
    6448:	d1 f3       	breq	.-12     	; 0x643e <__mulsf3+0x14>
    644a:	95 0f       	add	r25, r21
    644c:	50 e0       	ldi	r21, 0x00	; 0
    644e:	55 1f       	adc	r21, r21
    6450:	62 9f       	mul	r22, r18
    6452:	f0 01       	movw	r30, r0
    6454:	72 9f       	mul	r23, r18
    6456:	bb 27       	eor	r27, r27
    6458:	f0 0d       	add	r31, r0
    645a:	b1 1d       	adc	r27, r1
    645c:	63 9f       	mul	r22, r19
    645e:	aa 27       	eor	r26, r26
    6460:	f0 0d       	add	r31, r0
    6462:	b1 1d       	adc	r27, r1
    6464:	aa 1f       	adc	r26, r26
    6466:	64 9f       	mul	r22, r20
    6468:	66 27       	eor	r22, r22
    646a:	b0 0d       	add	r27, r0
    646c:	a1 1d       	adc	r26, r1
    646e:	66 1f       	adc	r22, r22
    6470:	82 9f       	mul	r24, r18
    6472:	22 27       	eor	r18, r18
    6474:	b0 0d       	add	r27, r0
    6476:	a1 1d       	adc	r26, r1
    6478:	62 1f       	adc	r22, r18
    647a:	73 9f       	mul	r23, r19
    647c:	b0 0d       	add	r27, r0
    647e:	a1 1d       	adc	r26, r1
    6480:	62 1f       	adc	r22, r18
    6482:	83 9f       	mul	r24, r19
    6484:	a0 0d       	add	r26, r0
    6486:	61 1d       	adc	r22, r1
    6488:	22 1f       	adc	r18, r18
    648a:	74 9f       	mul	r23, r20
    648c:	33 27       	eor	r19, r19
    648e:	a0 0d       	add	r26, r0
    6490:	61 1d       	adc	r22, r1
    6492:	23 1f       	adc	r18, r19
    6494:	84 9f       	mul	r24, r20
    6496:	60 0d       	add	r22, r0
    6498:	21 1d       	adc	r18, r1
    649a:	82 2f       	mov	r24, r18
    649c:	76 2f       	mov	r23, r22
    649e:	6a 2f       	mov	r22, r26
    64a0:	11 24       	eor	r1, r1
    64a2:	9f 57       	subi	r25, 0x7F	; 127
    64a4:	50 40       	sbci	r21, 0x00	; 0
    64a6:	8a f0       	brmi	.+34     	; 0x64ca <__mulsf3_pse+0x84>
    64a8:	e1 f0       	breq	.+56     	; 0x64e2 <__mulsf3_pse+0x9c>
    64aa:	88 23       	and	r24, r24
    64ac:	4a f0       	brmi	.+18     	; 0x64c0 <__mulsf3_pse+0x7a>
    64ae:	ee 0f       	add	r30, r30
    64b0:	ff 1f       	adc	r31, r31
    64b2:	bb 1f       	adc	r27, r27
    64b4:	66 1f       	adc	r22, r22
    64b6:	77 1f       	adc	r23, r23
    64b8:	88 1f       	adc	r24, r24
    64ba:	91 50       	subi	r25, 0x01	; 1
    64bc:	50 40       	sbci	r21, 0x00	; 0
    64be:	a9 f7       	brne	.-22     	; 0x64aa <__mulsf3_pse+0x64>
    64c0:	9e 3f       	cpi	r25, 0xFE	; 254
    64c2:	51 05       	cpc	r21, r1
    64c4:	70 f0       	brcs	.+28     	; 0x64e2 <__mulsf3_pse+0x9c>
    64c6:	60 cf       	rjmp	.-320    	; 0x6388 <__fp_inf>
    64c8:	aa cf       	rjmp	.-172    	; 0x641e <__fp_szero>
    64ca:	5f 3f       	cpi	r21, 0xFF	; 255
    64cc:	ec f3       	brlt	.-6      	; 0x64c8 <__mulsf3_pse+0x82>
    64ce:	98 3e       	cpi	r25, 0xE8	; 232
    64d0:	dc f3       	brlt	.-10     	; 0x64c8 <__mulsf3_pse+0x82>
    64d2:	86 95       	lsr	r24
    64d4:	77 95       	ror	r23
    64d6:	67 95       	ror	r22
    64d8:	b7 95       	ror	r27
    64da:	f7 95       	ror	r31
    64dc:	e7 95       	ror	r30
    64de:	9f 5f       	subi	r25, 0xFF	; 255
    64e0:	c1 f7       	brne	.-16     	; 0x64d2 <__mulsf3_pse+0x8c>
    64e2:	fe 2b       	or	r31, r30
    64e4:	88 0f       	add	r24, r24
    64e6:	91 1d       	adc	r25, r1
    64e8:	96 95       	lsr	r25
    64ea:	87 95       	ror	r24
    64ec:	97 f9       	bld	r25, 7
    64ee:	08 95       	ret

000064f0 <__udivmodsi4>:
    64f0:	a1 e2       	ldi	r26, 0x21	; 33
    64f2:	1a 2e       	mov	r1, r26
    64f4:	aa 1b       	sub	r26, r26
    64f6:	bb 1b       	sub	r27, r27
    64f8:	fd 01       	movw	r30, r26
    64fa:	0d c0       	rjmp	.+26     	; 0x6516 <__udivmodsi4_ep>

000064fc <__udivmodsi4_loop>:
    64fc:	aa 1f       	adc	r26, r26
    64fe:	bb 1f       	adc	r27, r27
    6500:	ee 1f       	adc	r30, r30
    6502:	ff 1f       	adc	r31, r31
    6504:	a2 17       	cp	r26, r18
    6506:	b3 07       	cpc	r27, r19
    6508:	e4 07       	cpc	r30, r20
    650a:	f5 07       	cpc	r31, r21
    650c:	20 f0       	brcs	.+8      	; 0x6516 <__udivmodsi4_ep>
    650e:	a2 1b       	sub	r26, r18
    6510:	b3 0b       	sbc	r27, r19
    6512:	e4 0b       	sbc	r30, r20
    6514:	f5 0b       	sbc	r31, r21

00006516 <__udivmodsi4_ep>:
    6516:	66 1f       	adc	r22, r22
    6518:	77 1f       	adc	r23, r23
    651a:	88 1f       	adc	r24, r24
    651c:	99 1f       	adc	r25, r25
    651e:	1a 94       	dec	r1
    6520:	69 f7       	brne	.-38     	; 0x64fc <__udivmodsi4_loop>
    6522:	60 95       	com	r22
    6524:	70 95       	com	r23
    6526:	80 95       	com	r24
    6528:	90 95       	com	r25
    652a:	9b 01       	movw	r18, r22
    652c:	ac 01       	movw	r20, r24
    652e:	bd 01       	movw	r22, r26
    6530:	cf 01       	movw	r24, r30
    6532:	08 95       	ret

00006534 <__tablejump2__>:
    6534:	ee 0f       	add	r30, r30
    6536:	ff 1f       	adc	r31, r31
    6538:	88 1f       	adc	r24, r24
    653a:	8b bf       	out	0x3b, r24	; 59
    653c:	07 90       	elpm	r0, Z+
    653e:	f6 91       	elpm	r31, Z
    6540:	e0 2d       	mov	r30, r0
    6542:	19 94       	eijmp

00006544 <malloc>:
    6544:	0f 93       	push	r16
    6546:	1f 93       	push	r17
    6548:	cf 93       	push	r28
    654a:	df 93       	push	r29
    654c:	82 30       	cpi	r24, 0x02	; 2
    654e:	91 05       	cpc	r25, r1
    6550:	10 f4       	brcc	.+4      	; 0x6556 <malloc+0x12>
    6552:	82 e0       	ldi	r24, 0x02	; 2
    6554:	90 e0       	ldi	r25, 0x00	; 0
    6556:	e0 91 eb 13 	lds	r30, 0x13EB	; 0x8013eb <__flp>
    655a:	f0 91 ec 13 	lds	r31, 0x13EC	; 0x8013ec <__flp+0x1>
    655e:	20 e0       	ldi	r18, 0x00	; 0
    6560:	30 e0       	ldi	r19, 0x00	; 0
    6562:	a0 e0       	ldi	r26, 0x00	; 0
    6564:	b0 e0       	ldi	r27, 0x00	; 0
    6566:	30 97       	sbiw	r30, 0x00	; 0
    6568:	19 f1       	breq	.+70     	; 0x65b0 <malloc+0x6c>
    656a:	40 81       	ld	r20, Z
    656c:	51 81       	ldd	r21, Z+1	; 0x01
    656e:	02 81       	ldd	r16, Z+2	; 0x02
    6570:	13 81       	ldd	r17, Z+3	; 0x03
    6572:	48 17       	cp	r20, r24
    6574:	59 07       	cpc	r21, r25
    6576:	c8 f0       	brcs	.+50     	; 0x65aa <malloc+0x66>
    6578:	84 17       	cp	r24, r20
    657a:	95 07       	cpc	r25, r21
    657c:	69 f4       	brne	.+26     	; 0x6598 <malloc+0x54>
    657e:	10 97       	sbiw	r26, 0x00	; 0
    6580:	31 f0       	breq	.+12     	; 0x658e <malloc+0x4a>
    6582:	12 96       	adiw	r26, 0x02	; 2
    6584:	0c 93       	st	X, r16
    6586:	12 97       	sbiw	r26, 0x02	; 2
    6588:	13 96       	adiw	r26, 0x03	; 3
    658a:	1c 93       	st	X, r17
    658c:	27 c0       	rjmp	.+78     	; 0x65dc <malloc+0x98>
    658e:	00 93 eb 13 	sts	0x13EB, r16	; 0x8013eb <__flp>
    6592:	10 93 ec 13 	sts	0x13EC, r17	; 0x8013ec <__flp+0x1>
    6596:	22 c0       	rjmp	.+68     	; 0x65dc <malloc+0x98>
    6598:	21 15       	cp	r18, r1
    659a:	31 05       	cpc	r19, r1
    659c:	19 f0       	breq	.+6      	; 0x65a4 <malloc+0x60>
    659e:	42 17       	cp	r20, r18
    65a0:	53 07       	cpc	r21, r19
    65a2:	18 f4       	brcc	.+6      	; 0x65aa <malloc+0x66>
    65a4:	9a 01       	movw	r18, r20
    65a6:	bd 01       	movw	r22, r26
    65a8:	ef 01       	movw	r28, r30
    65aa:	df 01       	movw	r26, r30
    65ac:	f8 01       	movw	r30, r16
    65ae:	db cf       	rjmp	.-74     	; 0x6566 <malloc+0x22>
    65b0:	21 15       	cp	r18, r1
    65b2:	31 05       	cpc	r19, r1
    65b4:	f9 f0       	breq	.+62     	; 0x65f4 <malloc+0xb0>
    65b6:	28 1b       	sub	r18, r24
    65b8:	39 0b       	sbc	r19, r25
    65ba:	24 30       	cpi	r18, 0x04	; 4
    65bc:	31 05       	cpc	r19, r1
    65be:	80 f4       	brcc	.+32     	; 0x65e0 <malloc+0x9c>
    65c0:	8a 81       	ldd	r24, Y+2	; 0x02
    65c2:	9b 81       	ldd	r25, Y+3	; 0x03
    65c4:	61 15       	cp	r22, r1
    65c6:	71 05       	cpc	r23, r1
    65c8:	21 f0       	breq	.+8      	; 0x65d2 <malloc+0x8e>
    65ca:	fb 01       	movw	r30, r22
    65cc:	93 83       	std	Z+3, r25	; 0x03
    65ce:	82 83       	std	Z+2, r24	; 0x02
    65d0:	04 c0       	rjmp	.+8      	; 0x65da <malloc+0x96>
    65d2:	90 93 ec 13 	sts	0x13EC, r25	; 0x8013ec <__flp+0x1>
    65d6:	80 93 eb 13 	sts	0x13EB, r24	; 0x8013eb <__flp>
    65da:	fe 01       	movw	r30, r28
    65dc:	32 96       	adiw	r30, 0x02	; 2
    65de:	44 c0       	rjmp	.+136    	; 0x6668 <malloc+0x124>
    65e0:	fe 01       	movw	r30, r28
    65e2:	e2 0f       	add	r30, r18
    65e4:	f3 1f       	adc	r31, r19
    65e6:	81 93       	st	Z+, r24
    65e8:	91 93       	st	Z+, r25
    65ea:	22 50       	subi	r18, 0x02	; 2
    65ec:	31 09       	sbc	r19, r1
    65ee:	39 83       	std	Y+1, r19	; 0x01
    65f0:	28 83       	st	Y, r18
    65f2:	3a c0       	rjmp	.+116    	; 0x6668 <malloc+0x124>
    65f4:	20 91 e9 13 	lds	r18, 0x13E9	; 0x8013e9 <__brkval>
    65f8:	30 91 ea 13 	lds	r19, 0x13EA	; 0x8013ea <__brkval+0x1>
    65fc:	23 2b       	or	r18, r19
    65fe:	41 f4       	brne	.+16     	; 0x6610 <malloc+0xcc>
    6600:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    6604:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    6608:	30 93 ea 13 	sts	0x13EA, r19	; 0x8013ea <__brkval+0x1>
    660c:	20 93 e9 13 	sts	0x13E9, r18	; 0x8013e9 <__brkval>
    6610:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    6614:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    6618:	21 15       	cp	r18, r1
    661a:	31 05       	cpc	r19, r1
    661c:	41 f4       	brne	.+16     	; 0x662e <malloc+0xea>
    661e:	2d b7       	in	r18, 0x3d	; 61
    6620:	3e b7       	in	r19, 0x3e	; 62
    6622:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    6626:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    662a:	24 1b       	sub	r18, r20
    662c:	35 0b       	sbc	r19, r21
    662e:	e0 91 e9 13 	lds	r30, 0x13E9	; 0x8013e9 <__brkval>
    6632:	f0 91 ea 13 	lds	r31, 0x13EA	; 0x8013ea <__brkval+0x1>
    6636:	e2 17       	cp	r30, r18
    6638:	f3 07       	cpc	r31, r19
    663a:	a0 f4       	brcc	.+40     	; 0x6664 <malloc+0x120>
    663c:	2e 1b       	sub	r18, r30
    663e:	3f 0b       	sbc	r19, r31
    6640:	28 17       	cp	r18, r24
    6642:	39 07       	cpc	r19, r25
    6644:	78 f0       	brcs	.+30     	; 0x6664 <malloc+0x120>
    6646:	ac 01       	movw	r20, r24
    6648:	4e 5f       	subi	r20, 0xFE	; 254
    664a:	5f 4f       	sbci	r21, 0xFF	; 255
    664c:	24 17       	cp	r18, r20
    664e:	35 07       	cpc	r19, r21
    6650:	48 f0       	brcs	.+18     	; 0x6664 <malloc+0x120>
    6652:	4e 0f       	add	r20, r30
    6654:	5f 1f       	adc	r21, r31
    6656:	50 93 ea 13 	sts	0x13EA, r21	; 0x8013ea <__brkval+0x1>
    665a:	40 93 e9 13 	sts	0x13E9, r20	; 0x8013e9 <__brkval>
    665e:	81 93       	st	Z+, r24
    6660:	91 93       	st	Z+, r25
    6662:	02 c0       	rjmp	.+4      	; 0x6668 <malloc+0x124>
    6664:	e0 e0       	ldi	r30, 0x00	; 0
    6666:	f0 e0       	ldi	r31, 0x00	; 0
    6668:	cf 01       	movw	r24, r30
    666a:	df 91       	pop	r29
    666c:	cf 91       	pop	r28
    666e:	1f 91       	pop	r17
    6670:	0f 91       	pop	r16
    6672:	08 95       	ret

00006674 <free>:
    6674:	cf 93       	push	r28
    6676:	df 93       	push	r29
    6678:	00 97       	sbiw	r24, 0x00	; 0
    667a:	09 f4       	brne	.+2      	; 0x667e <free+0xa>
    667c:	81 c0       	rjmp	.+258    	; 0x6780 <free+0x10c>
    667e:	fc 01       	movw	r30, r24
    6680:	32 97       	sbiw	r30, 0x02	; 2
    6682:	13 82       	std	Z+3, r1	; 0x03
    6684:	12 82       	std	Z+2, r1	; 0x02
    6686:	a0 91 eb 13 	lds	r26, 0x13EB	; 0x8013eb <__flp>
    668a:	b0 91 ec 13 	lds	r27, 0x13EC	; 0x8013ec <__flp+0x1>
    668e:	10 97       	sbiw	r26, 0x00	; 0
    6690:	81 f4       	brne	.+32     	; 0x66b2 <free+0x3e>
    6692:	20 81       	ld	r18, Z
    6694:	31 81       	ldd	r19, Z+1	; 0x01
    6696:	82 0f       	add	r24, r18
    6698:	93 1f       	adc	r25, r19
    669a:	20 91 e9 13 	lds	r18, 0x13E9	; 0x8013e9 <__brkval>
    669e:	30 91 ea 13 	lds	r19, 0x13EA	; 0x8013ea <__brkval+0x1>
    66a2:	28 17       	cp	r18, r24
    66a4:	39 07       	cpc	r19, r25
    66a6:	51 f5       	brne	.+84     	; 0x66fc <free+0x88>
    66a8:	f0 93 ea 13 	sts	0x13EA, r31	; 0x8013ea <__brkval+0x1>
    66ac:	e0 93 e9 13 	sts	0x13E9, r30	; 0x8013e9 <__brkval>
    66b0:	67 c0       	rjmp	.+206    	; 0x6780 <free+0x10c>
    66b2:	ed 01       	movw	r28, r26
    66b4:	20 e0       	ldi	r18, 0x00	; 0
    66b6:	30 e0       	ldi	r19, 0x00	; 0
    66b8:	ce 17       	cp	r28, r30
    66ba:	df 07       	cpc	r29, r31
    66bc:	40 f4       	brcc	.+16     	; 0x66ce <free+0x5a>
    66be:	4a 81       	ldd	r20, Y+2	; 0x02
    66c0:	5b 81       	ldd	r21, Y+3	; 0x03
    66c2:	9e 01       	movw	r18, r28
    66c4:	41 15       	cp	r20, r1
    66c6:	51 05       	cpc	r21, r1
    66c8:	f1 f0       	breq	.+60     	; 0x6706 <free+0x92>
    66ca:	ea 01       	movw	r28, r20
    66cc:	f5 cf       	rjmp	.-22     	; 0x66b8 <free+0x44>
    66ce:	d3 83       	std	Z+3, r29	; 0x03
    66d0:	c2 83       	std	Z+2, r28	; 0x02
    66d2:	40 81       	ld	r20, Z
    66d4:	51 81       	ldd	r21, Z+1	; 0x01
    66d6:	84 0f       	add	r24, r20
    66d8:	95 1f       	adc	r25, r21
    66da:	c8 17       	cp	r28, r24
    66dc:	d9 07       	cpc	r29, r25
    66de:	59 f4       	brne	.+22     	; 0x66f6 <free+0x82>
    66e0:	88 81       	ld	r24, Y
    66e2:	99 81       	ldd	r25, Y+1	; 0x01
    66e4:	84 0f       	add	r24, r20
    66e6:	95 1f       	adc	r25, r21
    66e8:	02 96       	adiw	r24, 0x02	; 2
    66ea:	91 83       	std	Z+1, r25	; 0x01
    66ec:	80 83       	st	Z, r24
    66ee:	8a 81       	ldd	r24, Y+2	; 0x02
    66f0:	9b 81       	ldd	r25, Y+3	; 0x03
    66f2:	93 83       	std	Z+3, r25	; 0x03
    66f4:	82 83       	std	Z+2, r24	; 0x02
    66f6:	21 15       	cp	r18, r1
    66f8:	31 05       	cpc	r19, r1
    66fa:	29 f4       	brne	.+10     	; 0x6706 <free+0x92>
    66fc:	f0 93 ec 13 	sts	0x13EC, r31	; 0x8013ec <__flp+0x1>
    6700:	e0 93 eb 13 	sts	0x13EB, r30	; 0x8013eb <__flp>
    6704:	3d c0       	rjmp	.+122    	; 0x6780 <free+0x10c>
    6706:	e9 01       	movw	r28, r18
    6708:	fb 83       	std	Y+3, r31	; 0x03
    670a:	ea 83       	std	Y+2, r30	; 0x02
    670c:	49 91       	ld	r20, Y+
    670e:	59 91       	ld	r21, Y+
    6710:	c4 0f       	add	r28, r20
    6712:	d5 1f       	adc	r29, r21
    6714:	ec 17       	cp	r30, r28
    6716:	fd 07       	cpc	r31, r29
    6718:	61 f4       	brne	.+24     	; 0x6732 <free+0xbe>
    671a:	80 81       	ld	r24, Z
    671c:	91 81       	ldd	r25, Z+1	; 0x01
    671e:	84 0f       	add	r24, r20
    6720:	95 1f       	adc	r25, r21
    6722:	02 96       	adiw	r24, 0x02	; 2
    6724:	e9 01       	movw	r28, r18
    6726:	99 83       	std	Y+1, r25	; 0x01
    6728:	88 83       	st	Y, r24
    672a:	82 81       	ldd	r24, Z+2	; 0x02
    672c:	93 81       	ldd	r25, Z+3	; 0x03
    672e:	9b 83       	std	Y+3, r25	; 0x03
    6730:	8a 83       	std	Y+2, r24	; 0x02
    6732:	e0 e0       	ldi	r30, 0x00	; 0
    6734:	f0 e0       	ldi	r31, 0x00	; 0
    6736:	12 96       	adiw	r26, 0x02	; 2
    6738:	8d 91       	ld	r24, X+
    673a:	9c 91       	ld	r25, X
    673c:	13 97       	sbiw	r26, 0x03	; 3
    673e:	00 97       	sbiw	r24, 0x00	; 0
    6740:	19 f0       	breq	.+6      	; 0x6748 <free+0xd4>
    6742:	fd 01       	movw	r30, r26
    6744:	dc 01       	movw	r26, r24
    6746:	f7 cf       	rjmp	.-18     	; 0x6736 <free+0xc2>
    6748:	8d 91       	ld	r24, X+
    674a:	9c 91       	ld	r25, X
    674c:	11 97       	sbiw	r26, 0x01	; 1
    674e:	9d 01       	movw	r18, r26
    6750:	2e 5f       	subi	r18, 0xFE	; 254
    6752:	3f 4f       	sbci	r19, 0xFF	; 255
    6754:	82 0f       	add	r24, r18
    6756:	93 1f       	adc	r25, r19
    6758:	20 91 e9 13 	lds	r18, 0x13E9	; 0x8013e9 <__brkval>
    675c:	30 91 ea 13 	lds	r19, 0x13EA	; 0x8013ea <__brkval+0x1>
    6760:	28 17       	cp	r18, r24
    6762:	39 07       	cpc	r19, r25
    6764:	69 f4       	brne	.+26     	; 0x6780 <free+0x10c>
    6766:	30 97       	sbiw	r30, 0x00	; 0
    6768:	29 f4       	brne	.+10     	; 0x6774 <free+0x100>
    676a:	10 92 ec 13 	sts	0x13EC, r1	; 0x8013ec <__flp+0x1>
    676e:	10 92 eb 13 	sts	0x13EB, r1	; 0x8013eb <__flp>
    6772:	02 c0       	rjmp	.+4      	; 0x6778 <free+0x104>
    6774:	13 82       	std	Z+3, r1	; 0x03
    6776:	12 82       	std	Z+2, r1	; 0x02
    6778:	b0 93 ea 13 	sts	0x13EA, r27	; 0x8013ea <__brkval+0x1>
    677c:	a0 93 e9 13 	sts	0x13E9, r26	; 0x8013e9 <__brkval>
    6780:	df 91       	pop	r29
    6782:	cf 91       	pop	r28
    6784:	08 95       	ret

00006786 <abort>:
    6786:	81 e0       	ldi	r24, 0x01	; 1
    6788:	90 e0       	ldi	r25, 0x00	; 0
    678a:	f8 94       	cli
    678c:	7d c3       	rjmp	.+1786   	; 0x6e88 <_exit>

0000678e <memcpy>:
    678e:	fb 01       	movw	r30, r22
    6790:	dc 01       	movw	r26, r24
    6792:	02 c0       	rjmp	.+4      	; 0x6798 <memcpy+0xa>
    6794:	01 90       	ld	r0, Z+
    6796:	0d 92       	st	X+, r0
    6798:	41 50       	subi	r20, 0x01	; 1
    679a:	50 40       	sbci	r21, 0x00	; 0
    679c:	d8 f7       	brcc	.-10     	; 0x6794 <memcpy+0x6>
    679e:	08 95       	ret

000067a0 <memset>:
    67a0:	dc 01       	movw	r26, r24
    67a2:	01 c0       	rjmp	.+2      	; 0x67a6 <memset+0x6>
    67a4:	6d 93       	st	X+, r22
    67a6:	41 50       	subi	r20, 0x01	; 1
    67a8:	50 40       	sbci	r21, 0x00	; 0
    67aa:	e0 f7       	brcc	.-8      	; 0x67a4 <memset+0x4>
    67ac:	08 95       	ret

000067ae <strcasestr>:
    67ae:	fb 01       	movw	r30, r22
    67b0:	51 91       	ld	r21, Z+
    67b2:	55 23       	and	r21, r21
    67b4:	b1 f0       	breq	.+44     	; 0x67e2 <strcasestr+0x34>
    67b6:	bf 01       	movw	r22, r30
    67b8:	dc 01       	movw	r26, r24
    67ba:	05 2e       	mov	r0, r21
    67bc:	4d 91       	ld	r20, X+
    67be:	44 23       	and	r20, r20
    67c0:	69 f0       	breq	.+26     	; 0x67dc <strcasestr+0x2e>
    67c2:	10 d0       	rcall	.+32     	; 0x67e4 <strcasestr+0x36>
    67c4:	d9 f7       	brne	.-10     	; 0x67bc <strcasestr+0xe>
    67c6:	cd 01       	movw	r24, r26
    67c8:	01 90       	ld	r0, Z+
    67ca:	00 20       	and	r0, r0
    67cc:	49 f0       	breq	.+18     	; 0x67e0 <strcasestr+0x32>
    67ce:	4d 91       	ld	r20, X+
    67d0:	41 11       	cpse	r20, r1
    67d2:	08 d0       	rcall	.+16     	; 0x67e4 <strcasestr+0x36>
    67d4:	c9 f3       	breq	.-14     	; 0x67c8 <strcasestr+0x1a>
    67d6:	fb 01       	movw	r30, r22
    67d8:	41 11       	cpse	r20, r1
    67da:	ee cf       	rjmp	.-36     	; 0x67b8 <strcasestr+0xa>
    67dc:	81 e0       	ldi	r24, 0x01	; 1
    67de:	90 e0       	ldi	r25, 0x00	; 0
    67e0:	01 97       	sbiw	r24, 0x01	; 1
    67e2:	08 95       	ret
    67e4:	40 25       	eor	r20, r0
    67e6:	39 f0       	breq	.+14     	; 0x67f6 <strcasestr+0x48>
    67e8:	40 32       	cpi	r20, 0x20	; 32
    67ea:	29 f4       	brne	.+10     	; 0x67f6 <strcasestr+0x48>
    67ec:	40 29       	or	r20, r0
    67ee:	4b 57       	subi	r20, 0x7B	; 123
    67f0:	46 5e       	subi	r20, 0xE6	; 230
    67f2:	08 f0       	brcs	.+2      	; 0x67f6 <strcasestr+0x48>
    67f4:	18 94       	sez
    67f6:	08 95       	ret

000067f8 <strcat>:
    67f8:	fb 01       	movw	r30, r22
    67fa:	dc 01       	movw	r26, r24
    67fc:	0d 90       	ld	r0, X+
    67fe:	00 20       	and	r0, r0
    6800:	e9 f7       	brne	.-6      	; 0x67fc <strcat+0x4>
    6802:	11 97       	sbiw	r26, 0x01	; 1
    6804:	01 90       	ld	r0, Z+
    6806:	0d 92       	st	X+, r0
    6808:	00 20       	and	r0, r0
    680a:	e1 f7       	brne	.-8      	; 0x6804 <strcat+0xc>
    680c:	08 95       	ret

0000680e <strcpy>:
    680e:	fb 01       	movw	r30, r22
    6810:	dc 01       	movw	r26, r24
    6812:	01 90       	ld	r0, Z+
    6814:	0d 92       	st	X+, r0
    6816:	00 20       	and	r0, r0
    6818:	e1 f7       	brne	.-8      	; 0x6812 <strcpy+0x4>
    681a:	08 95       	ret

0000681c <strncasecmp>:
    681c:	fb 01       	movw	r30, r22
    681e:	dc 01       	movw	r26, r24
    6820:	41 50       	subi	r20, 0x01	; 1
    6822:	50 40       	sbci	r21, 0x00	; 0
    6824:	88 f0       	brcs	.+34     	; 0x6848 <strncasecmp+0x2c>
    6826:	8d 91       	ld	r24, X+
    6828:	81 34       	cpi	r24, 0x41	; 65
    682a:	1c f0       	brlt	.+6      	; 0x6832 <strncasecmp+0x16>
    682c:	8b 35       	cpi	r24, 0x5B	; 91
    682e:	0c f4       	brge	.+2      	; 0x6832 <strncasecmp+0x16>
    6830:	80 5e       	subi	r24, 0xE0	; 224
    6832:	61 91       	ld	r22, Z+
    6834:	61 34       	cpi	r22, 0x41	; 65
    6836:	1c f0       	brlt	.+6      	; 0x683e <strncasecmp+0x22>
    6838:	6b 35       	cpi	r22, 0x5B	; 91
    683a:	0c f4       	brge	.+2      	; 0x683e <strncasecmp+0x22>
    683c:	60 5e       	subi	r22, 0xE0	; 224
    683e:	86 1b       	sub	r24, r22
    6840:	61 11       	cpse	r22, r1
    6842:	71 f3       	breq	.-36     	; 0x6820 <strncasecmp+0x4>
    6844:	99 0b       	sbc	r25, r25
    6846:	08 95       	ret
    6848:	88 1b       	sub	r24, r24
    684a:	fc cf       	rjmp	.-8      	; 0x6844 <strncasecmp+0x28>

0000684c <printf>:
    684c:	cf 93       	push	r28
    684e:	df 93       	push	r29
    6850:	cd b7       	in	r28, 0x3d	; 61
    6852:	de b7       	in	r29, 0x3e	; 62
    6854:	ae 01       	movw	r20, r28
    6856:	4a 5f       	subi	r20, 0xFA	; 250
    6858:	5f 4f       	sbci	r21, 0xFF	; 255
    685a:	fa 01       	movw	r30, r20
    685c:	61 91       	ld	r22, Z+
    685e:	71 91       	ld	r23, Z+
    6860:	af 01       	movw	r20, r30
    6862:	80 91 ef 13 	lds	r24, 0x13EF	; 0x8013ef <__iob+0x2>
    6866:	90 91 f0 13 	lds	r25, 0x13F0	; 0x8013f0 <__iob+0x3>
    686a:	61 d0       	rcall	.+194    	; 0x692e <vfprintf>
    686c:	df 91       	pop	r29
    686e:	cf 91       	pop	r28
    6870:	08 95       	ret

00006872 <puts>:
    6872:	0f 93       	push	r16
    6874:	1f 93       	push	r17
    6876:	cf 93       	push	r28
    6878:	df 93       	push	r29
    687a:	e0 91 ef 13 	lds	r30, 0x13EF	; 0x8013ef <__iob+0x2>
    687e:	f0 91 f0 13 	lds	r31, 0x13F0	; 0x8013f0 <__iob+0x3>
    6882:	23 81       	ldd	r18, Z+3	; 0x03
    6884:	21 ff       	sbrs	r18, 1
    6886:	1b c0       	rjmp	.+54     	; 0x68be <puts+0x4c>
    6888:	8c 01       	movw	r16, r24
    688a:	d0 e0       	ldi	r29, 0x00	; 0
    688c:	c0 e0       	ldi	r28, 0x00	; 0
    688e:	f8 01       	movw	r30, r16
    6890:	81 91       	ld	r24, Z+
    6892:	8f 01       	movw	r16, r30
    6894:	60 91 ef 13 	lds	r22, 0x13EF	; 0x8013ef <__iob+0x2>
    6898:	70 91 f0 13 	lds	r23, 0x13F0	; 0x8013f0 <__iob+0x3>
    689c:	db 01       	movw	r26, r22
    689e:	18 96       	adiw	r26, 0x08	; 8
    68a0:	ed 91       	ld	r30, X+
    68a2:	fc 91       	ld	r31, X
    68a4:	19 97       	sbiw	r26, 0x09	; 9
    68a6:	88 23       	and	r24, r24
    68a8:	31 f0       	breq	.+12     	; 0x68b6 <puts+0x44>
    68aa:	19 95       	eicall
    68ac:	89 2b       	or	r24, r25
    68ae:	79 f3       	breq	.-34     	; 0x688e <puts+0x1c>
    68b0:	df ef       	ldi	r29, 0xFF	; 255
    68b2:	cf ef       	ldi	r28, 0xFF	; 255
    68b4:	ec cf       	rjmp	.-40     	; 0x688e <puts+0x1c>
    68b6:	8a e0       	ldi	r24, 0x0A	; 10
    68b8:	19 95       	eicall
    68ba:	89 2b       	or	r24, r25
    68bc:	19 f0       	breq	.+6      	; 0x68c4 <puts+0x52>
    68be:	8f ef       	ldi	r24, 0xFF	; 255
    68c0:	9f ef       	ldi	r25, 0xFF	; 255
    68c2:	02 c0       	rjmp	.+4      	; 0x68c8 <puts+0x56>
    68c4:	8d 2f       	mov	r24, r29
    68c6:	9c 2f       	mov	r25, r28
    68c8:	df 91       	pop	r29
    68ca:	cf 91       	pop	r28
    68cc:	1f 91       	pop	r17
    68ce:	0f 91       	pop	r16
    68d0:	08 95       	ret

000068d2 <sprintf>:
    68d2:	0f 93       	push	r16
    68d4:	1f 93       	push	r17
    68d6:	cf 93       	push	r28
    68d8:	df 93       	push	r29
    68da:	cd b7       	in	r28, 0x3d	; 61
    68dc:	de b7       	in	r29, 0x3e	; 62
    68de:	2e 97       	sbiw	r28, 0x0e	; 14
    68e0:	0f b6       	in	r0, 0x3f	; 63
    68e2:	f8 94       	cli
    68e4:	de bf       	out	0x3e, r29	; 62
    68e6:	0f be       	out	0x3f, r0	; 63
    68e8:	cd bf       	out	0x3d, r28	; 61
    68ea:	0e 89       	ldd	r16, Y+22	; 0x16
    68ec:	1f 89       	ldd	r17, Y+23	; 0x17
    68ee:	86 e0       	ldi	r24, 0x06	; 6
    68f0:	8c 83       	std	Y+4, r24	; 0x04
    68f2:	1a 83       	std	Y+2, r17	; 0x02
    68f4:	09 83       	std	Y+1, r16	; 0x01
    68f6:	8f ef       	ldi	r24, 0xFF	; 255
    68f8:	9f e7       	ldi	r25, 0x7F	; 127
    68fa:	9e 83       	std	Y+6, r25	; 0x06
    68fc:	8d 83       	std	Y+5, r24	; 0x05
    68fe:	ae 01       	movw	r20, r28
    6900:	46 5e       	subi	r20, 0xE6	; 230
    6902:	5f 4f       	sbci	r21, 0xFF	; 255
    6904:	68 8d       	ldd	r22, Y+24	; 0x18
    6906:	79 8d       	ldd	r23, Y+25	; 0x19
    6908:	ce 01       	movw	r24, r28
    690a:	01 96       	adiw	r24, 0x01	; 1
    690c:	10 d0       	rcall	.+32     	; 0x692e <vfprintf>
    690e:	ef 81       	ldd	r30, Y+7	; 0x07
    6910:	f8 85       	ldd	r31, Y+8	; 0x08
    6912:	e0 0f       	add	r30, r16
    6914:	f1 1f       	adc	r31, r17
    6916:	10 82       	st	Z, r1
    6918:	2e 96       	adiw	r28, 0x0e	; 14
    691a:	0f b6       	in	r0, 0x3f	; 63
    691c:	f8 94       	cli
    691e:	de bf       	out	0x3e, r29	; 62
    6920:	0f be       	out	0x3f, r0	; 63
    6922:	cd bf       	out	0x3d, r28	; 61
    6924:	df 91       	pop	r29
    6926:	cf 91       	pop	r28
    6928:	1f 91       	pop	r17
    692a:	0f 91       	pop	r16
    692c:	08 95       	ret

0000692e <vfprintf>:
    692e:	2f 92       	push	r2
    6930:	3f 92       	push	r3
    6932:	4f 92       	push	r4
    6934:	5f 92       	push	r5
    6936:	6f 92       	push	r6
    6938:	7f 92       	push	r7
    693a:	8f 92       	push	r8
    693c:	9f 92       	push	r9
    693e:	af 92       	push	r10
    6940:	bf 92       	push	r11
    6942:	cf 92       	push	r12
    6944:	df 92       	push	r13
    6946:	ef 92       	push	r14
    6948:	ff 92       	push	r15
    694a:	0f 93       	push	r16
    694c:	1f 93       	push	r17
    694e:	cf 93       	push	r28
    6950:	df 93       	push	r29
    6952:	cd b7       	in	r28, 0x3d	; 61
    6954:	de b7       	in	r29, 0x3e	; 62
    6956:	2b 97       	sbiw	r28, 0x0b	; 11
    6958:	0f b6       	in	r0, 0x3f	; 63
    695a:	f8 94       	cli
    695c:	de bf       	out	0x3e, r29	; 62
    695e:	0f be       	out	0x3f, r0	; 63
    6960:	cd bf       	out	0x3d, r28	; 61
    6962:	6c 01       	movw	r12, r24
    6964:	7b 01       	movw	r14, r22
    6966:	8a 01       	movw	r16, r20
    6968:	fc 01       	movw	r30, r24
    696a:	17 82       	std	Z+7, r1	; 0x07
    696c:	16 82       	std	Z+6, r1	; 0x06
    696e:	83 81       	ldd	r24, Z+3	; 0x03
    6970:	81 ff       	sbrs	r24, 1
    6972:	bf c1       	rjmp	.+894    	; 0x6cf2 <vfprintf+0x3c4>
    6974:	ce 01       	movw	r24, r28
    6976:	01 96       	adiw	r24, 0x01	; 1
    6978:	3c 01       	movw	r6, r24
    697a:	f6 01       	movw	r30, r12
    697c:	93 81       	ldd	r25, Z+3	; 0x03
    697e:	f7 01       	movw	r30, r14
    6980:	93 fd       	sbrc	r25, 3
    6982:	85 91       	lpm	r24, Z+
    6984:	93 ff       	sbrs	r25, 3
    6986:	81 91       	ld	r24, Z+
    6988:	7f 01       	movw	r14, r30
    698a:	88 23       	and	r24, r24
    698c:	09 f4       	brne	.+2      	; 0x6990 <vfprintf+0x62>
    698e:	ad c1       	rjmp	.+858    	; 0x6cea <vfprintf+0x3bc>
    6990:	85 32       	cpi	r24, 0x25	; 37
    6992:	39 f4       	brne	.+14     	; 0x69a2 <vfprintf+0x74>
    6994:	93 fd       	sbrc	r25, 3
    6996:	85 91       	lpm	r24, Z+
    6998:	93 ff       	sbrs	r25, 3
    699a:	81 91       	ld	r24, Z+
    699c:	7f 01       	movw	r14, r30
    699e:	85 32       	cpi	r24, 0x25	; 37
    69a0:	21 f4       	brne	.+8      	; 0x69aa <vfprintf+0x7c>
    69a2:	b6 01       	movw	r22, r12
    69a4:	90 e0       	ldi	r25, 0x00	; 0
    69a6:	d6 d1       	rcall	.+940    	; 0x6d54 <fputc>
    69a8:	e8 cf       	rjmp	.-48     	; 0x697a <vfprintf+0x4c>
    69aa:	91 2c       	mov	r9, r1
    69ac:	21 2c       	mov	r2, r1
    69ae:	31 2c       	mov	r3, r1
    69b0:	ff e1       	ldi	r31, 0x1F	; 31
    69b2:	f3 15       	cp	r31, r3
    69b4:	d8 f0       	brcs	.+54     	; 0x69ec <vfprintf+0xbe>
    69b6:	8b 32       	cpi	r24, 0x2B	; 43
    69b8:	79 f0       	breq	.+30     	; 0x69d8 <vfprintf+0xaa>
    69ba:	38 f4       	brcc	.+14     	; 0x69ca <vfprintf+0x9c>
    69bc:	80 32       	cpi	r24, 0x20	; 32
    69be:	79 f0       	breq	.+30     	; 0x69de <vfprintf+0xb0>
    69c0:	83 32       	cpi	r24, 0x23	; 35
    69c2:	a1 f4       	brne	.+40     	; 0x69ec <vfprintf+0xbe>
    69c4:	23 2d       	mov	r18, r3
    69c6:	20 61       	ori	r18, 0x10	; 16
    69c8:	1d c0       	rjmp	.+58     	; 0x6a04 <vfprintf+0xd6>
    69ca:	8d 32       	cpi	r24, 0x2D	; 45
    69cc:	61 f0       	breq	.+24     	; 0x69e6 <vfprintf+0xb8>
    69ce:	80 33       	cpi	r24, 0x30	; 48
    69d0:	69 f4       	brne	.+26     	; 0x69ec <vfprintf+0xbe>
    69d2:	23 2d       	mov	r18, r3
    69d4:	21 60       	ori	r18, 0x01	; 1
    69d6:	16 c0       	rjmp	.+44     	; 0x6a04 <vfprintf+0xd6>
    69d8:	83 2d       	mov	r24, r3
    69da:	82 60       	ori	r24, 0x02	; 2
    69dc:	38 2e       	mov	r3, r24
    69de:	e3 2d       	mov	r30, r3
    69e0:	e4 60       	ori	r30, 0x04	; 4
    69e2:	3e 2e       	mov	r3, r30
    69e4:	2a c0       	rjmp	.+84     	; 0x6a3a <vfprintf+0x10c>
    69e6:	f3 2d       	mov	r31, r3
    69e8:	f8 60       	ori	r31, 0x08	; 8
    69ea:	1d c0       	rjmp	.+58     	; 0x6a26 <vfprintf+0xf8>
    69ec:	37 fc       	sbrc	r3, 7
    69ee:	2d c0       	rjmp	.+90     	; 0x6a4a <vfprintf+0x11c>
    69f0:	20 ed       	ldi	r18, 0xD0	; 208
    69f2:	28 0f       	add	r18, r24
    69f4:	2a 30       	cpi	r18, 0x0A	; 10
    69f6:	40 f0       	brcs	.+16     	; 0x6a08 <vfprintf+0xda>
    69f8:	8e 32       	cpi	r24, 0x2E	; 46
    69fa:	b9 f4       	brne	.+46     	; 0x6a2a <vfprintf+0xfc>
    69fc:	36 fc       	sbrc	r3, 6
    69fe:	75 c1       	rjmp	.+746    	; 0x6cea <vfprintf+0x3bc>
    6a00:	23 2d       	mov	r18, r3
    6a02:	20 64       	ori	r18, 0x40	; 64
    6a04:	32 2e       	mov	r3, r18
    6a06:	19 c0       	rjmp	.+50     	; 0x6a3a <vfprintf+0x10c>
    6a08:	36 fe       	sbrs	r3, 6
    6a0a:	06 c0       	rjmp	.+12     	; 0x6a18 <vfprintf+0xea>
    6a0c:	8a e0       	ldi	r24, 0x0A	; 10
    6a0e:	98 9e       	mul	r9, r24
    6a10:	20 0d       	add	r18, r0
    6a12:	11 24       	eor	r1, r1
    6a14:	92 2e       	mov	r9, r18
    6a16:	11 c0       	rjmp	.+34     	; 0x6a3a <vfprintf+0x10c>
    6a18:	ea e0       	ldi	r30, 0x0A	; 10
    6a1a:	2e 9e       	mul	r2, r30
    6a1c:	20 0d       	add	r18, r0
    6a1e:	11 24       	eor	r1, r1
    6a20:	22 2e       	mov	r2, r18
    6a22:	f3 2d       	mov	r31, r3
    6a24:	f0 62       	ori	r31, 0x20	; 32
    6a26:	3f 2e       	mov	r3, r31
    6a28:	08 c0       	rjmp	.+16     	; 0x6a3a <vfprintf+0x10c>
    6a2a:	8c 36       	cpi	r24, 0x6C	; 108
    6a2c:	21 f4       	brne	.+8      	; 0x6a36 <vfprintf+0x108>
    6a2e:	83 2d       	mov	r24, r3
    6a30:	80 68       	ori	r24, 0x80	; 128
    6a32:	38 2e       	mov	r3, r24
    6a34:	02 c0       	rjmp	.+4      	; 0x6a3a <vfprintf+0x10c>
    6a36:	88 36       	cpi	r24, 0x68	; 104
    6a38:	41 f4       	brne	.+16     	; 0x6a4a <vfprintf+0x11c>
    6a3a:	f7 01       	movw	r30, r14
    6a3c:	93 fd       	sbrc	r25, 3
    6a3e:	85 91       	lpm	r24, Z+
    6a40:	93 ff       	sbrs	r25, 3
    6a42:	81 91       	ld	r24, Z+
    6a44:	7f 01       	movw	r14, r30
    6a46:	81 11       	cpse	r24, r1
    6a48:	b3 cf       	rjmp	.-154    	; 0x69b0 <vfprintf+0x82>
    6a4a:	98 2f       	mov	r25, r24
    6a4c:	9f 7d       	andi	r25, 0xDF	; 223
    6a4e:	95 54       	subi	r25, 0x45	; 69
    6a50:	93 30       	cpi	r25, 0x03	; 3
    6a52:	28 f4       	brcc	.+10     	; 0x6a5e <vfprintf+0x130>
    6a54:	0c 5f       	subi	r16, 0xFC	; 252
    6a56:	1f 4f       	sbci	r17, 0xFF	; 255
    6a58:	9f e3       	ldi	r25, 0x3F	; 63
    6a5a:	99 83       	std	Y+1, r25	; 0x01
    6a5c:	0d c0       	rjmp	.+26     	; 0x6a78 <vfprintf+0x14a>
    6a5e:	83 36       	cpi	r24, 0x63	; 99
    6a60:	31 f0       	breq	.+12     	; 0x6a6e <vfprintf+0x140>
    6a62:	83 37       	cpi	r24, 0x73	; 115
    6a64:	71 f0       	breq	.+28     	; 0x6a82 <vfprintf+0x154>
    6a66:	83 35       	cpi	r24, 0x53	; 83
    6a68:	09 f0       	breq	.+2      	; 0x6a6c <vfprintf+0x13e>
    6a6a:	55 c0       	rjmp	.+170    	; 0x6b16 <vfprintf+0x1e8>
    6a6c:	20 c0       	rjmp	.+64     	; 0x6aae <vfprintf+0x180>
    6a6e:	f8 01       	movw	r30, r16
    6a70:	80 81       	ld	r24, Z
    6a72:	89 83       	std	Y+1, r24	; 0x01
    6a74:	0e 5f       	subi	r16, 0xFE	; 254
    6a76:	1f 4f       	sbci	r17, 0xFF	; 255
    6a78:	88 24       	eor	r8, r8
    6a7a:	83 94       	inc	r8
    6a7c:	91 2c       	mov	r9, r1
    6a7e:	53 01       	movw	r10, r6
    6a80:	12 c0       	rjmp	.+36     	; 0x6aa6 <vfprintf+0x178>
    6a82:	28 01       	movw	r4, r16
    6a84:	f2 e0       	ldi	r31, 0x02	; 2
    6a86:	4f 0e       	add	r4, r31
    6a88:	51 1c       	adc	r5, r1
    6a8a:	f8 01       	movw	r30, r16
    6a8c:	a0 80       	ld	r10, Z
    6a8e:	b1 80       	ldd	r11, Z+1	; 0x01
    6a90:	36 fe       	sbrs	r3, 6
    6a92:	03 c0       	rjmp	.+6      	; 0x6a9a <vfprintf+0x16c>
    6a94:	69 2d       	mov	r22, r9
    6a96:	70 e0       	ldi	r23, 0x00	; 0
    6a98:	02 c0       	rjmp	.+4      	; 0x6a9e <vfprintf+0x170>
    6a9a:	6f ef       	ldi	r22, 0xFF	; 255
    6a9c:	7f ef       	ldi	r23, 0xFF	; 255
    6a9e:	c5 01       	movw	r24, r10
    6aa0:	4e d1       	rcall	.+668    	; 0x6d3e <strnlen>
    6aa2:	4c 01       	movw	r8, r24
    6aa4:	82 01       	movw	r16, r4
    6aa6:	f3 2d       	mov	r31, r3
    6aa8:	ff 77       	andi	r31, 0x7F	; 127
    6aaa:	3f 2e       	mov	r3, r31
    6aac:	15 c0       	rjmp	.+42     	; 0x6ad8 <vfprintf+0x1aa>
    6aae:	28 01       	movw	r4, r16
    6ab0:	22 e0       	ldi	r18, 0x02	; 2
    6ab2:	42 0e       	add	r4, r18
    6ab4:	51 1c       	adc	r5, r1
    6ab6:	f8 01       	movw	r30, r16
    6ab8:	a0 80       	ld	r10, Z
    6aba:	b1 80       	ldd	r11, Z+1	; 0x01
    6abc:	36 fe       	sbrs	r3, 6
    6abe:	03 c0       	rjmp	.+6      	; 0x6ac6 <vfprintf+0x198>
    6ac0:	69 2d       	mov	r22, r9
    6ac2:	70 e0       	ldi	r23, 0x00	; 0
    6ac4:	02 c0       	rjmp	.+4      	; 0x6aca <vfprintf+0x19c>
    6ac6:	6f ef       	ldi	r22, 0xFF	; 255
    6ac8:	7f ef       	ldi	r23, 0xFF	; 255
    6aca:	c5 01       	movw	r24, r10
    6acc:	2d d1       	rcall	.+602    	; 0x6d28 <strnlen_P>
    6ace:	4c 01       	movw	r8, r24
    6ad0:	f3 2d       	mov	r31, r3
    6ad2:	f0 68       	ori	r31, 0x80	; 128
    6ad4:	3f 2e       	mov	r3, r31
    6ad6:	82 01       	movw	r16, r4
    6ad8:	33 fc       	sbrc	r3, 3
    6ada:	19 c0       	rjmp	.+50     	; 0x6b0e <vfprintf+0x1e0>
    6adc:	82 2d       	mov	r24, r2
    6ade:	90 e0       	ldi	r25, 0x00	; 0
    6ae0:	88 16       	cp	r8, r24
    6ae2:	99 06       	cpc	r9, r25
    6ae4:	a0 f4       	brcc	.+40     	; 0x6b0e <vfprintf+0x1e0>
    6ae6:	b6 01       	movw	r22, r12
    6ae8:	80 e2       	ldi	r24, 0x20	; 32
    6aea:	90 e0       	ldi	r25, 0x00	; 0
    6aec:	33 d1       	rcall	.+614    	; 0x6d54 <fputc>
    6aee:	2a 94       	dec	r2
    6af0:	f5 cf       	rjmp	.-22     	; 0x6adc <vfprintf+0x1ae>
    6af2:	f5 01       	movw	r30, r10
    6af4:	37 fc       	sbrc	r3, 7
    6af6:	85 91       	lpm	r24, Z+
    6af8:	37 fe       	sbrs	r3, 7
    6afa:	81 91       	ld	r24, Z+
    6afc:	5f 01       	movw	r10, r30
    6afe:	b6 01       	movw	r22, r12
    6b00:	90 e0       	ldi	r25, 0x00	; 0
    6b02:	28 d1       	rcall	.+592    	; 0x6d54 <fputc>
    6b04:	21 10       	cpse	r2, r1
    6b06:	2a 94       	dec	r2
    6b08:	21 e0       	ldi	r18, 0x01	; 1
    6b0a:	82 1a       	sub	r8, r18
    6b0c:	91 08       	sbc	r9, r1
    6b0e:	81 14       	cp	r8, r1
    6b10:	91 04       	cpc	r9, r1
    6b12:	79 f7       	brne	.-34     	; 0x6af2 <vfprintf+0x1c4>
    6b14:	e1 c0       	rjmp	.+450    	; 0x6cd8 <vfprintf+0x3aa>
    6b16:	84 36       	cpi	r24, 0x64	; 100
    6b18:	11 f0       	breq	.+4      	; 0x6b1e <vfprintf+0x1f0>
    6b1a:	89 36       	cpi	r24, 0x69	; 105
    6b1c:	39 f5       	brne	.+78     	; 0x6b6c <vfprintf+0x23e>
    6b1e:	f8 01       	movw	r30, r16
    6b20:	37 fe       	sbrs	r3, 7
    6b22:	07 c0       	rjmp	.+14     	; 0x6b32 <vfprintf+0x204>
    6b24:	60 81       	ld	r22, Z
    6b26:	71 81       	ldd	r23, Z+1	; 0x01
    6b28:	82 81       	ldd	r24, Z+2	; 0x02
    6b2a:	93 81       	ldd	r25, Z+3	; 0x03
    6b2c:	0c 5f       	subi	r16, 0xFC	; 252
    6b2e:	1f 4f       	sbci	r17, 0xFF	; 255
    6b30:	08 c0       	rjmp	.+16     	; 0x6b42 <vfprintf+0x214>
    6b32:	60 81       	ld	r22, Z
    6b34:	71 81       	ldd	r23, Z+1	; 0x01
    6b36:	07 2e       	mov	r0, r23
    6b38:	00 0c       	add	r0, r0
    6b3a:	88 0b       	sbc	r24, r24
    6b3c:	99 0b       	sbc	r25, r25
    6b3e:	0e 5f       	subi	r16, 0xFE	; 254
    6b40:	1f 4f       	sbci	r17, 0xFF	; 255
    6b42:	f3 2d       	mov	r31, r3
    6b44:	ff 76       	andi	r31, 0x6F	; 111
    6b46:	3f 2e       	mov	r3, r31
    6b48:	97 ff       	sbrs	r25, 7
    6b4a:	09 c0       	rjmp	.+18     	; 0x6b5e <vfprintf+0x230>
    6b4c:	90 95       	com	r25
    6b4e:	80 95       	com	r24
    6b50:	70 95       	com	r23
    6b52:	61 95       	neg	r22
    6b54:	7f 4f       	sbci	r23, 0xFF	; 255
    6b56:	8f 4f       	sbci	r24, 0xFF	; 255
    6b58:	9f 4f       	sbci	r25, 0xFF	; 255
    6b5a:	f0 68       	ori	r31, 0x80	; 128
    6b5c:	3f 2e       	mov	r3, r31
    6b5e:	2a e0       	ldi	r18, 0x0A	; 10
    6b60:	30 e0       	ldi	r19, 0x00	; 0
    6b62:	a3 01       	movw	r20, r6
    6b64:	33 d1       	rcall	.+614    	; 0x6dcc <__ultoa_invert>
    6b66:	88 2e       	mov	r8, r24
    6b68:	86 18       	sub	r8, r6
    6b6a:	44 c0       	rjmp	.+136    	; 0x6bf4 <vfprintf+0x2c6>
    6b6c:	85 37       	cpi	r24, 0x75	; 117
    6b6e:	31 f4       	brne	.+12     	; 0x6b7c <vfprintf+0x24e>
    6b70:	23 2d       	mov	r18, r3
    6b72:	2f 7e       	andi	r18, 0xEF	; 239
    6b74:	b2 2e       	mov	r11, r18
    6b76:	2a e0       	ldi	r18, 0x0A	; 10
    6b78:	30 e0       	ldi	r19, 0x00	; 0
    6b7a:	25 c0       	rjmp	.+74     	; 0x6bc6 <vfprintf+0x298>
    6b7c:	93 2d       	mov	r25, r3
    6b7e:	99 7f       	andi	r25, 0xF9	; 249
    6b80:	b9 2e       	mov	r11, r25
    6b82:	8f 36       	cpi	r24, 0x6F	; 111
    6b84:	c1 f0       	breq	.+48     	; 0x6bb6 <vfprintf+0x288>
    6b86:	18 f4       	brcc	.+6      	; 0x6b8e <vfprintf+0x260>
    6b88:	88 35       	cpi	r24, 0x58	; 88
    6b8a:	79 f0       	breq	.+30     	; 0x6baa <vfprintf+0x27c>
    6b8c:	ae c0       	rjmp	.+348    	; 0x6cea <vfprintf+0x3bc>
    6b8e:	80 37       	cpi	r24, 0x70	; 112
    6b90:	19 f0       	breq	.+6      	; 0x6b98 <vfprintf+0x26a>
    6b92:	88 37       	cpi	r24, 0x78	; 120
    6b94:	21 f0       	breq	.+8      	; 0x6b9e <vfprintf+0x270>
    6b96:	a9 c0       	rjmp	.+338    	; 0x6cea <vfprintf+0x3bc>
    6b98:	e9 2f       	mov	r30, r25
    6b9a:	e0 61       	ori	r30, 0x10	; 16
    6b9c:	be 2e       	mov	r11, r30
    6b9e:	b4 fe       	sbrs	r11, 4
    6ba0:	0d c0       	rjmp	.+26     	; 0x6bbc <vfprintf+0x28e>
    6ba2:	fb 2d       	mov	r31, r11
    6ba4:	f4 60       	ori	r31, 0x04	; 4
    6ba6:	bf 2e       	mov	r11, r31
    6ba8:	09 c0       	rjmp	.+18     	; 0x6bbc <vfprintf+0x28e>
    6baa:	34 fe       	sbrs	r3, 4
    6bac:	0a c0       	rjmp	.+20     	; 0x6bc2 <vfprintf+0x294>
    6bae:	29 2f       	mov	r18, r25
    6bb0:	26 60       	ori	r18, 0x06	; 6
    6bb2:	b2 2e       	mov	r11, r18
    6bb4:	06 c0       	rjmp	.+12     	; 0x6bc2 <vfprintf+0x294>
    6bb6:	28 e0       	ldi	r18, 0x08	; 8
    6bb8:	30 e0       	ldi	r19, 0x00	; 0
    6bba:	05 c0       	rjmp	.+10     	; 0x6bc6 <vfprintf+0x298>
    6bbc:	20 e1       	ldi	r18, 0x10	; 16
    6bbe:	30 e0       	ldi	r19, 0x00	; 0
    6bc0:	02 c0       	rjmp	.+4      	; 0x6bc6 <vfprintf+0x298>
    6bc2:	20 e1       	ldi	r18, 0x10	; 16
    6bc4:	32 e0       	ldi	r19, 0x02	; 2
    6bc6:	f8 01       	movw	r30, r16
    6bc8:	b7 fe       	sbrs	r11, 7
    6bca:	07 c0       	rjmp	.+14     	; 0x6bda <vfprintf+0x2ac>
    6bcc:	60 81       	ld	r22, Z
    6bce:	71 81       	ldd	r23, Z+1	; 0x01
    6bd0:	82 81       	ldd	r24, Z+2	; 0x02
    6bd2:	93 81       	ldd	r25, Z+3	; 0x03
    6bd4:	0c 5f       	subi	r16, 0xFC	; 252
    6bd6:	1f 4f       	sbci	r17, 0xFF	; 255
    6bd8:	06 c0       	rjmp	.+12     	; 0x6be6 <vfprintf+0x2b8>
    6bda:	60 81       	ld	r22, Z
    6bdc:	71 81       	ldd	r23, Z+1	; 0x01
    6bde:	80 e0       	ldi	r24, 0x00	; 0
    6be0:	90 e0       	ldi	r25, 0x00	; 0
    6be2:	0e 5f       	subi	r16, 0xFE	; 254
    6be4:	1f 4f       	sbci	r17, 0xFF	; 255
    6be6:	a3 01       	movw	r20, r6
    6be8:	f1 d0       	rcall	.+482    	; 0x6dcc <__ultoa_invert>
    6bea:	88 2e       	mov	r8, r24
    6bec:	86 18       	sub	r8, r6
    6bee:	fb 2d       	mov	r31, r11
    6bf0:	ff 77       	andi	r31, 0x7F	; 127
    6bf2:	3f 2e       	mov	r3, r31
    6bf4:	36 fe       	sbrs	r3, 6
    6bf6:	0d c0       	rjmp	.+26     	; 0x6c12 <vfprintf+0x2e4>
    6bf8:	23 2d       	mov	r18, r3
    6bfa:	2e 7f       	andi	r18, 0xFE	; 254
    6bfc:	a2 2e       	mov	r10, r18
    6bfe:	89 14       	cp	r8, r9
    6c00:	58 f4       	brcc	.+22     	; 0x6c18 <vfprintf+0x2ea>
    6c02:	34 fe       	sbrs	r3, 4
    6c04:	0b c0       	rjmp	.+22     	; 0x6c1c <vfprintf+0x2ee>
    6c06:	32 fc       	sbrc	r3, 2
    6c08:	09 c0       	rjmp	.+18     	; 0x6c1c <vfprintf+0x2ee>
    6c0a:	83 2d       	mov	r24, r3
    6c0c:	8e 7e       	andi	r24, 0xEE	; 238
    6c0e:	a8 2e       	mov	r10, r24
    6c10:	05 c0       	rjmp	.+10     	; 0x6c1c <vfprintf+0x2ee>
    6c12:	b8 2c       	mov	r11, r8
    6c14:	a3 2c       	mov	r10, r3
    6c16:	03 c0       	rjmp	.+6      	; 0x6c1e <vfprintf+0x2f0>
    6c18:	b8 2c       	mov	r11, r8
    6c1a:	01 c0       	rjmp	.+2      	; 0x6c1e <vfprintf+0x2f0>
    6c1c:	b9 2c       	mov	r11, r9
    6c1e:	a4 fe       	sbrs	r10, 4
    6c20:	0f c0       	rjmp	.+30     	; 0x6c40 <vfprintf+0x312>
    6c22:	fe 01       	movw	r30, r28
    6c24:	e8 0d       	add	r30, r8
    6c26:	f1 1d       	adc	r31, r1
    6c28:	80 81       	ld	r24, Z
    6c2a:	80 33       	cpi	r24, 0x30	; 48
    6c2c:	21 f4       	brne	.+8      	; 0x6c36 <vfprintf+0x308>
    6c2e:	9a 2d       	mov	r25, r10
    6c30:	99 7e       	andi	r25, 0xE9	; 233
    6c32:	a9 2e       	mov	r10, r25
    6c34:	09 c0       	rjmp	.+18     	; 0x6c48 <vfprintf+0x31a>
    6c36:	a2 fe       	sbrs	r10, 2
    6c38:	06 c0       	rjmp	.+12     	; 0x6c46 <vfprintf+0x318>
    6c3a:	b3 94       	inc	r11
    6c3c:	b3 94       	inc	r11
    6c3e:	04 c0       	rjmp	.+8      	; 0x6c48 <vfprintf+0x31a>
    6c40:	8a 2d       	mov	r24, r10
    6c42:	86 78       	andi	r24, 0x86	; 134
    6c44:	09 f0       	breq	.+2      	; 0x6c48 <vfprintf+0x31a>
    6c46:	b3 94       	inc	r11
    6c48:	a3 fc       	sbrc	r10, 3
    6c4a:	10 c0       	rjmp	.+32     	; 0x6c6c <vfprintf+0x33e>
    6c4c:	a0 fe       	sbrs	r10, 0
    6c4e:	06 c0       	rjmp	.+12     	; 0x6c5c <vfprintf+0x32e>
    6c50:	b2 14       	cp	r11, r2
    6c52:	80 f4       	brcc	.+32     	; 0x6c74 <vfprintf+0x346>
    6c54:	28 0c       	add	r2, r8
    6c56:	92 2c       	mov	r9, r2
    6c58:	9b 18       	sub	r9, r11
    6c5a:	0d c0       	rjmp	.+26     	; 0x6c76 <vfprintf+0x348>
    6c5c:	b2 14       	cp	r11, r2
    6c5e:	58 f4       	brcc	.+22     	; 0x6c76 <vfprintf+0x348>
    6c60:	b6 01       	movw	r22, r12
    6c62:	80 e2       	ldi	r24, 0x20	; 32
    6c64:	90 e0       	ldi	r25, 0x00	; 0
    6c66:	76 d0       	rcall	.+236    	; 0x6d54 <fputc>
    6c68:	b3 94       	inc	r11
    6c6a:	f8 cf       	rjmp	.-16     	; 0x6c5c <vfprintf+0x32e>
    6c6c:	b2 14       	cp	r11, r2
    6c6e:	18 f4       	brcc	.+6      	; 0x6c76 <vfprintf+0x348>
    6c70:	2b 18       	sub	r2, r11
    6c72:	02 c0       	rjmp	.+4      	; 0x6c78 <vfprintf+0x34a>
    6c74:	98 2c       	mov	r9, r8
    6c76:	21 2c       	mov	r2, r1
    6c78:	a4 fe       	sbrs	r10, 4
    6c7a:	0f c0       	rjmp	.+30     	; 0x6c9a <vfprintf+0x36c>
    6c7c:	b6 01       	movw	r22, r12
    6c7e:	80 e3       	ldi	r24, 0x30	; 48
    6c80:	90 e0       	ldi	r25, 0x00	; 0
    6c82:	68 d0       	rcall	.+208    	; 0x6d54 <fputc>
    6c84:	a2 fe       	sbrs	r10, 2
    6c86:	16 c0       	rjmp	.+44     	; 0x6cb4 <vfprintf+0x386>
    6c88:	a1 fc       	sbrc	r10, 1
    6c8a:	03 c0       	rjmp	.+6      	; 0x6c92 <vfprintf+0x364>
    6c8c:	88 e7       	ldi	r24, 0x78	; 120
    6c8e:	90 e0       	ldi	r25, 0x00	; 0
    6c90:	02 c0       	rjmp	.+4      	; 0x6c96 <vfprintf+0x368>
    6c92:	88 e5       	ldi	r24, 0x58	; 88
    6c94:	90 e0       	ldi	r25, 0x00	; 0
    6c96:	b6 01       	movw	r22, r12
    6c98:	0c c0       	rjmp	.+24     	; 0x6cb2 <vfprintf+0x384>
    6c9a:	8a 2d       	mov	r24, r10
    6c9c:	86 78       	andi	r24, 0x86	; 134
    6c9e:	51 f0       	breq	.+20     	; 0x6cb4 <vfprintf+0x386>
    6ca0:	a1 fe       	sbrs	r10, 1
    6ca2:	02 c0       	rjmp	.+4      	; 0x6ca8 <vfprintf+0x37a>
    6ca4:	8b e2       	ldi	r24, 0x2B	; 43
    6ca6:	01 c0       	rjmp	.+2      	; 0x6caa <vfprintf+0x37c>
    6ca8:	80 e2       	ldi	r24, 0x20	; 32
    6caa:	a7 fc       	sbrc	r10, 7
    6cac:	8d e2       	ldi	r24, 0x2D	; 45
    6cae:	b6 01       	movw	r22, r12
    6cb0:	90 e0       	ldi	r25, 0x00	; 0
    6cb2:	50 d0       	rcall	.+160    	; 0x6d54 <fputc>
    6cb4:	89 14       	cp	r8, r9
    6cb6:	30 f4       	brcc	.+12     	; 0x6cc4 <vfprintf+0x396>
    6cb8:	b6 01       	movw	r22, r12
    6cba:	80 e3       	ldi	r24, 0x30	; 48
    6cbc:	90 e0       	ldi	r25, 0x00	; 0
    6cbe:	4a d0       	rcall	.+148    	; 0x6d54 <fputc>
    6cc0:	9a 94       	dec	r9
    6cc2:	f8 cf       	rjmp	.-16     	; 0x6cb4 <vfprintf+0x386>
    6cc4:	8a 94       	dec	r8
    6cc6:	f3 01       	movw	r30, r6
    6cc8:	e8 0d       	add	r30, r8
    6cca:	f1 1d       	adc	r31, r1
    6ccc:	80 81       	ld	r24, Z
    6cce:	b6 01       	movw	r22, r12
    6cd0:	90 e0       	ldi	r25, 0x00	; 0
    6cd2:	40 d0       	rcall	.+128    	; 0x6d54 <fputc>
    6cd4:	81 10       	cpse	r8, r1
    6cd6:	f6 cf       	rjmp	.-20     	; 0x6cc4 <vfprintf+0x396>
    6cd8:	22 20       	and	r2, r2
    6cda:	09 f4       	brne	.+2      	; 0x6cde <vfprintf+0x3b0>
    6cdc:	4e ce       	rjmp	.-868    	; 0x697a <vfprintf+0x4c>
    6cde:	b6 01       	movw	r22, r12
    6ce0:	80 e2       	ldi	r24, 0x20	; 32
    6ce2:	90 e0       	ldi	r25, 0x00	; 0
    6ce4:	37 d0       	rcall	.+110    	; 0x6d54 <fputc>
    6ce6:	2a 94       	dec	r2
    6ce8:	f7 cf       	rjmp	.-18     	; 0x6cd8 <vfprintf+0x3aa>
    6cea:	f6 01       	movw	r30, r12
    6cec:	86 81       	ldd	r24, Z+6	; 0x06
    6cee:	97 81       	ldd	r25, Z+7	; 0x07
    6cf0:	02 c0       	rjmp	.+4      	; 0x6cf6 <vfprintf+0x3c8>
    6cf2:	8f ef       	ldi	r24, 0xFF	; 255
    6cf4:	9f ef       	ldi	r25, 0xFF	; 255
    6cf6:	2b 96       	adiw	r28, 0x0b	; 11
    6cf8:	0f b6       	in	r0, 0x3f	; 63
    6cfa:	f8 94       	cli
    6cfc:	de bf       	out	0x3e, r29	; 62
    6cfe:	0f be       	out	0x3f, r0	; 63
    6d00:	cd bf       	out	0x3d, r28	; 61
    6d02:	df 91       	pop	r29
    6d04:	cf 91       	pop	r28
    6d06:	1f 91       	pop	r17
    6d08:	0f 91       	pop	r16
    6d0a:	ff 90       	pop	r15
    6d0c:	ef 90       	pop	r14
    6d0e:	df 90       	pop	r13
    6d10:	cf 90       	pop	r12
    6d12:	bf 90       	pop	r11
    6d14:	af 90       	pop	r10
    6d16:	9f 90       	pop	r9
    6d18:	8f 90       	pop	r8
    6d1a:	7f 90       	pop	r7
    6d1c:	6f 90       	pop	r6
    6d1e:	5f 90       	pop	r5
    6d20:	4f 90       	pop	r4
    6d22:	3f 90       	pop	r3
    6d24:	2f 90       	pop	r2
    6d26:	08 95       	ret

00006d28 <strnlen_P>:
    6d28:	fc 01       	movw	r30, r24
    6d2a:	05 90       	lpm	r0, Z+
    6d2c:	61 50       	subi	r22, 0x01	; 1
    6d2e:	70 40       	sbci	r23, 0x00	; 0
    6d30:	01 10       	cpse	r0, r1
    6d32:	d8 f7       	brcc	.-10     	; 0x6d2a <strnlen_P+0x2>
    6d34:	80 95       	com	r24
    6d36:	90 95       	com	r25
    6d38:	8e 0f       	add	r24, r30
    6d3a:	9f 1f       	adc	r25, r31
    6d3c:	08 95       	ret

00006d3e <strnlen>:
    6d3e:	fc 01       	movw	r30, r24
    6d40:	61 50       	subi	r22, 0x01	; 1
    6d42:	70 40       	sbci	r23, 0x00	; 0
    6d44:	01 90       	ld	r0, Z+
    6d46:	01 10       	cpse	r0, r1
    6d48:	d8 f7       	brcc	.-10     	; 0x6d40 <strnlen+0x2>
    6d4a:	80 95       	com	r24
    6d4c:	90 95       	com	r25
    6d4e:	8e 0f       	add	r24, r30
    6d50:	9f 1f       	adc	r25, r31
    6d52:	08 95       	ret

00006d54 <fputc>:
    6d54:	0f 93       	push	r16
    6d56:	1f 93       	push	r17
    6d58:	cf 93       	push	r28
    6d5a:	df 93       	push	r29
    6d5c:	fb 01       	movw	r30, r22
    6d5e:	23 81       	ldd	r18, Z+3	; 0x03
    6d60:	21 fd       	sbrc	r18, 1
    6d62:	03 c0       	rjmp	.+6      	; 0x6d6a <fputc+0x16>
    6d64:	8f ef       	ldi	r24, 0xFF	; 255
    6d66:	9f ef       	ldi	r25, 0xFF	; 255
    6d68:	2c c0       	rjmp	.+88     	; 0x6dc2 <fputc+0x6e>
    6d6a:	22 ff       	sbrs	r18, 2
    6d6c:	16 c0       	rjmp	.+44     	; 0x6d9a <fputc+0x46>
    6d6e:	46 81       	ldd	r20, Z+6	; 0x06
    6d70:	57 81       	ldd	r21, Z+7	; 0x07
    6d72:	24 81       	ldd	r18, Z+4	; 0x04
    6d74:	35 81       	ldd	r19, Z+5	; 0x05
    6d76:	42 17       	cp	r20, r18
    6d78:	53 07       	cpc	r21, r19
    6d7a:	44 f4       	brge	.+16     	; 0x6d8c <fputc+0x38>
    6d7c:	a0 81       	ld	r26, Z
    6d7e:	b1 81       	ldd	r27, Z+1	; 0x01
    6d80:	9d 01       	movw	r18, r26
    6d82:	2f 5f       	subi	r18, 0xFF	; 255
    6d84:	3f 4f       	sbci	r19, 0xFF	; 255
    6d86:	31 83       	std	Z+1, r19	; 0x01
    6d88:	20 83       	st	Z, r18
    6d8a:	8c 93       	st	X, r24
    6d8c:	26 81       	ldd	r18, Z+6	; 0x06
    6d8e:	37 81       	ldd	r19, Z+7	; 0x07
    6d90:	2f 5f       	subi	r18, 0xFF	; 255
    6d92:	3f 4f       	sbci	r19, 0xFF	; 255
    6d94:	37 83       	std	Z+7, r19	; 0x07
    6d96:	26 83       	std	Z+6, r18	; 0x06
    6d98:	14 c0       	rjmp	.+40     	; 0x6dc2 <fputc+0x6e>
    6d9a:	8b 01       	movw	r16, r22
    6d9c:	ec 01       	movw	r28, r24
    6d9e:	fb 01       	movw	r30, r22
    6da0:	00 84       	ldd	r0, Z+8	; 0x08
    6da2:	f1 85       	ldd	r31, Z+9	; 0x09
    6da4:	e0 2d       	mov	r30, r0
    6da6:	19 95       	eicall
    6da8:	89 2b       	or	r24, r25
    6daa:	e1 f6       	brne	.-72     	; 0x6d64 <fputc+0x10>
    6dac:	d8 01       	movw	r26, r16
    6dae:	16 96       	adiw	r26, 0x06	; 6
    6db0:	8d 91       	ld	r24, X+
    6db2:	9c 91       	ld	r25, X
    6db4:	17 97       	sbiw	r26, 0x07	; 7
    6db6:	01 96       	adiw	r24, 0x01	; 1
    6db8:	17 96       	adiw	r26, 0x07	; 7
    6dba:	9c 93       	st	X, r25
    6dbc:	8e 93       	st	-X, r24
    6dbe:	16 97       	sbiw	r26, 0x06	; 6
    6dc0:	ce 01       	movw	r24, r28
    6dc2:	df 91       	pop	r29
    6dc4:	cf 91       	pop	r28
    6dc6:	1f 91       	pop	r17
    6dc8:	0f 91       	pop	r16
    6dca:	08 95       	ret

00006dcc <__ultoa_invert>:
    6dcc:	fa 01       	movw	r30, r20
    6dce:	aa 27       	eor	r26, r26
    6dd0:	28 30       	cpi	r18, 0x08	; 8
    6dd2:	51 f1       	breq	.+84     	; 0x6e28 <__ultoa_invert+0x5c>
    6dd4:	20 31       	cpi	r18, 0x10	; 16
    6dd6:	81 f1       	breq	.+96     	; 0x6e38 <__ultoa_invert+0x6c>
    6dd8:	e8 94       	clt
    6dda:	6f 93       	push	r22
    6ddc:	6e 7f       	andi	r22, 0xFE	; 254
    6dde:	6e 5f       	subi	r22, 0xFE	; 254
    6de0:	7f 4f       	sbci	r23, 0xFF	; 255
    6de2:	8f 4f       	sbci	r24, 0xFF	; 255
    6de4:	9f 4f       	sbci	r25, 0xFF	; 255
    6de6:	af 4f       	sbci	r26, 0xFF	; 255
    6de8:	b1 e0       	ldi	r27, 0x01	; 1
    6dea:	3e d0       	rcall	.+124    	; 0x6e68 <__ultoa_invert+0x9c>
    6dec:	b4 e0       	ldi	r27, 0x04	; 4
    6dee:	3c d0       	rcall	.+120    	; 0x6e68 <__ultoa_invert+0x9c>
    6df0:	67 0f       	add	r22, r23
    6df2:	78 1f       	adc	r23, r24
    6df4:	89 1f       	adc	r24, r25
    6df6:	9a 1f       	adc	r25, r26
    6df8:	a1 1d       	adc	r26, r1
    6dfa:	68 0f       	add	r22, r24
    6dfc:	79 1f       	adc	r23, r25
    6dfe:	8a 1f       	adc	r24, r26
    6e00:	91 1d       	adc	r25, r1
    6e02:	a1 1d       	adc	r26, r1
    6e04:	6a 0f       	add	r22, r26
    6e06:	71 1d       	adc	r23, r1
    6e08:	81 1d       	adc	r24, r1
    6e0a:	91 1d       	adc	r25, r1
    6e0c:	a1 1d       	adc	r26, r1
    6e0e:	20 d0       	rcall	.+64     	; 0x6e50 <__ultoa_invert+0x84>
    6e10:	09 f4       	brne	.+2      	; 0x6e14 <__ultoa_invert+0x48>
    6e12:	68 94       	set
    6e14:	3f 91       	pop	r19
    6e16:	2a e0       	ldi	r18, 0x0A	; 10
    6e18:	26 9f       	mul	r18, r22
    6e1a:	11 24       	eor	r1, r1
    6e1c:	30 19       	sub	r19, r0
    6e1e:	30 5d       	subi	r19, 0xD0	; 208
    6e20:	31 93       	st	Z+, r19
    6e22:	de f6       	brtc	.-74     	; 0x6dda <__ultoa_invert+0xe>
    6e24:	cf 01       	movw	r24, r30
    6e26:	08 95       	ret
    6e28:	46 2f       	mov	r20, r22
    6e2a:	47 70       	andi	r20, 0x07	; 7
    6e2c:	40 5d       	subi	r20, 0xD0	; 208
    6e2e:	41 93       	st	Z+, r20
    6e30:	b3 e0       	ldi	r27, 0x03	; 3
    6e32:	0f d0       	rcall	.+30     	; 0x6e52 <__ultoa_invert+0x86>
    6e34:	c9 f7       	brne	.-14     	; 0x6e28 <__ultoa_invert+0x5c>
    6e36:	f6 cf       	rjmp	.-20     	; 0x6e24 <__ultoa_invert+0x58>
    6e38:	46 2f       	mov	r20, r22
    6e3a:	4f 70       	andi	r20, 0x0F	; 15
    6e3c:	40 5d       	subi	r20, 0xD0	; 208
    6e3e:	4a 33       	cpi	r20, 0x3A	; 58
    6e40:	18 f0       	brcs	.+6      	; 0x6e48 <__ultoa_invert+0x7c>
    6e42:	49 5d       	subi	r20, 0xD9	; 217
    6e44:	31 fd       	sbrc	r19, 1
    6e46:	40 52       	subi	r20, 0x20	; 32
    6e48:	41 93       	st	Z+, r20
    6e4a:	02 d0       	rcall	.+4      	; 0x6e50 <__ultoa_invert+0x84>
    6e4c:	a9 f7       	brne	.-22     	; 0x6e38 <__ultoa_invert+0x6c>
    6e4e:	ea cf       	rjmp	.-44     	; 0x6e24 <__ultoa_invert+0x58>
    6e50:	b4 e0       	ldi	r27, 0x04	; 4
    6e52:	a6 95       	lsr	r26
    6e54:	97 95       	ror	r25
    6e56:	87 95       	ror	r24
    6e58:	77 95       	ror	r23
    6e5a:	67 95       	ror	r22
    6e5c:	ba 95       	dec	r27
    6e5e:	c9 f7       	brne	.-14     	; 0x6e52 <__ultoa_invert+0x86>
    6e60:	00 97       	sbiw	r24, 0x00	; 0
    6e62:	61 05       	cpc	r22, r1
    6e64:	71 05       	cpc	r23, r1
    6e66:	08 95       	ret
    6e68:	9b 01       	movw	r18, r22
    6e6a:	ac 01       	movw	r20, r24
    6e6c:	0a 2e       	mov	r0, r26
    6e6e:	06 94       	lsr	r0
    6e70:	57 95       	ror	r21
    6e72:	47 95       	ror	r20
    6e74:	37 95       	ror	r19
    6e76:	27 95       	ror	r18
    6e78:	ba 95       	dec	r27
    6e7a:	c9 f7       	brne	.-14     	; 0x6e6e <__ultoa_invert+0xa2>
    6e7c:	62 0f       	add	r22, r18
    6e7e:	73 1f       	adc	r23, r19
    6e80:	84 1f       	adc	r24, r20
    6e82:	95 1f       	adc	r25, r21
    6e84:	a0 1d       	adc	r26, r0
    6e86:	08 95       	ret

00006e88 <_exit>:
    6e88:	f8 94       	cli

00006e8a <__stop_program>:
    6e8a:	ff cf       	rjmp	.-2      	; 0x6e8a <__stop_program>
